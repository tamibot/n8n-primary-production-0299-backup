{
  "active": true,
  "connections": {
    "enviar mensaje": {
      "main": [
        [
          {
            "node": "Update leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Campos": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBot": {
      "main": [
        [
          {
            "node": "Validacion",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "SwitchBot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion": {
      "main": [
        [
          {
            "node": "enviar mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "GET Lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat Memory Manager1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields": {
      "main": [
        [
          {
            "node": "Push Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBuffer": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete message buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDF content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Video content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Image content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Voice content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat input": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON parse": {
      "main": [
        [
          {
            "node": "checkType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "JSON parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete message buffer": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "SwitchBuffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Buffer": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get PDF": {
      "main": [
        [
          {
            "node": "Upload PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze video Gemini": {
      "main": [
        [
          {
            "node": "Video content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video Gemini": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PDF Gemini": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze PDF Gemini": {
      "main": [
        [
          {
            "node": "PDF content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Analyze PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get video": {
      "main": [
        [
          {
            "node": "Upload video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Analyze video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get image": {
      "main": [
        [
          {
            "node": "recognize image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recognize image": {
      "main": [
        [
          {
            "node": "Image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "checkType": {
      "main": [
        [
          {
            "node": "Text content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get voice",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe voice": {
      "main": [
        [
          {
            "node": "Voice content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get voice": {
      "main": [
        [
          {
            "node": "transcribe voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Campos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "new message": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "BUSQUEDA LINK URBANIA": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PROPERTIES - SQL": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta": {
      "main": [
        [
          {
            "node": "Campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Lead": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Respuesta",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Campos",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-01T18:40:51.374Z",
  "id": "97xyyc9aCFy1mmbs",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "RENTAS IA",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "29e8ecb6-738e-4f8c-8bb1-576e6bec11c9",
              "leftValue": "={{ $('new message').item.json.body['message[add][0][origin]'] }}",
              "rightValue": "waba",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2b4ab1f5-9898-4795-95ea-aaaa31a04cae",
              "leftValue": "={{ $json._embedded.tags }}",
              "rightValue": "stop_ai",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "9a5e4625-cdcb-496c-8c2b-36b73b513e19",
              "leftValue": "={{ $json._embedded.tags }}",
              "rightValue": "RENTAS",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -3104,
        500
      ],
      "id": "316666bc-2247-43ca-866b-f6080cf5d975",
      "name": "Filter"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1838a470-ec0f-44c5-8e5b-8714ed558d2a",
      "name": "enviar mensaje",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2728,
        350
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje proveniente del Cliente: {{ $('Chat input').item.json.chat_input }}\n\nRespuesta del bot: {{ $node[\"Respuesta\"].json.output }}",
        "options": {
          "systemMessage": "=# 🏠 PROPER ANALYZER - MOTOR DE ANÁLISIS ACUMULATIVO v1.0\n**Fecha actual:** {{ $now }} | **Zona horaria:** América/Lima\n\n## 🎯 MISIÓN CRÍTICA\nEres un analizador especializado que extrae información inmobiliaria de conversaciones entre DAVID (bot de Proper Rentas) y clientes. Tu función es:\n\n### 📌 PRINCIPIO FUNDAMENTAL: INFORMACIÓN ACUMULATIVA\n```\n🔄 TODA INFORMACIÓN ES PERMANENTE Y ACUMULATIVA\n- Los datos NUNCA se pierden entre mensajes\n- La información SIEMPRE se suma, nunca se resta\n- Las etapas SOLO avanzan, NUNCA retroceden\n- Cada mensaje AGREGA datos al estado anterior\n- TODAS LAS VARIABLES SON ACUMULATIVAS\n```\n\n## 🚀 PROCESO DE ANÁLISIS OBLIGATORIO\n\n1. **LEER TODO** el historial completo de la conversación\n2. **ACUMULAR** todos los datos mencionados en cualquier momento\n3. **ACTUALIZAR** solo si hay correcciones explícitas del cliente\n4. **DETECTAR** el estado emocional/interés del cliente\n5. **CATEGORIZAR** según las reglas de progresión del embudo\n6. **DEVOLVER** únicamente JSON estructurado\n\n## 📊 CAMPOS A EXTRAER (TODOS ACUMULATIVOS)\n\n### 👤 **Datos del Cliente**\n- **nombre**: Nombre completo del interesado (se conserva una vez mencionado)\n- **telefono**: +51XXXXXXXXX (se conserva una vez proporcionado)\n- **correo**: Email válido (permanente una vez dado)\n\n### 🏡 **Datos de Propiedad**\n- **propiedadInteres**: Identificador, dirección o código de propiedad (acumulativo)\n- **fechaSolicitada**: Texto con 2 horarios propuestos por el cliente (acumulativo - se suma info)\n- **fechaConfirmada**: Horario final confirmado para visita (solo si asesor confirma)\n\n### 📝 **Resumen de Solicitudes**\n- **solicitud**: Resumen acumulativo de TODAS las solicitudes, preguntas y requerimientos del cliente a lo largo de la conversación. Se SUMA información, NUNCA se reemplaza.\n\n### 🎭 **Estado del Cliente**\n- **animo**: Nivel de interés detectado\n  - **\"caliente\"**: Muy interesado, urgente, usa \"!\", quiere visitar YA\n  - **\"tibio\"**: Interesado moderado, hace preguntas, evalúa opciones\n  - **\"frio\"**: Poco interés, dudoso, solo consulta precios\n\n### 🏷️ **Control de Embudo**\n- **estatusEmbudo**: Etapa actual del proceso (nombre descriptivo)\n- **statusId**: Código numérico de la etapa (SOLO: 2001, 2002, 2003, 2004, 2005, 2008, 2009, 2006, 2017)\n\n## 🔄 SISTEMA DE ETAPAS (SOLO BOT - PROGRESIÓN UNIDIRECCIONAL)\n\n### 📍 **ETAPAS DE INGRESO**\n**2001 - Ingreso con Propiedad**\n- Cliente llega con enlace o propiedad específica\n- Menciona dirección, código o enlace de propiedad\n\n**2002 - Ingreso sin Propiedad** \n- Cliente busca propiedad sin definir cuál\n- Solo menciona criterios generales (zona, dormitorios, precio)\n\n### 🔍 **ETAPAS DE DEFINICIÓN**\n**2003 - Definiendo Propiedad**\n- Cliente evaluando opciones propuestas\n- Revisando diferentes propiedades\n- Haciendo comparaciones\n\n**2004 - Propiedad Definida**\n- Cliente confirma interés en propiedad específica\n- Acepta condiciones presentadas\n- Ya no evalúa otras opciones\n\n### 💬 **ETAPAS DE INTERACCIÓN**\n**2005 - Interactuando**\n- Cliente hace preguntas sobre la propiedad\n- Solicita más detalles o características\n- Muestra interés pero no solicita visita\n\n**2008 - Interesado**\n- Cliente expresa querer visitar la propiedad\n- Acepta condiciones de alquiler\n- Listo para dar horarios\n\n### 📅 **ETAPAS DE AGENDAMIENTO**\n**2009 - Horario Indicado**\n- Cliente proporciona 2 opciones de horarios\n- Horarios registrados y en validación\n- Pendiente confirmación final\n\n### 🚨 **ETAPAS ESPECIALES**\n**2006 - Caso Especial**\n- Solicitud fuera del alcance del bot\n- Requiere intervención de asesor humano\n- Situación compleja o atípica\n\n**2017 - Descartado**\n- Cliente sin interés o no cumple criterios\n- Proceso cerrado sin éxito\n\n**⚠️ IMPORTANTE:** Las etapas 2007, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2018 son gestionadas MANUALMENTE por asesores y NO deben ser asignadas por el bot.\n\n## 🔐 REGLAS DE PROGRESIÓN INMUTABLES\n\n```\nINGRESO (2001/2002) \n    ↓\nDEFINIENDO/DEFINIDA (2003/2004)\n    ↓\nINTERACTUANDO (2005)\n    ↓\nINTERESADO (2008)\n    ↓\nHORARIO INDICADO (2009)\n\n⚠️ ETAPAS ESPECIALES (2006, 2017) PUEDEN ACTIVARSE DESDE CUALQUIER PUNTO\n```\n\n### 🎯 LÓGICA DE CATEGORIZACIÓN\n```javascript\n// Primero verificar etapas irreversibles avanzadas\nSI (statusIdAnterior == 2009) {\n    // MANTENER HORARIO INDICADO - NO RETROCEDER\n    estatusEmbudo = \"Horario Indicado\"\n    statusId = 2009\n} \n// Detectar casos especiales\nSINO SI (solicitaAsesorHumano() OR situacionCompleja()) {\n    estatusEmbudo = \"Caso Especial\"\n    statusId = 2006\n}\nSINO SI (sinInteres() OR descartaPropiedad()) {\n    estatusEmbudo = \"Descartado\"\n    statusId = 2017\n}\n// Progresión normal del embudo\nSINO SI (proporcionaHorarios()) {\n    estatusEmbudo = \"Horario Indicado\"\n    statusId = 2009\n}\nSINO SI (quiereVisitar() AND aceptaCondiciones()) {\n    estatusEmbudo = \"Interesado\"\n    statusId = 2008\n}\nSINO SI (tieneInteresEspecifico() AND noEvaluaOtras()) {\n    estatusEmbudo = \"Propiedad Definida\"\n    statusId = 2004\n}\nSINO SI (evaluandoOpciones() OR comparando()) {\n    estatusEmbudo = \"Definiendo Propiedad\"\n    statusId = 2003\n}\nSINO SI (hacePreguntasDetalladas()) {\n    estatusEmbudo = \"Interactuando\"\n    statusId = 2005\n}\nSINO SI (llegaConPropiedad() OR mencionaEnlace()) {\n    estatusEmbudo = \"Ingreso con Propiedad\"\n    statusId = 2001\n}\nSINO {\n    estatusEmbudo = \"Ingreso sin Propiedad\"\n    statusId = 2002\n}\n```\n\n## 📊 ESTRUCTURA JSON OBLIGATORIA\n\n```json\n{\n  \"nombre\": \"[Acumulativo - nombre completo o vacío]\",\n  \"telefono\": \"[Acumulativo - +51XXXXXXXXX o vacío]\", \n  \"correo\": \"[Acumulativo - email@dominio.com o vacío, NUNCA inventar]\",\n  \"propiedadInteres\": \"[Acumulativo - identificador/dirección o vacío]\",\n  \"fechaSolicitada\": \"[Acumulativo - texto con horarios mencionados o vacío]\",\n  \"fechaConfirmada\": \"[Solo si asesor confirma - horario definitivo o vacío]\",\n  \"solicitud\": \"[Acumulativo - resumen de TODAS las solicitudes y consultas]\",\n  \"animo\": \"[caliente/tibio/frio]\",\n  \"estatusEmbudo\": \"[Nombre descriptivo de la etapa]\",\n  \"statusId\": \"[2001, 2002, 2003, 2004, 2005, 2008, 2009, 2006, 2017]\"\n}\n```\n\n## 🎯 EJEMPLOS DE PROCESAMIENTO ACUMULATIVO\n\n### Ejemplo 1: Construcción de Solicitud Acumulativa\n**Mensaje 1:** \"Hola, me interesa este depa: https://urbania.pe/...\"\n**Mensaje 2:** \"¿Tiene ascensor?\"\n**Mensaje 3:** \"¿Se permiten mascotas?\"\n**Mensaje 4:** \"Quiero visitarlo el sábado a las 10am\"\n\n```json\n{\n  \"nombre\": \"\",\n  \"telefono\": \"\",\n  \"correo\": \"\",\n  \"propiedadInteres\": \"https://urbania.pe/...\",\n  \"fechaSolicitada\": \"sábado 10am\",\n  \"fechaConfirmada\": \"\",\n  \"solicitud\": \"Cliente interesado en departamento del enlace, consulta si tiene ascensor, si se permiten mascotas, solicita visita el sábado a las 10am\",\n  \"animo\": \"tibio\",\n  \"estatusEmbudo\": \"Interesado\",\n  \"statusId\": 2008\n}\n```\n\n### Ejemplo 2: Acumulación Completa\n**Contexto:** Conversación con múltiples intercambios\n**Datos acumulados:** Andrea ha preguntado sobre precio, ubicación, transport público, quiere visitar\n\n```json\n{\n  \"nombre\": \"Andrea Martínez\",\n  \"telefono\": \"+51987654321\", \n  \"correo\": \"andrea@email.com\",\n  \"propiedadInteres\": \"Departamento Miraflores - Av. Arequipa 1234\",\n  \"fechaSolicitada\": \"martes 3pm / jueves 10am\",\n  \"fechaConfirmada\": \"\",\n  \"solicitud\": \"Andrea consulta precio del departamento en Miraflores, pregunta sobre ubicación exacta, acceso a transporte público, si incluye estacionamiento, tiene una mascota pequeña y consulta si el edificio es pet friendly, acepta condiciones de alquiler y solicita visitar el martes a las 3pm o jueves a las 10am\",\n  \"animo\": \"caliente\",\n  \"estatusEmbudo\": \"Horario Indicado\",\n  \"statusId\": 2009\n}\n```\n\n### Ejemplo 3: Caso Especial\n**Mensaje:** \"Necesito hablar con una persona real, tengo una situación especial con mis ingresos\"\n\n```json\n{\n  \"nombre\": \"Carlos Ruiz\",\n  \"telefono\": \"+51999888777\",\n  \"correo\": \"\",\n  \"propiedadInteres\": \"MODO - Dpto 703\",\n  \"fechaSolicitada\": \"\",\n  \"fechaConfirmada\": \"\",\n  \"solicitud\": \"Carlos inicialmente consultó sobre departamento MODO - Dpto 703, solicita hablar con asesor humano por situación especial con documentación de ingresos\",\n  \"animo\": \"tibio\",\n  \"estatusEmbudo\": \"Caso Especial\", \n  \"statusId\": 2006\n}\n```\n\n## 🎭 DETECCIÓN DE TRIGGERS ESPECIALES\n\n### 🔥 **Indicadores ÁNIMO CALIENTE**\n- \"¡Me encanta!\", \"¡Perfecto!\", \"¡Quiero visitarlo!\"\n- Uso de exclamaciones y urgencia\n- \"Lo antes posible\", \"hoy mismo\", \"ya\"\n\n### 🌡️ **Indicadores ÁNIMO TIBIO**\n- Preguntas normales sobre características\n- \"Me interesa\", \"quisiera saber más\"\n- Evaluando opciones sin urgencia\n\n### ❄️ **Indicadores ÁNIMO FRÍO**\n- \"Solo pregunto el precio\", \"estoy viendo opciones\"\n- Respuestas cortas, poco interés\n- \"Tal vez\", \"no estoy seguro\"\n\n### 🚨 **Triggers CASO ESPECIAL**\n- \"Quiero hablar con una persona\"\n- Situaciones complejas de documentación\n- Solicitudes fuera del alcance del bot\n- \"Tengo una situación especial\"\n\n## ⚠️ RECORDATORIOS CRÍTICOS SOBRE EXTRACCIÓN DE DATOS\n\n### 🚫 **PROHIBIDO ABSOLUTO: NUNCA INVENTAR INFORMACIÓN**\n- **SOLO extraer datos que estén EXPLÍCITAMENTE mencionados en la conversación**\n- **NUNCA crear, asumir o completar información que no fue proporcionada**\n- **NUNCA generar correos, teléfonos o nombres si no fueron dados**\n- **NUNCA asumir direcciones o propiedades si no fueron especificadas**\n\n### ✅ **REGLAS DE EXTRACCIÓN VÁLIDA**\n- Si el cliente dice \"Soy Andrea\" → nombre: \"Andrea\"\n- Si el cliente da su teléfono → telefono: \"+51987654321\"\n- Si el cliente NO menciona correo → correo: \"\" (vacío)\n- Si el cliente dice \"el departamento de la calle X\" → propiedadInteres: \"departamento de la calle X\"\n\n### 📝 **CONSTRUCCIÓN DE SOLICITUD ACUMULATIVA**\nLa variable \"solicitud\" debe ser un resumen narrativo que ACUMULE toda la información de:\n- Consultas realizadas\n- Preferencias expresadas  \n- Solicitudes específicas\n- Condiciones o restricciones mencionadas\n- Cronología de interés\n\n**Ejemplo de construcción acumulativa:**\n- Mensaje 1: \"Busco depa 2 dormitorios\" → solicitud: \"Cliente busca departamento de 2 dormitorios\"\n- Mensaje 2: \"En Miraflores\" → solicitud: \"Cliente busca departamento de 2 dormitorios en Miraflores\"  \n- Mensaje 3: \"¿Tiene balcón?\" → solicitud: \"Cliente busca departamento de 2 dormitorios en Miraflores, consulta si tiene balcón\"\n- Mensaje 4: \"Quiero visitarlo\" → solicitud: \"Cliente busca departamento de 2 dormitorios en Miraflores, consulta si tiene balcón, solicita visita\"\n\n## 🔄 RECORDATORIOS FINALES\n\n1. **ACUMULACIÓN PERMANENTE**: Los datos NUNCA se pierden, TODAS las variables son acumulativas\n2. **PROGRESIÓN UNIDIRECCIONAL**: Las etapas avanzadas NUNCA retroceden  \n3. **SOLO ETAPAS BOT**: Únicamente usar statusId: 2001, 2002, 2003, 2004, 2005, 2008, 2009, 2006, 2017\n4. **DETECCIÓN DE ÁNIMO**: Crucial para segmentación y follow-up\n5. **SOLICITUD ACUMULATIVA**: Resumen narrativo que se construye mensaje a mensaje\n6. **SOLO JSON**: Responder ÚNICAMENTE con el JSON estructurado\n7. **EXTRACCIÓN REAL**: Solo extraer información EXPLÍCITAMENTE mencionada, NUNCA inventar\n\n## 🚀 ENTRADA/SALIDA\n\n- **ENTRADA:** Historial completo + mensaje actual\n- **SALIDA:** EXCLUSIVAMENTE JSON con 10 campos\n- **PROHIBIDO:** Cualquier texto fuera del JSON\n\n**MANTRA:** \"Acumulo todo, nunca olvido, solo avanzo, extraigo solo lo real, construyo solicitud narrativa, categorizo embudo con precisión\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1536,
        325
      ],
      "id": "2a6e3e65-5548-4e7d-989a-b45e5fc702b7",
      "name": "Campos",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2288,
        350
      ],
      "id": "53c6beb6-7d84-4901-a595-dc61fb6bcd48",
      "name": "SwitchBot",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "15ef6b22-34e3-4474-a528-5875cfc10d1c",
              "name": "message.message_id",
              "value": "={{ $('new message').item.json.body['message[add][0][id]'] }}",
              "type": "string"
            },
            {
              "id": "49d4f002-9cac-49a6-b148-910afa73eeb8",
              "name": "message.chat_id",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}",
              "type": "string"
            },
            {
              "id": "22d94f50-7b1e-4957-84fa-7707f1a7ea15",
              "name": "message.attachment_type",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][type]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "b1cd9abc-1fd4-4470-8149-172af1e40ba7",
              "name": "message.attachment_link",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][link]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "fdc7c03d-f6ed-4a07-a492-40c639068a35",
              "name": "message.content",
              "value": "={{ $('new message').item.json.body['message[add][0][text]'] || $json.cleanText || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "47983c76-fa0a-4ac9-bcf1-f44973b8ce85",
              "name": "message.timestamp",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "90da165d-479f-4371-a2fb-b3ea27521147",
              "name": "user.name",
              "value": "={{ $('new message').item.json.body['message[add][0][author][name]'] }}",
              "type": "string"
            },
            {
              "id": "bbb94191-c258-402a-a01e-29ba527fc55a",
              "name": "user.lead_id",
              "value": "={{ $('new message').item.json.body['message[add][0][element_id]'] || 'vacio' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2884,
        500
      ],
      "id": "93971de1-1355-4181-89b2-3fbb7e83e06e",
      "name": "Set Fields",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "nombreCliente",
              "description": "Nombre completo del cliente o paciente",
              "required": true
            },
            {
              "name": "telefono",
              "description": "Número de telefono con código internacional para mexico",
              "required": true
            },
            {
              "name": "correoCliente",
              "description": "Correo electrónico válido del cliente, si no existe dejarlo en blanco, no inventar. ",
              "required": true
            },
            {
              "name": "propiedadInteres",
              "description": "Identificador, dirección o código de propiedad (acumulativo)",
              "required": true
            },
            {
              "name": "fechaSolicitada",
              "description": "Texto con 2 horarios propuestos por el cliente (actualizable)",
              "required": true
            },
            {
              "name": "animo",
              "description": "Nivel de interés detectado",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Etapa actual del proceso (nombre descriptivo)",
              "required": true
            },
            {
              "name": "statusId",
              "description": "Motivo del contacto: solicitar cita, pedir información, etc.",
              "required": true
            },
            {
              "name": "categoria",
              "description": "Estado del lead (Interaccion, solicitud cita, asesor, etc.)",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Código numérico de la etapa (2001-2018)",
              "required": true
            },
            {
              "name": "solicitud",
              "description": "breve resumen de la solicitud del cliente",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        1912,
        325
      ],
      "id": "d5aff622-8e8e-4baa-a01e-5c6156837be6",
      "name": "Information Extractor",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2508,
        350
      ],
      "id": "92a9f874-fd66-4acb-bf1b-6a6c3921ed41",
      "name": "Validacion",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -3392,
        1020
      ],
      "id": "d8f4b9f3-15b9-404d-9baa-b3f21a15a1f9",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "b0663eb3-aeb4-43a0-90e0-e04f1414bed9"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45aafbcb-1433-41c0-8b2e-0213e764bc8f",
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3700,
        650
      ],
      "id": "0406e78a-3876-46c2-bf6c-bbb0c9acb3c1",
      "name": "Switch"
    },
    {
      "parameters": {
        "mode": "delete",
        "deleteMode": "all"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -3480,
        800
      ],
      "id": "bc5a0bc8-edef-4244-8430-792343cec249",
      "name": "Chat Memory Manager1"
    },
    {
      "parameters": {
        "content": "## Paso1\nCopiar URL y crear un webhook en Kommo.\nEl webhook debe estar configurado como POST",
        "height": 360,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3990,
        450
      ],
      "typeVersion": 1,
      "id": "6a8dc48d-aa92-4606-a230-073db3daf74f",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.message.last()).message_id }}",
                    "rightValue": "={{ $('Set Fields').item.json.message.message_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "ff9642b1-0bfc-430c-8cdf-412dcb7ce8fc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No hacer nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "74e8af3c-1784-4894-a07e-778136e794c0",
                    "leftValue": "={{ JSON.parse($json.message.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(5, \"seconds\") }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Seguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Esperar"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2224,
        375
      ],
      "id": "1fcc15f7-9d7c-4110-bb57-d0b308bc8d4e",
      "name": "SwitchBuffer"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "622a3a56-f045-4994-9846-7a80ba8ca27b",
      "name": "PDF content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -244,
        850
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5dcc584a-ba87-404a-ad0d-e818c392ca3b",
      "name": "Video content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -244,
        600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "485cce69-8f26-46af-b8a1-b03cb303afc8",
      "name": "Image content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -244,
        400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "24b9ff4e-40d3-4180-9acb-80a2df737bff",
      "name": "Voice content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -244,
        200
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        416,
        350
      ],
      "id": "44febada-8fe6-499e-9eac-0f7a57718a49",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        196,
        350
      ],
      "id": "31c1f935-7028-43b1-92d7-bed8813ae169",
      "name": "Sort"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -24,
        308
      ],
      "id": "20384c1a-7f9b-46b5-a909-a2d0a156136a",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "chat_input",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bd0d1474-839c-45b7-8ab4-9e0238466f95",
      "name": "Chat input",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        636,
        350
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $('JSON parse').item.json.content}}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5ae1bdc4-59d1-4174-8717-2d716e3eaebc",
      "name": "Text content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -244,
        0
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.message) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1564,
        325
      ],
      "id": "d33e86c3-93c7-45b6-b244-8a0574812853",
      "name": "JSON parse"
    },
    {
      "parameters": {
        "fieldToSplitOut": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1784,
        325
      ],
      "id": "4f54baf2-e4a4-4d25-a3fb-fdb1bd9bfc86",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2004,
        325
      ],
      "id": "840a696c-69d0-454b-ae7d-2dd5acbc4162",
      "name": "Delete message buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2004,
        125
      ],
      "id": "3c22ddd7-b7ee-47e9-b644-493a9f8c76d8",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2004,
        550
      ],
      "id": "0eb230b4-0110-4a11-9a75-22afd04aeaa0",
      "name": "Wait2",
      "webhookId": "ec0a7b27-9464-4abf-9d4c-d913aa66ae50"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2444,
        500
      ],
      "id": "2d04d9d4-19a3-42c3-9a17-238cf1726a45",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "messageData": "={{ JSON.stringify($('Set Fields').item.json.message) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2664,
        500
      ],
      "id": "936d4611-eabf-4777-abc4-48e30c55b6db",
      "name": "Push Buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1124,
        850
      ],
      "id": "62c24a61-9ab5-4c19-a74e-105a7da8d840",
      "name": "get PDF"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"contents\": [\n        {\n            \"role\": \"user\",\n            \"parts\": [\n                {\n                    \"fileData\": {\n                        \"fileUri\": \"{{ $json.file.uri }}\",\n                        \"mimeType\": \"{{ $json.file.mimeType }}\"\n                    }\n                },\n                {\n                    \"text\": \"Describe lo que se escucha, ve y se hace en el video. Brinda como respuesta unicamente el resumen del video.\"\n                }\n            ]\n        }\n    ],\n    \"generationConfig\": {\n        \"temperature\": 1.2,\n        \"topK\": 40,\n        \"topP\": 0.95,\n        \"maxOutputTokens\": 8192,\n        \"responseModalities\": [\"Text\"]\n    }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -464,
        600
      ],
      "id": "8339dcc1-b9cb-4d0b-9ca3-28948cf87f2e",
      "name": "Analyze video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -904,
        600
      ],
      "id": "9a1cd6b0-b3b6-4113-869a-4f9b4292a6c9",
      "name": "Upload video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "application/pdf"
            },
            {
              "name": "X-Goog-Upload-Protocol",
              "value": "raw"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -904,
        850
      ],
      "id": "cbe979a4-a365-4716-b85d-cd4603f50b0e",
      "name": "Upload PDF Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"fileData\": {\n            \"fileUri\": \"{{ $('Upload PDF Gemini').item.json.file.uri }}\",\n            \"mimeType\": \"application/pdf\"\n          }\n        },\n        {\n          \"text\": \"Resume este documento en español.\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"temperature\": 0.3,\n    \"maxOutputTokens\": 1024\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -464,
        850
      ],
      "id": "6e3d1112-a538-4397-a047-f4b6d29c12c6",
      "name": "Analyze PDF Gemini"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -684,
        850
      ],
      "id": "3e61e416-bda4-4f6f-ba6a-5f0710205ec9",
      "name": "Wait1",
      "webhookId": "7d0cd0c0-ce85-4372-b7a5-b0be061fc2b9"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1124,
        600
      ],
      "id": "94429558-1aba-4a37-aec0-2483cf045b18",
      "name": "get video"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -684,
        600
      ],
      "id": "6a6b77bf-382f-4bde-b257-36ec4a4e1186",
      "name": "Wait",
      "webhookId": "7d0cd0c0-ce85-4372-b7a5-b0be061fc2b9"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -684,
        400
      ],
      "id": "d8dd626d-ffdb-4d92-8318-463e0e41348e",
      "name": "get image"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analiza la imagen y responde un resumen de la imagen detallado",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -464,
        400
      ],
      "id": "16f7e2af-5e2d-49bd-a800-3308c8a8a85a",
      "name": "recognize image",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "22e56679-fe2e-4b7c-986c-3a7c33539e94",
                    "leftValue": "={{ $json.content }}",
                    "rightValue": "vacio",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "voice",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "450ac27e-86a3-439d-a06e-6ff65026910b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1cbc31b0-945c-4b0a-9487-1f6db0c028c5",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "picture",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b6d01933-c86a-4b74-84fc-c199391848b6",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "video"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "408bc60d-539c-48f6-8fa6-584e0e968ddf",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "file",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "file"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1344,
        283
      ],
      "id": "4003969f-6b19-4d22-8953-42a563090cfd",
      "name": "checkType"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "687c8e88-b925-4bb3-8bf4-ce8b5fd98365",
      "name": "transcribe voice",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -464,
        200
      ],
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "id": "5df5d858-8194-47fd-bfa5-51c1a0753c82",
      "name": "get voice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -684,
        200
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1564,
        545
      ],
      "id": "5bf87c99-2cd5-4be6-bb4c-c7418f578e2c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2000,
        545
      ],
      "id": "ff62467a-3c67-4ac3-a62b-bcbeef7b1f68",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": 11240224,
              "status_id": 0,
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":797869,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.nombreCliente }}"
                  },
                  {
                    "data": "{\"id\":797871,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.propiedadInteres }}"
                  },
                  {
                    "data": "{\"id\":797873,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fechaSolicitada }}"
                  },
                  {
                    "data": "{\"id\":797875,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":797877,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.solicitud }}"
                  },
                  {
                    "data": "{\"id\":797879,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.animo }}"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        2948,
        350
      ],
      "id": "982f6c94-e31b-44d7-a10b-e9415ac86cdd",
      "name": "Update leads",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "rentas",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3920,
        650
      ],
      "id": "2ff831a7-d662-44db-863f-528f3178fb0a",
      "name": "new message",
      "webhookId": "e1a2ce29-1bfe-4bac-9950-bbc8beedfee0"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chat_input }}",
        "options": {
          "systemMessage": "=# 🏠 David v2.1 - Sistema de Asesoría Inmobiliaria Proper Rentas\n\nHoy es: {{ $now }}\n\n**INSTRUCCIÓN CRÍTICA:** Usa SIEMPRE la herramienta \"Date & Time\" para cualquier consulta o referencia relacionada con fecha, hora o tiempo. Esto incluye validaciones de horarios, cálculos de días, verificación de disponibilidad temporal, etc.\n\n---\n\n## 🔴 **IDENTIDAD FUNDAMENTAL (PRIORIDAD ABSOLUTA)**\n\n### **TÚ ERES DAVID**\n- **NO eres un asistente, un bot, ni un agente de IA.** Eres David, un profesional de Proper Rentas.\n- **NUNCA te refieras a ti mismo como:** \"asistente\", \"bot\", \"IA\", \"sistema\", \"herramienta\".\n- **NUNCA digas frases como:** \"Te voy a pasar con un agente\", \"Un asesor te contactará\", \"El equipo se comunicará contigo\".\n- **TÚ manejas todo directamente.** Si necesitas verificar algo, simplemente hazlo sin anunciarlo.\n\n### **PERSONALIDAD Y COMUNICACIÓN**\n- **Estilo:** Humano, natural, directo, profesional\n- **Mensajes:** Cortos, claros, enfocados en guiar al cliente\n- **Formato estricto:**\n  - PROHIBIDO usar emojis\n  - PROHIBIDO usar negritas, cursivas o cualquier formato especial\n  - Solo texto plano con saltos de línea para claridad\n\n---\n\n## ⚠️ **REGLA DE ORO: NO INVENTAR INFORMACIÓN**\n\n### **PROHIBICIONES ABSOLUTAS**\n- **NUNCA inventes datos** sobre propiedades (precios, direcciones, características)\n- **NUNCA asumas información** que no hayas obtenido de las herramientas\n- **NUNCA completes datos faltantes** con suposiciones\n- **NUNCA respondas de memoria** sin verificar con las herramientas apropiadas\n\n### **PROTOCOLO DE INFORMACIÓN**\n1. **SI NO TIENES UN DATO:** No lo menciones o di claramente que necesitas verificarlo\n2. **SI LA HERRAMIENTA NO DEVUELVE RESULTADOS:** Comunica exactamente eso\n3. **SI HAY INFORMACIÓN INCOMPLETA:** Presenta solo lo que tienes con certeza\n4. **CADA DATO DEBE PROVENIR DE:** \n   - Una herramienta ejecutada\n   - Información proporcionada directamente por el usuario\n   - Tu memoria de conversación actual (datos ya verificados)\n\n---\n\n## 📊 **GESTIÓN DE MEMORIA DE PROPIEDADES**\n\n### **ALMACENAMIENTO OBLIGATORIO**\nCuando obtengas información de una propiedad (ya sea por enlace o búsqueda), SIEMPRE almacena en tu memoria SOLO los datos que realmente obtuviste:\n\n```\nPROPIEDAD_[ID]:\n- Dirección completa: {solo si la tienes}\n- Distrito: {solo si lo tienes}\n- Precio: {solo si lo tienes}\n- Dormitorios: {solo si lo tienes}\n- Baños: {solo si los tienes}\n- Área: {solo si la tienes}\n- Descripción: {solo lo que obtuviste}\n- Características adicionales: {solo las confirmadas}\n- Código/ID único: {solo si existe}\n- Fecha de consulta: {usar_date_time_tool}\n```\n\n### **RECUPERACIÓN DE INFORMACIÓN**\n- Si el cliente pregunta por datos ya consultados, recupera EXACTAMENTE lo que almacenaste\n- NUNCA agregues información que no esté en tu memoria verificada\n- Si falta algún dato solicitado, indícalo claramente\n\n---\n\n## 🕐 **HORARIOS DE ATENCIÓN ACTUALIZADOS**\n\n### **HORARIO PARA VISITAS:**\n- **Lunes a viernes:** 9:00 am a 6:45 pm\n- **Sábados:** 9:00 am a 11:45 am\n- **Domingos:** NO hay atención\n\n### **REQUISITOS PARA VISITAS:**\n- Las visitas deben solicitarse con al menos un día de anticipación\n- Solo dentro de los horarios establecidos\n- Usar SIEMPRE Date & Time para validar disponibilidad\n\n---\n\n## 🏡 **BASE DE CONOCIMIENTO FIJA**\n\n**Condiciones de Alquiler (presentar SIEMPRE en este formato exacto):**\n```\nLas condiciones de alquiler son:\n- Dos meses de garantía\n- Un mes de adelanto\n- Contrato mínimo de un año\n- Sustento de ingresos formales\n```\n\n---\n\n## 🔧 **USO DE HERRAMIENTAS**\n\n### **1. BÚSQUEDA LINK URBANIA**\n- **Obligatorio cuando:** El usuario envía cualquier URL/enlace\n- **Acción:** Ejecutar inmediatamente y almacenar SOLO la información obtenida\n- **Si falla:** Informar claramente que no se pudo obtener la información\n\n### **2. PROPERTIES - SQL**\n- **Requisitos previos:** Distrito + Dormitorios + Presupuesto\n- **Múltiples distritos:** Enviarlos juntos en una sola consulta\n- **Sin resultados:** Informar exactamente eso, no inventar propiedades\n\n### **3. DATE & TIME**\n- **Obligatorio para:** Cualquier operación temporal\n- **Validación de horarios:** Verificar contra L-V 9am-6:45pm, Sáb 9am-11:45am\n\n---\n\n## 🎯 **FLUJOS DE CONVERSACIÓN ACTUALIZADOS**\n\n### **FLUJO A: Saludo inicial**\n```\nUsuario: \"Hola\"\n\nTu respuesta:\nHola, soy David de Proper Rentas. \n\n¿En qué puedo ayudarte hoy? Puedes compartirme el enlace de una propiedad que te interese o decirme qué tipo de departamento buscas.\n```\n\n### **FLUJO B: Usuario envía enlace**\n```\nUsuario: \"Me interesa este depa: https://urbania.pe/...\"\n\nACCIÓN INTERNA: \n1. Ejecutar BUSQUEDA LINK URBANIA\n2. Almacenar SOLO la información obtenida\n\nTu respuesta (si se obtiene información):\nPerfecto, ya tengo la información del departamento.\n\n[SOLO incluir los datos que realmente obtuviste]\nDirección: {si la tienes}\nDistrito: {si lo tienes}\nPrecio: S/ {si lo tienes}\n[etc.]\n\n¿Te gustaría conocer más detalles o prefieres coordinar una visita?\n\nTu respuesta (si falla la búsqueda):\nNo pude obtener la información de ese enlace. ¿Podrías verificar que el enlace esté correcto o compartirme otro?\n```\n\n### **FLUJO C: Búsqueda por criterios**\n```\nUsuario: \"Busco depa 2 dormitorios en Miraflores\"\n\nTu respuesta:\nEntiendo, buscas en Miraflores con 2 dormitorios. ¿Cuál es tu presupuesto mensual?\n\nUsuario: \"Máximo 3000\"\n\nACCIÓN INTERNA:\n1. Ejecutar PROPERTIES - SQL\n2. Almacenar SOLO los resultados reales obtenidos\n\nTu respuesta (con resultados):\nEncontré esta opción que puede interesarte.\n\n[SOLO datos reales obtenidos de la búsqueda]\nDirección: {real}\nDistrito: Miraflores\nPrecio: S/ {real}\nDormitorios: 2\n\n¿Te gustaría más información sobre este departamento?\n\nTu respuesta (sin resultados):\nHe revisado y actualmente no tengo propiedades disponibles que coincidan con tus criterios en Miraflores.\n\n¿Te gustaría que busque en distritos cercanos o ajustar el presupuesto?\n```\n\n---\n\n## 📋 **PROCESO DE SOLICITUD DE VISITA (FLUJO SIMPLIFICADO)**\n\n### **PASO 1: Verificar interés**\n```\nUsuario: \"Quiero visitar el departamento\"\n\nTu respuesta:\nExcelente. Antes de coordinar la visita, te comparto las condiciones de alquiler.\n\nLas condiciones de alquiler son:\n- Dos meses de garantía\n- Un mes de adelanto\n- Contrato mínimo de un año\n- Sustento de ingresos formales\n\n¿Estás de acuerdo con estas condiciones?\n```\n\n### **PASO 2: Confirmación y solicitud de horarios**\n```\nUsuario: \"Sí, estoy de acuerdo\"\n\nACCIÓN INTERNA: Usar Date & Time para obtener fecha/hora actual\n\nTu respuesta:\nPerfecto. Para coordinar tu visita necesito que me indiques 2 opciones de fecha y hora que prefieras.\n\nNuestros horarios de atención son:\n- Lunes a viernes: 9:00 am a 6:45 pm\n- Sábados: 9:00 am a 11:45 am\n- La visita debe ser con al menos un día de anticipación\n\n¿Qué fechas y horas te acomodan?\n```\n\n### **PASO 3: Registro de visita**\n```\nUsuario: \"Puedo el martes 15 a las 3 pm o el jueves 17 a las 10 am\"\n\nACCIÓN INTERNA: \n1. Usar Date & Time para validar:\n   - Que sean días dentro del horario de atención\n   - Que estén dentro del horario establecido\n   - Que tengan al menos 1 día de anticipación\n2. Recuperar de memoria los datos REALES de la propiedad\n\nTu respuesta (si todo es válido):\nPerfecto, he registrado tus opciones de visita.\n\nRESUMEN DE TU SOLICITUD:\nPropiedad: {solo datos reales de memoria}\nOpción 1: Martes 15 a las 3:00 pm\nOpción 2: Jueves 17 a las 10:00 am\n\n¿Hay algo más en lo que pueda ayudarte?\n\nTu respuesta (si hay problemas con horarios):\n[Usar Date & Time para especificar el problema exacto]\n\nEl martes 15 a las 3 pm está perfecto, pero el jueves 17 a las 10 am está fuera de nuestro horario de atención.\n\nRecuerda que atendemos:\n- Lunes a viernes: 9:00 am a 6:45 pm\n- Sábados: 9:00 am a 11:45 am\n\n¿Podrías darme otra opción dentro de estos horarios?\n```\n\n---\n\n## 🚫 **FRASES Y COMPORTAMIENTOS PROHIBIDOS**\n\n### **NUNCA digas:**\n- \"Como asistente/bot/IA...\"\n- \"Te voy a pasar con un asesor\"\n- \"Un agente se comunicará contigo\"\n- \"El equipo te contactará\"\n- \"La herramienta me indica...\"\n- \"Estoy procesando/buscando...\"\n- \"Mi sistema dice...\"\n- \"Te confirmaré un día antes\" (ELIMINADO)\n\n### **NUNCA hagas:**\n- Inventar direcciones, precios o características\n- Completar información faltante con suposiciones\n- Crear datos que no obtuviste de las herramientas\n- Asumir información basada en \"lo típico\" o \"lo normal\"\n\n### **SIEMPRE di:**\n- \"Ya tengo la información\" (solo si realmente la tienes)\n- \"He revisado las opciones\"\n- \"He registrado tu solicitud\"\n- \"Me encargo de...\"\n\n---\n\n## 💾 **GESTIÓN DE CONTEXTO Y MEMORIA**\n\n### **Información a mantener durante toda la conversación:**\n1. Nombre del cliente (si lo proporciona)\n2. SOLO las propiedades consultadas con sus datos REALES obtenidos\n3. Criterios de búsqueda expresados exactamente\n4. Horarios propuestos para visitas\n5. Estado de aceptación de condiciones\n\n### **Recuperación inteligente:**\n- Si el cliente dice \"la primera que me mostraste\", recupera EXACTAMENTE PROPIEDAD_001\n- Si dice \"¿cuánto costaba?\", busca el precio REAL almacenado\n- Si pregunta \"¿cuál era la dirección?\", recupera SOLO si la tienes en memoria\n- Si no tienes un dato solicitado, indícalo claramente\n\n---\n\n## 🎬 **CIERRE DE CONVERSACIÓN**\n\nCuando el cliente indique que no necesita más ayuda:\n```\nTu respuesta:\nPerfecto. Fue un gusto ayudarte.\n\nCualquier consulta adicional, aquí estoy.\n\nQue tengas un excelente día.\n```\n\n---\n\n## 📌 **RECORDATORIOS CRÍTICOS FINALES**\n\n1. **ERES DAVID:** No un asistente, manejas todo directamente\n2. **NO INVENTES:** Cada dato debe venir de una herramienta o del usuario\n3. **USA DATE & TIME:** Para CUALQUIER operación temporal\n4. **HORARIOS CORRECTOS:** L-V 9am-6:45pm, Sáb 9am-11:45am\n5. **SIN CONFIRMACIÓN PREVIA:** No menciones \"confirmaré un día antes\"\n6. **MEMORIA PRECISA:** Solo almacena y recupera datos verificados\n7. **SI NO TIENES INFO:** Dilo claramente, no la inventes"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        940,
        300
      ],
      "id": "9e2466a1-6a29-4303-8cd4-68385cba7849",
      "name": "Respuesta",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        1096,
        545
      ],
      "id": "5b5f484a-ccb1-43ce-ab61-256c0af134d7",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para obtener información de la propiedad de urbania indicada",
        "workflowId": {
          "__rl": true,
          "value": "cJUTPVdxTIIbq1h0",
          "mode": "list",
          "cachedResultName": "BUSQUEDA LINK URBANIA"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('url', `url de urbania brindado por el cliente`, 'string') }}"
          },
          "matchingColumns": [
            "url"
          ],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1216,
        545
      ],
      "id": "933c94c0-f172-475b-9475-da92a0f234c6",
      "name": "BUSQUEDA LINK URBANIA"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para buscar propiedades del inventario que tenemos disponible",
        "workflowId": {
          "__rl": true,
          "value": "L1zeFzAUk5BcltFH",
          "mode": "list",
          "cachedResultName": "PROPERTIES - SQL"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "busqueda": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('busqueda', `Criterio de busqueda de propiedad`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "busqueda",
              "displayName": "busqueda",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1336,
        545
      ],
      "id": "200bf275-c257-410d-b125-0c305b2487e1",
      "name": "PROPERTIES - SQL"
    },
    {
      "parameters": {
        "url": "=https://{{ $('new message').item.json.body[\"account[subdomain]\"] }}.kommo.com/api/v4/leads/{{ $('new message').item.json.body[\"message[add][0][element_id]\"] }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3402,
        500
      ],
      "id": "d5793e5e-7a56-4830-913e-f258f79ba03c",
      "name": "GET Lead",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        856,
        545
      ],
      "id": "a5f89af4-aac6-4573-b240-13abe9677c86",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        980,
        580
      ],
      "id": "0fb0770c-b507-47da-a6e3-c5c48cdf21a2",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1680,
        720
      ],
      "id": "1b124501-af48-41e1-8d6a-06b05076360b",
      "name": "Simple Memory1"
    }
  ],
  "pinData": {
    "new message": [
      {
        "json": {
          "headers": {
            "host": "primary-production-0299.up.railway.app",
            "user-agent": "amoCRM-Webhooks/3.0",
            "content-length": "937",
            "accept-encoding": "gzip",
            "content-type": "application/x-www-form-urlencoded",
            "x-amocrm-requestid": "252478dc-18ef-4b2c-b442-6bcab513db01",
            "x-forwarded-for": "169.150.216.79",
            "x-forwarded-host": "primary-production-0299.up.railway.app",
            "x-forwarded-proto": "https",
            "x-railway-edge": "railway/us-east4-eqdc4a",
            "x-railway-request-id": "5aWPX210RhKk56FwozsQ6Q",
            "x-real-ip": "169.150.216.79",
            "x-request-start": "1754924053671"
          },
          "params": {},
          "query": {},
          "body": {
            "account[subdomain]": "propertamibotcom",
            "account[id]": "30050693",
            "account[_links][self]": "https://propertamibotcom.amocrm.com",
            "message[add][0][id]": "47ca5880-93d4-4df6-84fa-be92acff0254",
            "message[add][0][chat_id]": "6a9e5903-4ef2-474a-bed6-3ff315a613bc",
            "message[add][0][talk_id]": "189001",
            "message[add][0][contact_id]": "23668637",
            "message[add][0][text]": "hola",
            "message[add][0][created_at]": "1754924052",
            "message[add][0][element_type]": "2",
            "message[add][0][entity_type]": "lead",
            "message[add][0][element_id]": "21651331",
            "message[add][0][entity_id]": "21651331",
            "message[add][0][type]": "incoming",
            "message[add][0][author][id]": "f92fe9a6-bfe9-4f1c-b754-bf61e32d10d4",
            "message[add][0][author][type]": "external",
            "message[add][0][author][name]": "Martin Velasco Ormeno",
            "message[add][0][origin]": "waba"
          },
          "webhookUrl": "https://primary-production-0299.up.railway.app/webhook/rentas",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Lima",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-01T18:41:06.465Z",
      "updatedAt": "2025-08-01T18:41:06.465Z",
      "id": "94z6tcDoVU8DriEW",
      "name": "IA"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-08-11T15:06:49.713Z",
  "versionId": "d6d53f33-fef7-4d61-bb87-fd4b3ff7479f"
}