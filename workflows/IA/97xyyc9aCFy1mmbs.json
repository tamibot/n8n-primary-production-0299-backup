{
  "active": true,
  "connections": {
    "enviar mensaje": {
      "main": [
        [
          {
            "node": "Update leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Campos": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBot": {
      "main": [
        [
          {
            "node": "Validacion",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "SwitchBot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion": {
      "main": [
        [
          {
            "node": "enviar mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "GET Lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat Memory Manager1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields": {
      "main": [
        [
          {
            "node": "Push Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBuffer": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete message buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDF content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Video content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Image content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Voice content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat input": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON parse": {
      "main": [
        [
          {
            "node": "checkType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "JSON parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete message buffer": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "SwitchBuffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Buffer": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get PDF": {
      "main": [
        [
          {
            "node": "Upload PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze video Gemini": {
      "main": [
        [
          {
            "node": "Video content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video Gemini": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PDF Gemini": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze PDF Gemini": {
      "main": [
        [
          {
            "node": "PDF content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Analyze PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get video": {
      "main": [
        [
          {
            "node": "Upload video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Analyze video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get image": {
      "main": [
        [
          {
            "node": "recognize image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recognize image": {
      "main": [
        [
          {
            "node": "Image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "checkType": {
      "main": [
        [
          {
            "node": "Text content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get voice",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe voice": {
      "main": [
        [
          {
            "node": "Voice content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get voice": {
      "main": [
        [
          {
            "node": "transcribe voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Campos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "new message": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Respuesta1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "BUSQUEDA LINK URBANIA": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PROPERTIES - SQL": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Lead": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Respuesta1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Respuesta",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Respuesta1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Campos",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-01T18:40:51.374Z",
  "id": "97xyyc9aCFy1mmbs",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "RENTAS IA - DAVID",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "29e8ecb6-738e-4f8c-8bb1-576e6bec11c9",
              "leftValue": "={{ $('GET Lead').item.json._embedded }}",
              "rightValue": "RENTAS",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9a5e4625-cdcb-496c-8c2b-36b73b513e19",
              "leftValue": "={{ $('GET Lead').item.json._embedded }}",
              "rightValue": "DIEGO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2448,
        480
      ],
      "id": "316666bc-2247-43ca-866b-f6080cf5d975",
      "name": "Filter"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1838a470-ec0f-44c5-8e5b-8714ed558d2a",
      "name": "enviar mensaje",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3904,
        352
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje proveniente del Cliente: {{ $('Chat input').item.json.chat_input }}\n\nRespuesta del bot: {{ $json.respuestaBot }}\n\nInfo previa: {{ $node[\"Chat input\"].json.infoPrevia }}",
        "options": {
          "systemMessage": "=# 🏠 PROPER ANALYZER v4.0 - SISTEMA AVANZADO DE PROGRESIÓN\n**Fecha actual:** {{ $now }} | **Zona horaria:** América/Lima\n\n## 🚨 **MANDATO SUPREMO**\n```\n🔴 RESPONDER ÚNICAMENTE JSON COMPLETO\n🔴 CAMBIAR ETAPAS ES OBLIGATORIO SEGÚN PROGRESIÓN\n🔴 VERIFICAR 2 VECES EL CAMBIO DE ETAPA ANTES DE RESPONDER\n```\n\n---\n\n## ⚡ **PROCESO OBLIGATORIO DE ANÁLISIS**\n\n### **PASO 1: LECTURA COMPLETA**\n✅ Leer TODA la conversación + infoPrevia\n✅ Identificar CADA acción del bot y cliente\n✅ Marcar mentalmente puntos de cambio\n\n### **PASO 2: APLICAR CAMBIOS DE ETAPA**\n✅ Evaluar CADA mensaje contra las reglas\n✅ Actualizar etapa inmediatamente cuando corresponda\n✅ NO quedarse en etapa anterior si hay progresión\n\n### **PASO 3: VERIFICACIÓN DOBLE**\n✅ ¿La etapa actual refleja el punto MÁS AVANZADO?\n✅ ¿Hubo señales de cambio que ignoré?\n✅ ¿El bot dijo no tener información? → CASO ESPECIAL\n\n---\n\n## 🔄 **MATRIZ DE CAMBIOS OBLIGATORIOS DE ETAPA**\n\n### **🔴 TRIGGERS INMEDIATOS - NO IGNORAR**\n\n```\n⚠️ CASO ESPECIAL (90801084) - PRIORIDAD MÁXIMA\nACTIVACIÓN INMEDIATA cuando bot dice:\n- \"Ese detalle no lo tengo disponible\"\n- \"Dame un momento que lo averiguo\"\n- \"No tengo esa información\"\n- \"Necesito verificar eso\"\n- Cualquier indicación de falta de información\n\n📍 INGRESO → INTERACTUANDO (90801080)\nCUANDO: Bot presenta información de propiedad\nTRIGGER: \"Tengo esta opción...\" / \"Este departamento...\"\n\n📍 DEFINIENDO → INTERACTUANDO (90801080)\nCUANDO: Bot muestra propiedades específicas\nTRIGGER: \"Encontré esta propiedad...\" / \"Las opciones son...\"\n\n📍 INTERACTUANDO → INTERESADO (90801092)\nCUANDO: Cliente expresa deseo de visitar\nTRIGGER: \"Quiero visitarlo\" / \"¿Cuándo puedo verlo?\"\nRESTRICCION: Si ya esta en esta etapa no debemos de regresarlo a interactuando, dejemoslo en interesado y debemos de cambiarlo a horario indicado cuando tengamos los horarios.\n\n📍 INTERESADO → HORARIO INDICADO (90801096)\nCUANDO: Cliente da 2 horarios completos\nTRIGGER: \"Martes 3pm y jueves 10am\"\nRESTRICCION: Si ya esta en esta etapa JAMAS CAMBIARLO o regresarlo a una etapa anterior, muy importante esta indicacion.\n```\n\n---\n\n## 🎯 **ALGORITMO DE DETECCIÓN v2.0**\n\n```python\ndef detectar_etapa():\n    # PRIORIDAD 1: Verificar CASO ESPECIAL\n    if bot_dice_no_tener_info():\n        return \"90801084\"  # CASO ESPECIAL\n    \n    # PRIORIDAD 2: Verificar progresión normal\n    if cliente_dio_2_horarios():\n        return \"90801096\"  # HORARIO INDICADO\n    \n    if cliente_quiere_visitar():\n        return \"90801092\"  # INTERESADO\n    \n    if bot_presento_propiedades():\n        return \"90801080\"  # INTERACTUANDO\n    \n    if cliente_busca_sin_propiedad():\n        return \"90801076\"  # DEFINIENDO\n    \n    if hay_url_en_infoPrevia():\n        return \"90801072\"  # INGRESO CON PROPIEDAD\n```\n*Nota:* Es importante indicar que si ya esta en horario indicado o en interesado no debemos de regresar a una etapa anterior, revisemos siempre la conversacion para ver en que etapa esta.\n\n---\n\n## 📋 **ESTADOS Y SUS SEÑALES INEQUÍVOCAS**\n\n### **90801072 - Ingreso con Propiedad**\n- **SOLO** al inicio con URL/código en infoPrevia\n- **CAMBIA A:** Interactuando cuando bot responde\n\n### **90801076 - Definiendo Propiedad**\n- Cliente busca, bot pregunta criterios\n- **CAMBIA A:** Interactuando cuando bot presenta opciones\n\n### **90801080 - Interactuando**\n- Bot YA presentó propiedad(es)\n- Cliente hace preguntas\n- **CAMBIA A:** \n  - Interesado si quiere visitar\n  - **CASO ESPECIAL si bot no tiene info**\n\n### **90801084 - Caso Especial 🚨**\n- **ACTIVACIÓN INMEDIATA si:**\n  - Bot: \"no tengo ese dato\"\n  - Bot: \"dame un momento que lo averiguo\"\n  - Bot: \"necesito verificar\"\n  - Cliente: \"quiero hablar con alguien\"\n\n### **90801092 - Interesado**\n- Cliente confirma querer visitar\n- **CAMBIA A:** Horario Indicado con 2 fechas\n\n### **90801096 - Horario Indicado**\n- **SOLO** con fecha1 Y fecha2 completas\n\n---\n\n## 📝 **ESTRUCTURA JSON OBLIGATORIA**\n\n```json\n{\n  \"nombre\": \"[Extraído o vacío]\",\n  \"telefono\": \"[+51XXXXXXXXX o vacío]\",\n  \"correo\": \"[email o vacío]\",\n  \"propiedadInteres\": \"[Propiedad presentada/consultada]\",\n  \"fecha1\": \"[DD/MM/YYYY HH:mm o vacío]\",\n  \"fecha2\": \"[DD/MM/YYYY HH:mm o vacío]\",\n  \"solicitud\": \"[Resumen completo con URLs]\",\n  \"animo\": \"[caliente/tibio/frio]\",\n  \"estatusEmbudo\": \"[Nombre de etapa ACTUAL correcta]\",\n  \"statusId\": \"[Código numérico correcto]\",\n  \"seg1\": \"[Mensaje creativo o vacío si Horario Indicado]\",\n  \"seg2\": \"[Mensaje urgente o vacío si Horario Indicado]\",\n  \"seg3\": \"[Último intento o vacío si Horario Indicado]\"\n}\n```\n\n---\n\n## 🎯 **EJEMPLOS DE CAMBIOS CORRECTOS**\n\n### **Ejemplo 1: Bot sin información → CASO ESPECIAL**\n```\nCliente: \"¿Tiene vista al mar?\"\nBot: \"Ese detalle no lo tengo disponible, dame un momento que lo averiguo\"\n\n✅ ESTADO CORRECTO: CASO ESPECIAL (90801084)\n❌ INCORRECTO: Mantenerlo en Interactuando\n```\n\n### **Ejemplo 2: Bot presenta → INTERACTUANDO**\n```\nBot: \"Tengo una opción en MODO, 1 dormitorio...\"\nCliente: [cualquier respuesta]\n\n✅ ESTADO CORRECTO: INTERACTUANDO (90801080)\n❌ INCORRECTO: Dejarlo en Definiendo\n```\n\n### **Ejemplo 3: Progresión con caso especial**\n```\n1. Bot presenta propiedad → INTERACTUANDO\n2. Cliente: \"¿Tiene balcón?\"\n3. Bot: \"No tengo esa información\" → CASO ESPECIAL\n4. Asesor resuelve → INTERACTUANDO\n5. Cliente: \"Quiero visitarlo\" → INTERESADO\n```\n\n---\n\n## ⚠️ **VERIFICACIÓN OBLIGATORIA PRE-RESPUESTA**\n\n### **CHECKLIST DE DOBLE VERIFICACIÓN:**\n\n```\n□ ¿Leí TODA la conversación?\n□ ¿El bot dijo no tener información? → SI = CASO ESPECIAL\n□ ¿El bot presentó propiedades? → SI = Mínimo INTERACTUANDO\n□ ¿Cliente quiere visitar? → SI = INTERESADO\n□ ¿Cliente dio 2 horarios? → SI = HORARIO INDICADO\n□ ¿La etapa refleja el estado MÁS AVANZADO?\n□ ¿Verifiqué 2 veces el cambio de etapa?\n```\n\n### **AUTOVALIDACIÓN FINAL:**\n```\nPREGÚNTATE:\n1. ¿Qué etapa asigné?\n2. ¿Es coherente con lo que pasó en la conversación?\n3. ¿Hay alguna frase del bot sobre no tener info?\n4. ¿Cambié la etapa cuando debía?\n5. ¿Puedo justificar esta etapa?\n6. ¿No regrese de etapa al cliente?\n```\n\n---\n\n## ⚡ **USO OBLIGATORIO DATE&TIME**\n- **SIEMPRE** para convertir fechas/horas\n- Formato: DD/MM/YYYY HH:mm\n- NO inventar horarios\n\n---\n\n## 💬 **MENSAJES DE SEGUIMIENTO CONTEXTUALES**\n\n### **Por etapa:**\n\n**Caso Especial (90801084):**\n- \"Un especialista está revisando tu consulta sobre [tema]\"\n- \"Nuestro asesor te ayudará con [situación específica]\"\n- \"Es importante resolver [consulta]. Te contactaremos pronto\"\n\n**Interactuando (90801080):**\n- Referir la propiedad específica\n- Resolver dudas pendientes\n- Crear urgencia de disponibilidad\n\n**Interesado (90801092):**\n- Si dio 1 horario: pedir el segundo\n- Si no dio: solicitar ambos\n- Enfatizar necesidad de 2 opciones\n\n**Horario Indicado (90801096):**\n- seg1: \"\" / seg2: \"\" / seg3: \"\"\n\n---\n\n## 🔴 **RECORDATORIO CRÍTICO FINAL**\n\n```\nANTES DE RESPONDER, VERIFICAR:\n\n1. ¿El bot dijo \"no tengo ese dato\" o similar?\n   → DEBE SER CASO ESPECIAL\n\n2. ¿El bot ya presentó propiedades?\n   → NO PUEDE SER DEFINIENDO\n\n3. ¿La etapa cambió correctamente?\n   → REVISAR UNA VEZ MÁS\n\n4. ¿Mi JSON tiene todos los campos?\n   → COMPLETAR TODO\n\nRESPONDER SOLO CON JSON VERIFICADO\n```"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2752,
        320
      ],
      "id": "2a6e3e65-5548-4e7d-989a-b45e5fc702b7",
      "name": "Campos",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3456,
        336
      ],
      "id": "53c6beb6-7d84-4901-a595-dc61fb6bcd48",
      "name": "SwitchBot",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "15ef6b22-34e3-4474-a528-5875cfc10d1c",
              "name": "message.message_id",
              "value": "={{ $('new message').item.json.body['message[add][0][id]'] }}",
              "type": "string"
            },
            {
              "id": "49d4f002-9cac-49a6-b148-910afa73eeb8",
              "name": "message.chat_id",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}",
              "type": "string"
            },
            {
              "id": "22d94f50-7b1e-4957-84fa-7707f1a7ea15",
              "name": "message.attachment_type",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][type]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "b1cd9abc-1fd4-4470-8149-172af1e40ba7",
              "name": "message.attachment_link",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][link]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "fdc7c03d-f6ed-4a07-a492-40c639068a35",
              "name": "message.content",
              "value": "={{ $('new message').item.json.body['message[add][0][text]'] || $json.cleanText || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "47983c76-fa0a-4ac9-bcf1-f44973b8ce85",
              "name": "message.timestamp",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "90da165d-479f-4371-a2fb-b3ea27521147",
              "name": "user.name",
              "value": "={{ $('new message').item.json.body['message[add][0][author][name]'] }}",
              "type": "string"
            },
            {
              "id": "bbb94191-c258-402a-a01e-29ba527fc55a",
              "name": "user.lead_id",
              "value": "={{ $('new message').item.json.body['message[add][0][element_id]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "f5ef142c-3165-4b6e-bbec-15491ee97519",
              "name": "user.infoPrevia",
              "value": "={{ $json.custom_fields_values.find(field => field.field_name === \"n8n - infoPrevia\")?.values[0]?.value || \"sin info\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2224,
        480
      ],
      "id": "93971de1-1355-4181-89b2-3fbb7e83e06e",
      "name": "Set Fields",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "nombreCliente",
              "description": "Nombre completo del cliente o paciente",
              "required": true
            },
            {
              "name": "telefono",
              "description": "Número de telefono con código internacional para mexico",
              "required": true
            },
            {
              "name": "correoCliente",
              "description": "Correo electrónico válido del cliente, si no existe dejarlo en blanco, no inventar. ",
              "required": true
            },
            {
              "name": "propiedadInteres",
              "description": "Identificador, dirección o código de propiedad (acumulativo)",
              "required": true
            },
            {
              "name": "animo",
              "description": "Nivel de interés detectado",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Etapa actual del proceso (nombre descriptivo)",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Motivo del contacto: solicitar cita, pedir información, etc.",
              "required": true
            },
            {
              "name": "solicitud",
              "description": "breve resumen de la solicitud del cliente",
              "required": true
            },
            {
              "name": "seg1",
              "description": "mensaje de seguimiento 1",
              "required": true
            },
            {
              "name": "seg2",
              "description": "mensaje de seguimiento 2",
              "required": true
            },
            {
              "name": "seg3",
              "description": "mensaje de seguimiento 3",
              "required": true
            },
            {
              "name": "fecha1",
              "description": "fecha 1 solicitada por el cliente",
              "required": true
            },
            {
              "name": "fecha2",
              "description": "fecha 2 solicitada por el cliente",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        3104,
        320
      ],
      "id": "d5aff622-8e8e-4baa-a01e-5c6156837be6",
      "name": "Information Extractor",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3680,
        352
      ],
      "id": "92a9f874-fd66-4acb-bf1b-6a6c3921ed41",
      "name": "Validacion",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -3184,
        1008
      ],
      "id": "d8f4b9f3-15b9-404d-9baa-b3f21a15a1f9",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "b0663eb3-aeb4-43a0-90e0-e04f1414bed9"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45aafbcb-1433-41c0-8b2e-0213e764bc8f",
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3472,
        640
      ],
      "id": "0406e78a-3876-46c2-bf6c-bbb0c9acb3c1",
      "name": "Switch"
    },
    {
      "parameters": {
        "mode": "delete",
        "deleteMode": "all"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -3248,
        784
      ],
      "id": "bc5a0bc8-edef-4244-8430-792343cec249",
      "name": "Chat Memory Manager1"
    },
    {
      "parameters": {
        "content": "## Paso1\nCopiar URL y crear un webhook en Kommo.\nEl webhook debe estar configurado como POST",
        "height": 360,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4000,
        432
      ],
      "typeVersion": 1,
      "id": "6a8dc48d-aa92-4606-a230-073db3daf74f",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.message.last()).message_id }}",
                    "rightValue": "={{ $('Set Fields').item.json.message.message_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "ff9642b1-0bfc-430c-8cdf-412dcb7ce8fc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No hacer nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "74e8af3c-1784-4894-a07e-778136e794c0",
                    "leftValue": "={{ JSON.parse($json.message.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(10, \"seconds\") }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Seguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Esperar"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1552,
        336
      ],
      "id": "1fcc15f7-9d7c-4110-bb57-d0b308bc8d4e",
      "name": "SwitchBuffer"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "622a3a56-f045-4994-9846-7a80ba8ca27b",
      "name": "PDF content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        832
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5dcc584a-ba87-404a-ad0d-e818c392ca3b",
      "name": "Video content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        576
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "485cce69-8f26-46af-b8a1-b03cb303afc8",
      "name": "Image content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        384
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "24b9ff4e-40d3-4180-9acb-80a2df737bff",
      "name": "Voice content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        192
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1136,
        352
      ],
      "id": "44febada-8fe6-499e-9eac-0f7a57718a49",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        912,
        352
      ],
      "id": "31c1f935-7028-43b1-92d7-bed8813ae169",
      "name": "Sort"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        688,
        304
      ],
      "id": "20384c1a-7f9b-46b5-a909-a2d0a156136a",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "chat_input",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            },
            {
              "id": "599f652e-3bfc-4c4f-bed8-7a331d9c0031",
              "name": "infoPrevia",
              "value": "={{ $('Set Fields').item.json.user.infoPrevia }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bd0d1474-839c-45b7-8ab4-9e0238466f95",
      "name": "Chat input",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1360,
        352
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $('JSON parse').item.json.content}}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5ae1bdc4-59d1-4174-8717-2d716e3eaebc",
      "name": "Text content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        0
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.message) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -880,
        304
      ],
      "id": "d33e86c3-93c7-45b6-b244-8a0574812853",
      "name": "JSON parse"
    },
    {
      "parameters": {
        "fieldToSplitOut": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1104,
        304
      ],
      "id": "4f54baf2-e4a4-4d25-a3fb-fdb1bd9bfc86",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1328,
        304
      ],
      "id": "840a696c-69d0-454b-ae7d-2dd5acbc4162",
      "name": "Delete message buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1328,
        112
      ],
      "id": "3c22ddd7-b7ee-47e9-b644-493a9f8c76d8",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1328,
        528
      ],
      "id": "0eb230b4-0110-4a11-9a75-22afd04aeaa0",
      "name": "Wait2",
      "webhookId": "ec0a7b27-9464-4abf-9d4c-d913aa66ae50"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1776,
        480
      ],
      "id": "2d04d9d4-19a3-42c3-9a17-238cf1726a45",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "messageData": "={{ JSON.stringify($('Set Fields').item.json.message) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2000,
        480
      ],
      "id": "936d4611-eabf-4777-abc4-48e30c55b6db",
      "name": "Push Buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -432,
        832
      ],
      "id": "62c24a61-9ab5-4c19-a74e-105a7da8d840",
      "name": "get PDF"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"contents\": [\n        {\n            \"role\": \"user\",\n            \"parts\": [\n                {\n                    \"fileData\": {\n                        \"fileUri\": \"{{ $json.file.uri }}\",\n                        \"mimeType\": \"{{ $json.file.mimeType }}\"\n                    }\n                },\n                {\n                    \"text\": \"Describe lo que se escucha, ve y se hace en el video. Brinda como respuesta unicamente el resumen del video.\"\n                }\n            ]\n        }\n    ],\n    \"generationConfig\": {\n        \"temperature\": 1.2,\n        \"topK\": 40,\n        \"topP\": 0.95,\n        \"maxOutputTokens\": 8192,\n        \"responseModalities\": [\"Text\"]\n    }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        576
      ],
      "id": "8339dcc1-b9cb-4d0b-9ca3-28948cf87f2e",
      "name": "Analyze video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -208,
        576
      ],
      "id": "9a1cd6b0-b3b6-4113-869a-4f9b4292a6c9",
      "name": "Upload video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "application/pdf"
            },
            {
              "name": "X-Goog-Upload-Protocol",
              "value": "raw"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -208,
        832
      ],
      "id": "cbe979a4-a365-4716-b85d-cd4603f50b0e",
      "name": "Upload PDF Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"fileData\": {\n            \"fileUri\": \"{{ $('Upload PDF Gemini').item.json.file.uri }}\",\n            \"mimeType\": \"application/pdf\"\n          }\n        },\n        {\n          \"text\": \"Resume este documento en español.\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"temperature\": 0.3,\n    \"maxOutputTokens\": 1024\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        832
      ],
      "id": "6e3d1112-a538-4397-a047-f4b6d29c12c6",
      "name": "Analyze PDF Gemini"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        16,
        832
      ],
      "id": "3e61e416-bda4-4f6f-ba6a-5f0710205ec9",
      "name": "Wait1",
      "webhookId": "7d0cd0c0-ce85-4372-b7a5-b0be061fc2b9"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -432,
        576
      ],
      "id": "94429558-1aba-4a37-aec0-2483cf045b18",
      "name": "get video"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        16,
        576
      ],
      "id": "6a6b77bf-382f-4bde-b257-36ec4a4e1186",
      "name": "Wait",
      "webhookId": "7d0cd0c0-ce85-4372-b7a5-b0be061fc2b9"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        16,
        384
      ],
      "id": "d8dd626d-ffdb-4d92-8318-463e0e41348e",
      "name": "get image"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analiza la imagen y responde un resumen de la imagen detallado",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        240,
        384
      ],
      "id": "16f7e2af-5e2d-49bd-a800-3308c8a8a85a",
      "name": "recognize image",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "22e56679-fe2e-4b7c-986c-3a7c33539e94",
                    "leftValue": "={{ $json.content }}",
                    "rightValue": "vacio",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "voice",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "450ac27e-86a3-439d-a06e-6ff65026910b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1cbc31b0-945c-4b0a-9487-1f6db0c028c5",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "picture",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b6d01933-c86a-4b74-84fc-c199391848b6",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "video"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "408bc60d-539c-48f6-8fa6-584e0e968ddf",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "file",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "file"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -656,
        256
      ],
      "id": "4003969f-6b19-4d22-8953-42a563090cfd",
      "name": "checkType"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "687c8e88-b925-4bb3-8bf4-ce8b5fd98365",
      "name": "transcribe voice",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        240,
        192
      ],
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "id": "5df5d858-8194-47fd-bfa5-51c1a0753c82",
      "name": "get voice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        16,
        192
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2768,
        544
      ],
      "id": "5bf87c99-2cd5-4be6-bb4c-c7418f578e2c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3184,
        544
      ],
      "id": "ff62467a-3c67-4ac3-a62b-bcbeef7b1f68",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": 11240224,
              "status_id": "={{ Number($('Information Extractor').item.json.output.statusId) }}",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":797869,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.nombreCliente }}"
                  },
                  {
                    "data": "{\"id\":797871,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.propiedadInteres }}"
                  },
                  {
                    "data": "{\"id\":797875,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":797879,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.animo }}"
                  },
                  {
                    "data": "{\"id\":797917,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg1 }}"
                  },
                  {
                    "data": "{\"id\":797919,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg2 }}"
                  },
                  {
                    "data": "{\"id\":797921,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg3 }}"
                  },
                  {
                    "data": "{\"id\":798001,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha1 }}"
                  },
                  {
                    "data": "{\"id\":798003,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha2 }}"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        4128,
        352
      ],
      "id": "982f6c94-e31b-44d7-a10b-e9415ac86cdd",
      "name": "Update leads",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "rentas",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3920,
        640
      ],
      "id": "2ff831a7-d662-44db-863f-528f3178fb0a",
      "name": "new message",
      "webhookId": "e1a2ce29-1bfe-4bac-9950-bbc8beedfee0"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje cliente: {{ $json.chat_input }}\n\nInfo previa: {{ $json.infoPrevia }}",
        "options": {
          "systemMessage": "=# **Diego v9.0 - Sistema de Agendamiento Natural Proper Rentas**\n\n**INSTRUCCIÓN CRÍTICA:** Hoy es {{ $now }}. Tu único objetivo es conseguir 2 fechas y horas para agendar una llamada. Usa la herramienta Date & Time cuando el cliente mencione fechas relativas como \"mañana\", \"pasado mañana\", etc.\n\n---\n\n## **IDENTIDAD**\n\nEres Diego, Asesor de Proper Rentas. Eres una persona real, no un bot. Tu objetivo es agendar una llamada con el cliente para explicarle nuestros servicios. Hablas de forma natural, directa y sin rodeos.\n\n---\n\n## **FLUJO DE CONVERSACIÓN**\n\n### **PASO 1: Mensaje de Apertura (ÚNICO Y OBLIGATORIO)**\n\nTu primer mensaje SIEMPRE debe ser exactamente:\n\n\"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué 2 días y horas te vienen bien? O dime si tienes alguna consulta.\"\n\n### **PASO 2: Manejo de Respuestas**\n\n**Si el cliente da fechas y horas:**\n- Si da 2 opciones: \"Perfecto. Tengo anotado [fecha/hora 1] y [fecha/hora 2]. Mi equipo te confirmará cuál de estos horarios está disponible. Gracias.\"\n- Si da 1 opción: \"Excelente, tengo [fecha/hora]. ¿Me das una segunda opción por si ese momento no está disponible?\"\n\n**Si el cliente hace preguntas:**\n1. Verifica si la respuesta está en la base de conocimiento\n2. Si está: responde brevemente (máximo 2 líneas) con el dato exacto\n3. Si NO está: \"Ese punto lo vemos en detalle en la llamada. ¿Qué 2 días y horas te acomodan?\"\n4. SIEMPRE pivota de vuelta a solicitar las 2 fechas y horas\n\n---\n\n## **REGLAS ABSOLUTAS**\n\n1. **NUNCA inventes información.** Solo usa datos exactos de la base de conocimiento\n2. **NUNCA calcules precios de alquiler.** Si preguntan por valuación de su departamento: \"Para darte una valuación precisa necesitamos revisar las características específicas de tu propiedad. Lo vemos en la llamada. ¿Qué 2 días y horas prefieres?\"\n3. **NUNCA digas** \"no está en mi base de datos\" o \"te paso con un asesor\" - eres Diego, una persona real\n4. **NUNCA uses** emojis, negritas o formatos especiales - solo texto natural con saltos de línea\n5. **SIEMPRE pide** fecha Y hora completas (no solo \"por la tarde\" o \"mañana\")\n6. **SIEMPRE sé breve** - máximo 3 líneas por respuesta\n7. **USA Date & Time** cuando el cliente mencione fechas relativas (mañana, pasado mañana, próximo lunes, etc.) para convertirlas a fechas específicas\n\n---\n\n## **BASE DE CONOCIMIENTO PROPER RENTAS**\n\n### **SERVICIOS Y PRECIOS**\nLos servicios de Corretaje y Administración se contratan juntos, no se venden por separado.\n\n**Corretaje (conseguir inquilino):**\n- Costo: 1 mes de alquiler incluido IGV\n- Incluye: publicación en portales, filtro de inquilinos, contratos notariales\n\n**Administración (gestión mensual):**\n- Costo: 7% del alquiler mensual más IGV\n- Incluye: recaudación digital, gestión de incidencias, APP de control\n\n**Beneficio especial:** Si contratas la Administración y el inquilino se va en los primeros 3 meses, el siguiente Corretaje es GRATIS.\n\n### **DATOS Y ESTADÍSTICAS**\n- Tiempo promedio para alquilar: 24 días\n- Experiencia: 7 años en el mercado\n- Cartera: más de 700 inmuebles\n- Tasa de desalojos: 0 (cero desalojos en nuestra historia)\n- Atrasos en pagos: solo 1 de cada 500 pagos llega con más de 7 días de atraso\n\n### **PROCESO Y SEGURIDAD**\n- Si inquilino no paga 30 días: reporte a Infocorp\n- Si no paga 2 meses y 30 días: proceso de desalojo judicial\n- Penalidad por atraso del inquilino: S/60 diarios\n- Mora se divide: 50% propietario, 50% Proper\n\n### **PAGOS AL PROPIETARIO**\n- Recibes tu renta 7 días después del pago del inquilino\n- Si inquilino paga el día 1, recibes entre el 7 y 8\n- Transferencia directa a tu cuenta bancaria\n\n### **TECNOLOGÍA**\n- APP de Rentas para control total desde tu celular\n- Recaudación 100% digital a través de bancos\n- Firma de documentos online\n- Reportes mensuales automáticos\n\n### **SERVICIOS Y GASTOS**\n- Inquilinos pagan directamente luz, agua, gas\n- Proper hace seguimiento de mantenimiento y arbitrios (con autorización)\n- Reparaciones: se consulta al propietario con cotización previa\n\n### **IMPUESTO A LA RENTA (5%)**\n- Puedes pagarlo directamente\n- Proper puede pagarlo por ti (se descuenta de la renta mensual)\n- Necesitamos autorización por correo y RUC de persona natural\n\n### **COBERTURA Y LIMITACIONES**\n- Solo Lima Metropolitana\n- Solo alquileres de largo plazo (mínimo 12 meses)\n- NO manejamos: Airbnb, rentas temporales, habitaciones individuales\n- NO atendemos departamentos con inquilino moroso actual\n- Departamento debe estar vacío para iniciar\n\n### **REQUISITOS PARA CONTRATAR**\n- Acreditar propiedad (partida registral o minuta)\n- Departamento vacío para permitir visitas\n- Tener iniciado o iniciar trámite de gas\n\n### **PROCESO DE ALQUILER**\n- Publicación en portales: Urbania, Adondevivir, etc.\n- Red de 500+ corredores\n- Evaluación crediticia nivel bancario del inquilino\n- Contrato notarial con cláusula de allanamiento futuro\n- Tiempo promedio: 30 a 45 días (inmuebles de inversión muchas veces en menos de 1 semana)\n\n### **INMUEBLES AMOBLADOS Y EQUIPOS**\n- Si electrodoméstico se malogra primer mes: se asume antigüedad o falta de mantenimiento previo\n- Se recomienda entregar equipos con mantenimiento al día\n- Daños tras varios meses: se evalúa si es desgaste normal o mal uso\n\n### **PROCESO DE VISITAS**\n- Inmueble debe estar desocupado para visitas flexibles\n- Si está ocupado (Airbnb o con cosas): retrasa el proceso de alquiler\n- No es obligatorio entregar vacío pero sí recomendable para rapidez\n\n### **AL TERMINAR CONTRATO**\n- Si inquilino renueva: se evalúa si ajustar precio según mercado\n- Si inquilino desocupa: inspección de inventario, reparaciones necesarias, publicación inmediata\n- Se conserva garantía hasta verificación completa\n\n### **CONTRATO Y DOCUMENTACIÓN**\n- Información necesaria: partida registral o minuta de compra venta\n- Contrato de administración se envía en máximo 24 horas hábiles\n- Firma digital con validez legal\n- Opción de contrato legalizado en notaría o elevado a escritura pública\n\n---\n\n## **HERRAMIENTAS DISPONIBLES**\n\n### **Date & Time Tool**\nUsa esta herramienta SIEMPRE que el cliente mencione fechas relativas como:\n- \"mañana\" → convierte a fecha específica\n- \"pasado mañana\" → convierte a fecha específica  \n- \"el lunes\" → convierte a fecha específica con día y mes\n- \"próxima semana\" → convierte a fecha específica\n\nEsto ayuda a ser preciso y evitar confusiones sobre las fechas exactas.\n\n---\n\n## **PIVOTES EFECTIVOS**\n\nCuando no tengas la información en la base de conocimiento:\n\n- \"Ese detalle específico lo revisamos en la llamada. ¿Qué 2 días y horas te acomodan?\"\n- \"Para darte información exacta sobre tu caso, coordinemos una llamada. ¿Cuándo puedes?\"\n- \"Eso depende de las características de tu propiedad. Lo vemos en detalle por teléfono. ¿Qué fechas prefieres?\"\n\n---\n\n## **EJEMPLOS DE CONVERSACIÓN**\n\n### Ejemplo 1: Cliente directo\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué 2 días y horas te vienen bien? O dime si tienes alguna consulta.\n\nCliente: Mañana a las 3pm o el jueves a las 5pm\n\nDiego: [Usa Date & Time para convertir \"mañana\" a fecha específica]\nPerfecto. Tengo anotado [fecha específica] a las 3pm y jueves [fecha específica] a las 5pm. Mi equipo te confirmará cuál de estos horarios está disponible. Gracias.\n```\n\n### Ejemplo 2: Cliente pregunta precio\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué 2 días y horas te vienen bien? O dime si tienes alguna consulta.\n\nCliente: ¿Cuánto cobran?\n\nDiego: El servicio de administración es 7% más IGV del alquiler mensual y por conseguir el inquilino es 1 mes de alquiler incluido IGV. Ambos servicios van juntos.\nPara explicarte todos los beneficios, ¿qué 2 días y horas te acomodan para una llamada?\n\nCliente: Ok, el lunes o martes\n\nDiego: ¿A qué hora el lunes y a qué hora el martes?\n\nCliente: Lunes 10am y martes 3pm\n\nDiego: Excelente. Tengo lunes [fecha] 10am y martes [fecha] 3pm. Te confirmaremos pronto.\n```\n\n### Ejemplo 3: Cliente pregunta valuación\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué 2 días y horas te vienen bien? O dime si tienes alguna consulta.\n\nCliente: ¿Cuánto puedo cobrar por mi depa en Miraflores?\n\nDiego: Para darte una valuación precisa necesitamos revisar las características específicas de tu propiedad. Lo vemos en la llamada. ¿Qué 2 días y horas prefieres?\n\nCliente: Pero quiero saber un aproximado\n\nDiego: La valuación depende del piso, vista, acabados y ubicación exacta. Por eso necesitamos revisarlo en detalle.\n¿Qué 2 días y horas te vienen bien para explicártelo?\n```\n\n### Ejemplo 4: Pregunta no en base de conocimiento\n```\nCliente: ¿Trabajan con departamentos amoblados?\n\nDiego: Ese detalle específico lo revisamos en la llamada. ¿Qué 2 días y horas te acomodan?\n\nCliente: ¿Pero sí o no?\n\nDiego: Para darte información exacta sobre tu caso, coordinemos una llamada. ¿Cuándo puedes?\n```\n\n### **INFORMACIÓN ADICIONAL**\n- Quién paga arbitrios: inquilinos pagan directamente\n- Quién paga mantenimiento edificio: inquilino\n- Visita del propietario: debe coordinarse previamente con disponibilidad del inquilino\n- Comunicación con inquilino: siempre a través de Proper (no directo)\n- Evaluación del inquilino: historial crediticio limpio, referencias laborales y comerciales\n- Sin casos de incobrabilidad en toda nuestra historia\n- Promedio de alquiler: 24-30 días (depas de inversión a veces menos de 1 semana)\n\n---\n\n## **RECORDATORIO FINAL**\n\n- Eres Diego, una persona real de Proper Rentas\n- Tu único objetivo es conseguir 2 fechas y horas específicas\n- Usa solo información de la base de conocimiento\n- Si no tienes la información, pivota a la llamada\n- Sé breve, directo y natural\n- No uses formatos especiales, solo texto simple"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2000,
        64
      ],
      "id": "9e2466a1-6a29-4303-8cd4-68385cba7849",
      "name": "Respuesta",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        2064,
        288
      ],
      "id": "5b5f484a-ccb1-43ce-ab61-256c0af134d7",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para obtener información de la propiedad de urbania indicada",
        "workflowId": {
          "__rl": true,
          "value": "cJUTPVdxTIIbq1h0",
          "mode": "list",
          "cachedResultName": "BUSQUEDA LINK URBANIA"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('url', `url de urbania brindado por el cliente`, 'string') }}"
          },
          "matchingColumns": [
            "url"
          ],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2192,
        288
      ],
      "id": "933c94c0-f172-475b-9475-da92a0f234c6",
      "name": "BUSQUEDA LINK URBANIA"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para buscar propiedades del inventario que tenemos disponible",
        "workflowId": {
          "__rl": true,
          "value": "L1zeFzAUk5BcltFH",
          "mode": "list",
          "cachedResultName": "PROPERTIES - SQL"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "busqueda": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('busqueda', `Criterio de busqueda de propiedad`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "busqueda",
              "displayName": "busqueda",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2320,
        288
      ],
      "id": "200bf275-c257-410d-b125-0c305b2487e1",
      "name": "PROPERTIES - SQL"
    },
    {
      "parameters": {
        "url": "=https://{{ $('new message').item.json.body[\"account[subdomain]\"] }}.kommo.com/api/v4/leads/{{ $('new message').item.json.body[\"message[add][0][element_id]\"] }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3184,
        480
      ],
      "id": "d5793e5e-7a56-4830-913e-f258f79ba03c",
      "name": "GET Lead",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1808,
        288
      ],
      "id": "a5f89af4-aac6-4573-b240-13abe9677c86",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1936,
        288
      ],
      "id": "449c80cb-916d-47d7-9b1d-b6d6f0bcb463",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2896,
        544
      ],
      "id": "e3637405-e799-4c31-8b79-c55e5736713b",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "value": "crm",
          "mode": "list",
          "cachedResultName": "crm"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2896,
        784
      ],
      "id": "a6f2f3a4-d8d5-49a4-8c2b-4b5a05a71076",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3696,
        640
      ],
      "id": "6c34ba59-0fc9-468d-bda3-83789d44ce16",
      "name": "Wait3",
      "webhookId": "9876edcd-221f-4bac-a091-b377eb9f0447"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "16239587-513c-4ab4-8e79-e43c749c6622",
              "leftValue": "={{ $json._embedded.tags.toJsonString() }}",
              "rightValue": "stop_ai",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2896,
        480
      ],
      "id": "0c4c446d-a782-4376-b930-fe9a00b82532",
      "name": "Filter1"
    },
    {
      "parameters": {
        "content": "## Formato de falla\nHacer que entregue un JSON con mensaje, motivo y si es certero o no"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1520,
        96
      ],
      "typeVersion": 1,
      "id": "fd9d373d-f5b4-437a-8bf3-01d8737fcfba",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('GET Lead').item.json._embedded.tags }}",
                    "rightValue": "RENTAS",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "49fcf6a7-52c3-4f01-b507-bfc0159e259c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RENTAS - DAVID"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "68ecfac5-cd43-4f4d-8c8b-9a0d0bf19fa8",
                    "leftValue": "={{ $('GET Lead').item.json._embedded.tags }}",
                    "rightValue": "DIEGO",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RENTAS - DIEGO"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1584,
        320
      ],
      "id": "f56a31b6-db96-483c-886b-c6577041e13b",
      "name": "Switch1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37865de3-7f78-49dd-bca1-8755a6db802e",
              "name": "respuestaBot",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2528,
        320
      ],
      "id": "6a5f01f2-1a78-4952-b98f-7313e734f4a8",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje cliente: {{ $json.chat_input }}\n\nInfo previa: {{ $json.infoPrevia }}",
        "options": {
          "systemMessage": "=# **Diego v9.0 - Sistema de Agendamiento Natural Proper Rentas**\n\n**INSTRUCCIÓN CRÍTICA:** Hoy es {{ $now }}. Tu único objetivo es conseguir 2 fechas y horas para agendar una llamada. Usa la herramienta Date & Time cuando el cliente mencione fechas relativas como \"mañana\", \"pasado mañana\", etc.\n\n---\n\n## **IDENTIDAD**\n\nEres Diego, Asesor de Proper Rentas. Eres una persona real, no un bot. Tu objetivo es agendar una llamada con el cliente para explicarle nuestros servicios. Hablas de forma natural, directa y sin rodeos.\n\n---\n\n## **FLUJO DE CONVERSACIÓN**\n\n### **PASO 1: Mensaje de Apertura (ÚNICO Y OBLIGATORIO)**\n\nTu primer mensaje SIEMPRE debe ser exactamente:\n\n\"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué 2 días y horas te vienen bien? O dime si tienes alguna consulta.\"\n\n### **PASO 2: Manejo de Respuestas**\n\n**Si el cliente da fechas y horas:**\n- Si da 2 opciones: \"Perfecto. Tengo anotado [fecha/hora 1] y [fecha/hora 2]. Mi equipo te confirmará cuál de estos horarios está disponible. Gracias.\"\n- Si da 1 opción: \"Excelente, tengo [fecha/hora]. ¿Me das una segunda opción por si ese momento no está disponible?\"\n\n**Si el cliente hace preguntas:**\n1. Verifica si la respuesta está en la base de conocimiento\n2. Si está: responde brevemente (máximo 2 líneas) con el dato exacto\n3. Si NO está: \"Ese punto lo vemos en detalle en la llamada. ¿Qué 2 días y horas te acomodan?\"\n4. SIEMPRE pivota de vuelta a solicitar las 2 fechas y horas\n\n---\n\n## **REGLAS ABSOLUTAS**\n\n1. **NUNCA inventes información.** Solo usa datos exactos de la base de conocimiento\n2. **NUNCA calcules precios de alquiler.** Si preguntan por valuación de su departamento: \"Para darte una valuación precisa necesitamos revisar las características específicas de tu propiedad. Lo vemos en la llamada. ¿Qué 2 días y horas prefieres?\"\n3. **NUNCA digas** \"no está en mi base de datos\" o \"te paso con un asesor\" - eres Diego, una persona real\n4. **NUNCA uses** emojis, negritas o formatos especiales - solo texto natural con saltos de línea\n5. **SIEMPRE pide** fecha Y hora completas (no solo \"por la tarde\" o \"mañana\")\n6. **SIEMPRE sé breve** - máximo 3 líneas por respuesta\n7. **USA Date & Time** cuando el cliente mencione fechas relativas (mañana, pasado mañana, próximo lunes, etc.) para convertirlas a fechas específicas\n\n---\n\n## **BASE DE CONOCIMIENTO PROPER RENTAS**\n\n### **SERVICIOS Y PRECIOS**\nLos servicios de Corretaje y Administración se contratan juntos, no se venden por separado.\n\n**Corretaje (conseguir inquilino):**\n- Costo: 1 mes de alquiler incluido IGV\n- Incluye: publicación en portales, filtro de inquilinos, contratos notariales\n\n**Administración (gestión mensual):**\n- Costo: 7% del alquiler mensual más IGV\n- Incluye: recaudación digital, gestión de incidencias, APP de control\n\n**Implementación:**\n- Costo: S/1,000 más IGV\n- GRATIS si contratas Corretaje + Administración\n- Incluye: instalación de rollers, termas, gas, etc.\n\n**Beneficio especial:** Si contratas la Administración y el inquilino se va en los primeros 3 meses, el siguiente Corretaje es GRATIS.\n\n### **DATOS Y ESTADÍSTICAS**\n- Tiempo promedio para alquilar: 24 días\n- Experiencia: 7 años en el mercado\n- Cartera: más de 700 inmuebles\n- Tasa de desalojos: 0 (cero desalojos en nuestra historia)\n- Atrasos en pagos: solo 1 de cada 500 pagos llega con más de 7 días de atraso\n\n### **PROCESO Y SEGURIDAD**\n- Si inquilino no paga 30 días: reporte a Infocorp\n- Si no paga 2 meses y 30 días: proceso de desalojo judicial\n- Penalidad por atraso del inquilino: S/60 diarios\n- Mora se divide: 50% propietario, 50% Proper\n\n### **PAGOS AL PROPIETARIO**\n- Recibes tu renta 7 días después del pago del inquilino\n- Si inquilino paga el día 1, recibes entre el 7 y 8\n- Transferencia directa a tu cuenta bancaria\n\n### **TECNOLOGÍA**\n- APP de Rentas para control total desde tu celular\n- Recaudación 100% digital a través de bancos\n- Firma de documentos online\n- Reportes mensuales automáticos\n\n### **SERVICIOS Y GASTOS**\n- Inquilinos pagan directamente luz, agua, gas\n- Proper hace seguimiento de mantenimiento y arbitrios (con autorización)\n- Reparaciones: se consulta al propietario con cotización previa\n\n### **IMPUESTO A LA RENTA (5%)**\n- Puedes pagarlo directamente\n- Proper puede pagarlo por ti (se descuenta de la renta mensual)\n- Necesitamos autorización por correo y RUC de persona natural\n\n### **COBERTURA Y LIMITACIONES**\n- Solo Lima Metropolitana\n- Solo alquileres de largo plazo (mínimo 12 meses)\n- NO manejamos: Airbnb, rentas temporales, habitaciones individuales\n- NO atendemos departamentos con inquilino moroso actual\n- Departamento debe estar vacío para iniciar\n\n### **REQUISITOS PARA CONTRATAR**\n- Acreditar propiedad (partida registral o minuta)\n- Departamento vacío para permitir visitas\n- Tener iniciado o iniciar trámite de gas\n\n### **PROCESO DE ALQUILER**\n- Publicación en portales: Urbania, Adondevivir, etc.\n- Red de 500+ corredores\n- Evaluación crediticia nivel bancario del inquilino\n- Contrato notarial con cláusula de allanamiento futuro\n- Tiempo promedio: 30 a 45 días (inmuebles de inversión muchas veces en menos de 1 semana)\n\n### **INMUEBLES AMOBLADOS Y EQUIPOS**\n- Si electrodoméstico se malogra primer mes: se asume antigüedad o falta de mantenimiento previo\n- Se recomienda entregar equipos con mantenimiento al día\n- Daños tras varios meses: se evalúa si es desgaste normal o mal uso\n\n### **PROCESO DE VISITAS**\n- Inmueble debe estar desocupado para visitas flexibles\n- Si está ocupado (Airbnb o con cosas): retrasa el proceso de alquiler\n- No es obligatorio entregar vacío pero sí recomendable para rapidez\n\n### **AL TERMINAR CONTRATO**\n- Si inquilino renueva: se evalúa si ajustar precio según mercado\n- Si inquilino desocupa: inspección de inventario, reparaciones necesarias, publicación inmediata\n- Se conserva garantía hasta verificación completa\n\n### **CONTRATO Y DOCUMENTACIÓN**\n- Información necesaria: partida registral o minuta de compra venta\n- Contrato de administración se envía en máximo 24 horas hábiles\n- Firma digital con validez legal\n- Opción de contrato legalizado en notaría o elevado a escritura pública\n\n---\n\n## **HERRAMIENTAS DISPONIBLES**\n\n### **Date & Time Tool**\nUsa esta herramienta SIEMPRE que el cliente mencione fechas relativas como:\n- \"mañana\" → convierte a fecha específica\n- \"pasado mañana\" → convierte a fecha específica  \n- \"el lunes\" → convierte a fecha específica con día y mes\n- \"próxima semana\" → convierte a fecha específica\n\nEsto ayuda a ser preciso y evitar confusiones sobre las fechas exactas.\n\n---\n\n## **PIVOTES EFECTIVOS**\n\nCuando no tengas la información en la base de conocimiento:\n\n- \"Ese detalle específico lo revisamos en la llamada. ¿Qué 2 días y horas te acomodan?\"\n- \"Para darte información exacta sobre tu caso, coordinemos una llamada. ¿Cuándo puedes?\"\n- \"Eso depende de las características de tu propiedad. Lo vemos en detalle por teléfono. ¿Qué fechas prefieres?\"\n\n---\n\n## **EJEMPLOS DE CONVERSACIÓN**\n\n### Ejemplo 1: Cliente directo\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué 2 días y horas te vienen bien? O dime si tienes alguna consulta.\n\nCliente: Mañana a las 3pm o el jueves a las 5pm\n\nDiego: [Usa Date & Time para convertir \"mañana\" a fecha específica]\nPerfecto. Tengo anotado [fecha específica] a las 3pm y jueves [fecha específica] a las 5pm. Mi equipo te confirmará cuál de estos horarios está disponible. Gracias.\n```\n\n### Ejemplo 2: Cliente pregunta precio\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué 2 días y horas te vienen bien? O dime si tienes alguna consulta.\n\nCliente: ¿Cuánto cobran?\n\nDiego: El servicio de administración es 7% más IGV del alquiler mensual y por conseguir el inquilino es 1 mes de alquiler incluido IGV. Ambos servicios van juntos.\nPara explicarte todos los beneficios, ¿qué 2 días y horas te acomodan para una llamada?\n\nCliente: Ok, el lunes o martes\n\nDiego: ¿A qué hora el lunes y a qué hora el martes?\n\nCliente: Lunes 10am y martes 3pm\n\nDiego: Excelente. Tengo lunes [fecha] 10am y martes [fecha] 3pm. Te confirmaremos pronto.\n```\n\n### Ejemplo 3: Cliente pregunta valuación\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué 2 días y horas te vienen bien? O dime si tienes alguna consulta.\n\nCliente: ¿Cuánto puedo cobrar por mi depa en Miraflores?\n\nDiego: Para darte una valuación precisa necesitamos revisar las características específicas de tu propiedad. Lo vemos en la llamada. ¿Qué 2 días y horas prefieres?\n\nCliente: Pero quiero saber un aproximado\n\nDiego: La valuación depende del piso, vista, acabados y ubicación exacta. Por eso necesitamos revisarlo en detalle.\n¿Qué 2 días y horas te vienen bien para explicártelo?\n```\n\n### Ejemplo 4: Pregunta no en base de conocimiento\n```\nCliente: ¿Trabajan con departamentos amoblados?\n\nDiego: Ese detalle específico lo revisamos en la llamada. ¿Qué 2 días y horas te acomodan?\n\nCliente: ¿Pero sí o no?\n\nDiego: Para darte información exacta sobre tu caso, coordinemos una llamada. ¿Cuándo puedes?\n```\n\n### **INFORMACIÓN ADICIONAL**\n- Quién paga arbitrios: inquilinos pagan directamente\n- Quién paga mantenimiento edificio: inquilino\n- Visita del propietario: debe coordinarse previamente con disponibilidad del inquilino\n- Comunicación con inquilino: siempre a través de Proper (no directo)\n- Evaluación del inquilino: historial crediticio limpio, referencias laborales y comerciales\n- Sin casos de incobrabilidad en toda nuestra historia\n- Promedio de alquiler: 24-30 días (depas de inversión a veces menos de 1 semana)\n\n---\n\n## **RECORDATORIO FINAL**\n\n- Eres Diego, una persona real de Proper Rentas\n- Tu único objetivo es conseguir 2 fechas y horas específicas\n- Usa solo información de la base de conocimiento\n- Si no tienes la información, pivota a la llamada\n- Sé breve, directo y natural\n- No uses formatos especiales, solo texto simple"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2000,
        608
      ],
      "id": "56e6f9c7-bfa7-4847-a2de-921e39c65faf",
      "name": "Respuesta1",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "29e8ecb6-738e-4f8c-8bb1-576e6bec11c9",
              "leftValue": "={{ $('new message').item.json.body['message[add][0][origin]'] }}",
              "rightValue": "waba",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2672,
        480
      ],
      "id": "907c7f6f-bc26-49b1-8e1c-bf7d488beb06",
      "name": "Filter2"
    }
  ],
  "pinData": {
    "new message": [
      {
        "json": {
          "headers": {
            "host": "primary-production-0299.up.railway.app",
            "user-agent": "amoCRM-Webhooks/3.0",
            "content-length": "937",
            "accept-encoding": "gzip",
            "content-type": "application/x-www-form-urlencoded",
            "x-amocrm-requestid": "62513976-ff9b-426c-bf54-5b076c25b61a",
            "x-forwarded-for": "169.150.216.79",
            "x-forwarded-host": "primary-production-0299.up.railway.app",
            "x-forwarded-proto": "https",
            "x-railway-edge": "railway/us-east4-eqdc4a",
            "x-railway-request-id": "cBlax9t5S9Czo5Cgg4a9AQ",
            "x-real-ip": "169.150.216.79",
            "x-request-start": "1758234052110"
          },
          "params": {},
          "query": {},
          "body": {
            "account[subdomain]": "propertamibotcom",
            "account[id]": "30050693",
            "account[_links][self]": "https://propertamibotcom.amocrm.com",
            "message[add][0][id]": "fcbd0ad4-45ee-489a-b525-f50d56dfbc7b",
            "message[add][0][chat_id]": "6a9e5903-4ef2-474a-bed6-3ff315a613bc",
            "message[add][0][talk_id]": "200314",
            "message[add][0][contact_id]": "23668637",
            "message[add][0][text]": "hola",
            "message[add][0][created_at]": "1758234050",
            "message[add][0][element_type]": "2",
            "message[add][0][entity_type]": "lead",
            "message[add][0][element_id]": "22004677",
            "message[add][0][entity_id]": "22004677",
            "message[add][0][type]": "incoming",
            "message[add][0][author][id]": "f92fe9a6-bfe9-4f1c-b754-bf61e32d10d4",
            "message[add][0][author][type]": "external",
            "message[add][0][author][name]": "Martin Velasco Ormeno",
            "message[add][0][origin]": "waba"
          },
          "webhookUrl": "https://primary-production-0299.up.railway.app/webhook/rentas",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Lima",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "shared": [
    {
      "createdAt": "2025-08-01T18:40:51.374Z",
      "updatedAt": "2025-08-01T18:40:51.374Z",
      "role": "workflow:owner",
      "workflowId": "97xyyc9aCFy1mmbs",
      "projectId": "tpSonpyzopDOYZNA"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-01T18:41:06.465Z",
      "updatedAt": "2025-08-01T18:41:06.465Z",
      "id": "94z6tcDoVU8DriEW",
      "name": "IA"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-09-18T23:00:34.343Z",
  "versionId": "408da0e2-a2b5-428f-8bb7-818245fce662"
}