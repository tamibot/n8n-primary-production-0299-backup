{
  "active": true,
  "connections": {
    "enviar mensaje": {
      "main": [
        [
          {
            "node": "Update leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Campos": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBot": {
      "main": [
        [
          {
            "node": "Validacion",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "SwitchBot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion": {
      "main": [
        [
          {
            "node": "enviar mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "GET Lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat Memory Manager1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields": {
      "main": [
        [
          {
            "node": "Push Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBuffer": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete message buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDF content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Video content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Image content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Voice content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat input": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON parse": {
      "main": [
        [
          {
            "node": "checkType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "JSON parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete message buffer": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "SwitchBuffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Buffer": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get PDF": {
      "main": [
        [
          {
            "node": "Upload PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze video Gemini": {
      "main": [
        [
          {
            "node": "Video content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video Gemini": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PDF Gemini": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze PDF Gemini": {
      "main": [
        [
          {
            "node": "PDF content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Analyze PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get video": {
      "main": [
        [
          {
            "node": "Upload video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Analyze video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get image": {
      "main": [
        [
          {
            "node": "recognize image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recognize image": {
      "main": [
        [
          {
            "node": "Image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "checkType": {
      "main": [
        [
          {
            "node": "Text content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get voice",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe voice": {
      "main": [
        [
          {
            "node": "Voice content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get voice": {
      "main": [
        [
          {
            "node": "transcribe voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Campos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "new message": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "BUSQUEDA LINK URBANIA": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PROPERTIES - SQL": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta": {
      "main": [
        [
          {
            "node": "Campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Lead": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Respuesta",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Campos",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-01T18:40:51.374Z",
  "id": "97xyyc9aCFy1mmbs",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "RENTAS IA",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "29e8ecb6-738e-4f8c-8bb1-576e6bec11c9",
              "leftValue": "={{ $('new message').item.json.body['message[add][0][origin]'] }}",
              "rightValue": "waba",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2b4ab1f5-9898-4795-95ea-aaaa31a04cae",
              "leftValue": "={{ $('GET Lead').json._embedded.tags }}",
              "rightValue": "stop_ai",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "9a5e4625-cdcb-496c-8c2b-36b73b513e19",
              "leftValue": "={{ $('GET Lead').json._embedded.tags }}",
              "rightValue": "RENTAS",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2736,
        480
      ],
      "id": "316666bc-2247-43ca-866b-f6080cf5d975",
      "name": "Filter"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1838a470-ec0f-44c5-8e5b-8714ed558d2a",
      "name": "enviar mensaje",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3216,
        352
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje proveniente del Cliente: {{ $('Chat input').item.json.chat_input }}\n\nRespuesta del bot: {{ $node[\"Respuesta\"].json.output }}\n\nInfo previa: {{ $node[\"Chat input\"].json.infoPrevia }}",
        "options": {
          "systemMessage": "=# 🏠 PROPER ANALYZER v4.0 - SISTEMA AVANZADO DE PROGRESIÓN\n**Fecha actual:** {{ $now }} | **Zona horaria:** América/Lima\n\n## 🚨 **MANDATO SUPREMO**\n```\n🔴 RESPONDER ÚNICAMENTE JSON COMPLETO\n🔴 CAMBIAR ETAPAS ES OBLIGATORIO SEGÚN PROGRESIÓN\n🔴 VERIFICAR 2 VECES EL CAMBIO DE ETAPA ANTES DE RESPONDER\n```\n\n---\n\n## ⚡ **PROCESO OBLIGATORIO DE ANÁLISIS**\n\n### **PASO 1: LECTURA COMPLETA**\n✅ Leer TODA la conversación + infoPrevia\n✅ Identificar CADA acción del bot y cliente\n✅ Marcar mentalmente puntos de cambio\n\n### **PASO 2: APLICAR CAMBIOS DE ETAPA**\n✅ Evaluar CADA mensaje contra las reglas\n✅ Actualizar etapa inmediatamente cuando corresponda\n✅ NO quedarse en etapa anterior si hay progresión\n\n### **PASO 3: VERIFICACIÓN DOBLE**\n✅ ¿La etapa actual refleja el punto MÁS AVANZADO?\n✅ ¿Hubo señales de cambio que ignoré?\n✅ ¿El bot dijo no tener información? → CASO ESPECIAL\n\n---\n\n## 🔄 **MATRIZ DE CAMBIOS OBLIGATORIOS DE ETAPA**\n\n### **🔴 TRIGGERS INMEDIATOS - NO IGNORAR**\n\n```\n⚠️ CASO ESPECIAL (90801084) - PRIORIDAD MÁXIMA\nACTIVACIÓN INMEDIATA cuando bot dice:\n- \"Ese detalle no lo tengo disponible\"\n- \"Dame un momento que lo averiguo\"\n- \"No tengo esa información\"\n- \"Necesito verificar eso\"\n- Cualquier indicación de falta de información\n\n📍 INGRESO → INTERACTUANDO (90801080)\nCUANDO: Bot presenta información de propiedad\nTRIGGER: \"Tengo esta opción...\" / \"Este departamento...\"\n\n📍 DEFINIENDO → INTERACTUANDO (90801080)\nCUANDO: Bot muestra propiedades específicas\nTRIGGER: \"Encontré esta propiedad...\" / \"Las opciones son...\"\n\n📍 INTERACTUANDO → INTERESADO (90801092)\nCUANDO: Cliente expresa deseo de visitar\nTRIGGER: \"Quiero visitarlo\" / \"¿Cuándo puedo verlo?\"\nRESTRICCION: Si ya esta en esta etapa no debemos de regresarlo a interactuando, dejemoslo en interesado y debemos de cambiarlo a horario indicado cuando tengamos los horarios.\n\n📍 INTERESADO → HORARIO INDICADO (90801096)\nCUANDO: Cliente da 2 horarios completos\nTRIGGER: \"Martes 3pm y jueves 10am\"\nRESTRICCION: Si ya esta en esta etapa JAMAS CAMBIARLO o regresarlo a una etapa anterior, muy importante esta indicacion.\n```\n\n---\n\n## 🎯 **ALGORITMO DE DETECCIÓN v2.0**\n\n```python\ndef detectar_etapa():\n    # PRIORIDAD 1: Verificar CASO ESPECIAL\n    if bot_dice_no_tener_info():\n        return \"90801084\"  # CASO ESPECIAL\n    \n    # PRIORIDAD 2: Verificar progresión normal\n    if cliente_dio_2_horarios():\n        return \"90801096\"  # HORARIO INDICADO\n    \n    if cliente_quiere_visitar():\n        return \"90801092\"  # INTERESADO\n    \n    if bot_presento_propiedades():\n        return \"90801080\"  # INTERACTUANDO\n    \n    if cliente_busca_sin_propiedad():\n        return \"90801076\"  # DEFINIENDO\n    \n    if hay_url_en_infoPrevia():\n        return \"90801072\"  # INGRESO CON PROPIEDAD\n```\n*Nota:* Es importante indicar que si ya esta en horario indicado o en interesado no debemos de regresar a una etapa anterior, revisemos siempre la conversacion para ver en que etapa esta.\n\n---\n\n## 📋 **ESTADOS Y SUS SEÑALES INEQUÍVOCAS**\n\n### **90801072 - Ingreso con Propiedad**\n- **SOLO** al inicio con URL/código en infoPrevia\n- **CAMBIA A:** Interactuando cuando bot responde\n\n### **90801076 - Definiendo Propiedad**\n- Cliente busca, bot pregunta criterios\n- **CAMBIA A:** Interactuando cuando bot presenta opciones\n\n### **90801080 - Interactuando**\n- Bot YA presentó propiedad(es)\n- Cliente hace preguntas\n- **CAMBIA A:** \n  - Interesado si quiere visitar\n  - **CASO ESPECIAL si bot no tiene info**\n\n### **90801084 - Caso Especial 🚨**\n- **ACTIVACIÓN INMEDIATA si:**\n  - Bot: \"no tengo ese dato\"\n  - Bot: \"dame un momento que lo averiguo\"\n  - Bot: \"necesito verificar\"\n  - Cliente: \"quiero hablar con alguien\"\n\n### **90801092 - Interesado**\n- Cliente confirma querer visitar\n- **CAMBIA A:** Horario Indicado con 2 fechas\n\n### **90801096 - Horario Indicado**\n- **SOLO** con fecha1 Y fecha2 completas\n\n---\n\n## 📝 **ESTRUCTURA JSON OBLIGATORIA**\n\n```json\n{\n  \"nombre\": \"[Extraído o vacío]\",\n  \"telefono\": \"[+51XXXXXXXXX o vacío]\",\n  \"correo\": \"[email o vacío]\",\n  \"propiedadInteres\": \"[Propiedad presentada/consultada]\",\n  \"fecha1\": \"[DD/MM/YYYY HH:mm o vacío]\",\n  \"fecha2\": \"[DD/MM/YYYY HH:mm o vacío]\",\n  \"solicitud\": \"[Resumen completo con URLs]\",\n  \"animo\": \"[caliente/tibio/frio]\",\n  \"estatusEmbudo\": \"[Nombre de etapa ACTUAL correcta]\",\n  \"statusId\": \"[Código numérico correcto]\",\n  \"seg1\": \"[Mensaje creativo o vacío si Horario Indicado]\",\n  \"seg2\": \"[Mensaje urgente o vacío si Horario Indicado]\",\n  \"seg3\": \"[Último intento o vacío si Horario Indicado]\"\n}\n```\n\n---\n\n## 🎯 **EJEMPLOS DE CAMBIOS CORRECTOS**\n\n### **Ejemplo 1: Bot sin información → CASO ESPECIAL**\n```\nCliente: \"¿Tiene vista al mar?\"\nBot: \"Ese detalle no lo tengo disponible, dame un momento que lo averiguo\"\n\n✅ ESTADO CORRECTO: CASO ESPECIAL (90801084)\n❌ INCORRECTO: Mantenerlo en Interactuando\n```\n\n### **Ejemplo 2: Bot presenta → INTERACTUANDO**\n```\nBot: \"Tengo una opción en MODO, 1 dormitorio...\"\nCliente: [cualquier respuesta]\n\n✅ ESTADO CORRECTO: INTERACTUANDO (90801080)\n❌ INCORRECTO: Dejarlo en Definiendo\n```\n\n### **Ejemplo 3: Progresión con caso especial**\n```\n1. Bot presenta propiedad → INTERACTUANDO\n2. Cliente: \"¿Tiene balcón?\"\n3. Bot: \"No tengo esa información\" → CASO ESPECIAL\n4. Asesor resuelve → INTERACTUANDO\n5. Cliente: \"Quiero visitarlo\" → INTERESADO\n```\n\n---\n\n## ⚠️ **VERIFICACIÓN OBLIGATORIA PRE-RESPUESTA**\n\n### **CHECKLIST DE DOBLE VERIFICACIÓN:**\n\n```\n□ ¿Leí TODA la conversación?\n□ ¿El bot dijo no tener información? → SI = CASO ESPECIAL\n□ ¿El bot presentó propiedades? → SI = Mínimo INTERACTUANDO\n□ ¿Cliente quiere visitar? → SI = INTERESADO\n□ ¿Cliente dio 2 horarios? → SI = HORARIO INDICADO\n□ ¿La etapa refleja el estado MÁS AVANZADO?\n□ ¿Verifiqué 2 veces el cambio de etapa?\n```\n\n### **AUTOVALIDACIÓN FINAL:**\n```\nPREGÚNTATE:\n1. ¿Qué etapa asigné?\n2. ¿Es coherente con lo que pasó en la conversación?\n3. ¿Hay alguna frase del bot sobre no tener info?\n4. ¿Cambié la etapa cuando debía?\n5. ¿Puedo justificar esta etapa?\n6. ¿No regrese de etapa al cliente?\n```\n\n---\n\n## ⚡ **USO OBLIGATORIO DATE&TIME**\n- **SIEMPRE** para convertir fechas/horas\n- Formato: DD/MM/YYYY HH:mm\n- NO inventar horarios\n\n---\n\n## 💬 **MENSAJES DE SEGUIMIENTO CONTEXTUALES**\n\n### **Por etapa:**\n\n**Caso Especial (90801084):**\n- \"Un especialista está revisando tu consulta sobre [tema]\"\n- \"Nuestro asesor te ayudará con [situación específica]\"\n- \"Es importante resolver [consulta]. Te contactaremos pronto\"\n\n**Interactuando (90801080):**\n- Referir la propiedad específica\n- Resolver dudas pendientes\n- Crear urgencia de disponibilidad\n\n**Interesado (90801092):**\n- Si dio 1 horario: pedir el segundo\n- Si no dio: solicitar ambos\n- Enfatizar necesidad de 2 opciones\n\n**Horario Indicado (90801096):**\n- seg1: \"\" / seg2: \"\" / seg3: \"\"\n\n---\n\n## 🔴 **RECORDATORIO CRÍTICO FINAL**\n\n```\nANTES DE RESPONDER, VERIFICAR:\n\n1. ¿El bot dijo \"no tengo ese dato\" o similar?\n   → DEBE SER CASO ESPECIAL\n\n2. ¿El bot ya presentó propiedades?\n   → NO PUEDE SER DEFINIENDO\n\n3. ¿La etapa cambió correctamente?\n   → REVISAR UNA VEZ MÁS\n\n4. ¿Mi JSON tiene todos los campos?\n   → COMPLETAR TODO\n\nRESPONDER SOLO CON JSON VERIFICADO\n```"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2064,
        320
      ],
      "id": "2a6e3e65-5548-4e7d-989a-b45e5fc702b7",
      "name": "Campos",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2768,
        336
      ],
      "id": "53c6beb6-7d84-4901-a595-dc61fb6bcd48",
      "name": "SwitchBot",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "15ef6b22-34e3-4474-a528-5875cfc10d1c",
              "name": "message.message_id",
              "value": "={{ $('new message').item.json.body['message[add][0][id]'] }}",
              "type": "string"
            },
            {
              "id": "49d4f002-9cac-49a6-b148-910afa73eeb8",
              "name": "message.chat_id",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}",
              "type": "string"
            },
            {
              "id": "22d94f50-7b1e-4957-84fa-7707f1a7ea15",
              "name": "message.attachment_type",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][type]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "b1cd9abc-1fd4-4470-8149-172af1e40ba7",
              "name": "message.attachment_link",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][link]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "fdc7c03d-f6ed-4a07-a492-40c639068a35",
              "name": "message.content",
              "value": "={{ $('new message').item.json.body['message[add][0][text]'] || $json.cleanText || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "47983c76-fa0a-4ac9-bcf1-f44973b8ce85",
              "name": "message.timestamp",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "90da165d-479f-4371-a2fb-b3ea27521147",
              "name": "user.name",
              "value": "={{ $('new message').item.json.body['message[add][0][author][name]'] }}",
              "type": "string"
            },
            {
              "id": "bbb94191-c258-402a-a01e-29ba527fc55a",
              "name": "user.lead_id",
              "value": "={{ $('new message').item.json.body['message[add][0][element_id]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "f5ef142c-3165-4b6e-bbec-15491ee97519",
              "name": "user.infoPrevia",
              "value": "={{ $json.custom_fields_values.find(field => field.field_name === \"n8n - infoPrevia\")?.values[0]?.value || \"sin info\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2464,
        480
      ],
      "id": "93971de1-1355-4181-89b2-3fbb7e83e06e",
      "name": "Set Fields",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "nombreCliente",
              "description": "Nombre completo del cliente o paciente",
              "required": true
            },
            {
              "name": "telefono",
              "description": "Número de telefono con código internacional para mexico",
              "required": true
            },
            {
              "name": "correoCliente",
              "description": "Correo electrónico válido del cliente, si no existe dejarlo en blanco, no inventar. ",
              "required": true
            },
            {
              "name": "propiedadInteres",
              "description": "Identificador, dirección o código de propiedad (acumulativo)",
              "required": true
            },
            {
              "name": "animo",
              "description": "Nivel de interés detectado",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Etapa actual del proceso (nombre descriptivo)",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Motivo del contacto: solicitar cita, pedir información, etc.",
              "required": true
            },
            {
              "name": "solicitud",
              "description": "breve resumen de la solicitud del cliente",
              "required": true
            },
            {
              "name": "seg1",
              "description": "mensaje de seguimiento 1",
              "required": true
            },
            {
              "name": "seg2",
              "description": "mensaje de seguimiento 2",
              "required": true
            },
            {
              "name": "seg3",
              "description": "mensaje de seguimiento 3",
              "required": true
            },
            {
              "name": "fecha1",
              "description": "fecha 1 solicitada por el cliente",
              "required": true
            },
            {
              "name": "fecha2",
              "description": "fecha 2 solicitada por el cliente",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        2416,
        320
      ],
      "id": "d5aff622-8e8e-4baa-a01e-5c6156837be6",
      "name": "Information Extractor",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2992,
        352
      ],
      "id": "92a9f874-fd66-4acb-bf1b-6a6c3921ed41",
      "name": "Validacion",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -3184,
        1008
      ],
      "id": "d8f4b9f3-15b9-404d-9baa-b3f21a15a1f9",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "b0663eb3-aeb4-43a0-90e0-e04f1414bed9"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45aafbcb-1433-41c0-8b2e-0213e764bc8f",
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3472,
        640
      ],
      "id": "0406e78a-3876-46c2-bf6c-bbb0c9acb3c1",
      "name": "Switch"
    },
    {
      "parameters": {
        "mode": "delete",
        "deleteMode": "all"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -3248,
        784
      ],
      "id": "bc5a0bc8-edef-4244-8430-792343cec249",
      "name": "Chat Memory Manager1"
    },
    {
      "parameters": {
        "content": "## Paso1\nCopiar URL y crear un webhook en Kommo.\nEl webhook debe estar configurado como POST",
        "height": 360,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4000,
        432
      ],
      "typeVersion": 1,
      "id": "6a8dc48d-aa92-4606-a230-073db3daf74f",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.message.last()).message_id }}",
                    "rightValue": "={{ $('Set Fields').item.json.message.message_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "ff9642b1-0bfc-430c-8cdf-412dcb7ce8fc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No hacer nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "74e8af3c-1784-4894-a07e-778136e794c0",
                    "leftValue": "={{ JSON.parse($json.message.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(10, \"seconds\") }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Seguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Esperar"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1792,
        336
      ],
      "id": "1fcc15f7-9d7c-4110-bb57-d0b308bc8d4e",
      "name": "SwitchBuffer"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "622a3a56-f045-4994-9846-7a80ba8ca27b",
      "name": "PDF content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        832
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5dcc584a-ba87-404a-ad0d-e818c392ca3b",
      "name": "Video content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        576
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "485cce69-8f26-46af-b8a1-b03cb303afc8",
      "name": "Image content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        384
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "24b9ff4e-40d3-4180-9acb-80a2df737bff",
      "name": "Voice content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        192
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        896,
        352
      ],
      "id": "44febada-8fe6-499e-9eac-0f7a57718a49",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        672,
        352
      ],
      "id": "31c1f935-7028-43b1-92d7-bed8813ae169",
      "name": "Sort"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        448,
        304
      ],
      "id": "20384c1a-7f9b-46b5-a909-a2d0a156136a",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "chat_input",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            },
            {
              "id": "599f652e-3bfc-4c4f-bed8-7a331d9c0031",
              "name": "infoPrevia",
              "value": "={{ $('Set Fields').item.json.user.infoPrevia }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bd0d1474-839c-45b7-8ab4-9e0238466f95",
      "name": "Chat input",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        352
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $('JSON parse').item.json.content}}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5ae1bdc4-59d1-4174-8717-2d716e3eaebc",
      "name": "Text content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        0
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.message) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1120,
        304
      ],
      "id": "d33e86c3-93c7-45b6-b244-8a0574812853",
      "name": "JSON parse"
    },
    {
      "parameters": {
        "fieldToSplitOut": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1344,
        304
      ],
      "id": "4f54baf2-e4a4-4d25-a3fb-fdb1bd9bfc86",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1568,
        304
      ],
      "id": "840a696c-69d0-454b-ae7d-2dd5acbc4162",
      "name": "Delete message buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1568,
        112
      ],
      "id": "3c22ddd7-b7ee-47e9-b644-493a9f8c76d8",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1568,
        528
      ],
      "id": "0eb230b4-0110-4a11-9a75-22afd04aeaa0",
      "name": "Wait2",
      "webhookId": "ec0a7b27-9464-4abf-9d4c-d913aa66ae50"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2016,
        480
      ],
      "id": "2d04d9d4-19a3-42c3-9a17-238cf1726a45",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "messageData": "={{ JSON.stringify($('Set Fields').item.json.message) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2240,
        480
      ],
      "id": "936d4611-eabf-4777-abc4-48e30c55b6db",
      "name": "Push Buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -672,
        832
      ],
      "id": "62c24a61-9ab5-4c19-a74e-105a7da8d840",
      "name": "get PDF"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"contents\": [\n        {\n            \"role\": \"user\",\n            \"parts\": [\n                {\n                    \"fileData\": {\n                        \"fileUri\": \"{{ $json.file.uri }}\",\n                        \"mimeType\": \"{{ $json.file.mimeType }}\"\n                    }\n                },\n                {\n                    \"text\": \"Describe lo que se escucha, ve y se hace en el video. Brinda como respuesta unicamente el resumen del video.\"\n                }\n            ]\n        }\n    ],\n    \"generationConfig\": {\n        \"temperature\": 1.2,\n        \"topK\": 40,\n        \"topP\": 0.95,\n        \"maxOutputTokens\": 8192,\n        \"responseModalities\": [\"Text\"]\n    }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        576
      ],
      "id": "8339dcc1-b9cb-4d0b-9ca3-28948cf87f2e",
      "name": "Analyze video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -448,
        576
      ],
      "id": "9a1cd6b0-b3b6-4113-869a-4f9b4292a6c9",
      "name": "Upload video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "application/pdf"
            },
            {
              "name": "X-Goog-Upload-Protocol",
              "value": "raw"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -448,
        832
      ],
      "id": "cbe979a4-a365-4716-b85d-cd4603f50b0e",
      "name": "Upload PDF Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"fileData\": {\n            \"fileUri\": \"{{ $('Upload PDF Gemini').item.json.file.uri }}\",\n            \"mimeType\": \"application/pdf\"\n          }\n        },\n        {\n          \"text\": \"Resume este documento en español.\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"temperature\": 0.3,\n    \"maxOutputTokens\": 1024\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        832
      ],
      "id": "6e3d1112-a538-4397-a047-f4b6d29c12c6",
      "name": "Analyze PDF Gemini"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -224,
        832
      ],
      "id": "3e61e416-bda4-4f6f-ba6a-5f0710205ec9",
      "name": "Wait1",
      "webhookId": "7d0cd0c0-ce85-4372-b7a5-b0be061fc2b9"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -672,
        576
      ],
      "id": "94429558-1aba-4a37-aec0-2483cf045b18",
      "name": "get video"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -224,
        576
      ],
      "id": "6a6b77bf-382f-4bde-b257-36ec4a4e1186",
      "name": "Wait",
      "webhookId": "7d0cd0c0-ce85-4372-b7a5-b0be061fc2b9"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -224,
        384
      ],
      "id": "d8dd626d-ffdb-4d92-8318-463e0e41348e",
      "name": "get image"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analiza la imagen y responde un resumen de la imagen detallado",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        0,
        384
      ],
      "id": "16f7e2af-5e2d-49bd-a800-3308c8a8a85a",
      "name": "recognize image",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "22e56679-fe2e-4b7c-986c-3a7c33539e94",
                    "leftValue": "={{ $json.content }}",
                    "rightValue": "vacio",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "voice",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "450ac27e-86a3-439d-a06e-6ff65026910b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1cbc31b0-945c-4b0a-9487-1f6db0c028c5",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "picture",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b6d01933-c86a-4b74-84fc-c199391848b6",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "video"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "408bc60d-539c-48f6-8fa6-584e0e968ddf",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "file",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "file"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -896,
        256
      ],
      "id": "4003969f-6b19-4d22-8953-42a563090cfd",
      "name": "checkType"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "687c8e88-b925-4bb3-8bf4-ce8b5fd98365",
      "name": "transcribe voice",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        0,
        192
      ],
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "id": "5df5d858-8194-47fd-bfa5-51c1a0753c82",
      "name": "get voice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -224,
        192
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2080,
        544
      ],
      "id": "5bf87c99-2cd5-4be6-bb4c-c7418f578e2c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2496,
        544
      ],
      "id": "ff62467a-3c67-4ac3-a62b-bcbeef7b1f68",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": 11240224,
              "status_id": "={{ Number($('Information Extractor').item.json.output.statusId) }}",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":797869,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.nombreCliente }}"
                  },
                  {
                    "data": "{\"id\":797871,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.propiedadInteres }}"
                  },
                  {
                    "data": "{\"id\":797875,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":797879,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.animo }}"
                  },
                  {
                    "data": "{\"id\":797917,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg1 }}"
                  },
                  {
                    "data": "{\"id\":797919,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg2 }}"
                  },
                  {
                    "data": "{\"id\":797921,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg3 }}"
                  },
                  {
                    "data": "{\"id\":798001,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha1 }}"
                  },
                  {
                    "data": "{\"id\":798003,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha2 }}"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        3440,
        352
      ],
      "id": "982f6c94-e31b-44d7-a10b-e9415ac86cdd",
      "name": "Update leads",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "rentas",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3920,
        640
      ],
      "id": "2ff831a7-d662-44db-863f-528f3178fb0a",
      "name": "new message",
      "webhookId": "e1a2ce29-1bfe-4bac-9950-bbc8beedfee0"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje cliente: {{ $json.chat_input }}\n\nInfo previa: {{ $json.infoPrevia }}",
        "options": {
          "systemMessage": "=# David v5.0 - Sistema Profesional Proper Rentas\n\n**INSTRUCCIÓN CRÍTICA:** Usa SIEMPRE la herramienta Date & Time para cualquier referencia temporal. Hoy es {{ $now }}\n\n---\n\n## 🚨 **REGLA ABSOLUTA #1 - NUNCA CONFIRMAR VISITAS**\n\n### **⚠️ PROHIBICIÓN CRÍTICA ⚠️**\n```\nJAMÁS CONFIRMAR VISITAS - SOLO REGISTRAR SOLICITUDES\n\n❌ NUNCA DECIR:\n- \"Nos vemos mañana\"\n- \"Te espero el martes\"\n- \"Confirmada tu visita\"\n- \"Agendado para...\"\n- \"Listo, te esperamos\"\n- \"Visita confirmada\"\n- \"Cita agendada\"\n\n✅ SIEMPRE DECIR:\n- \"Registro tu SOLICITUD de visita\"\n- \"Anoto tus horarios PREFERIDOS\"\n- \"PRONTO te confirmo la disponibilidad\"\n- \"Esta es tu SOLICITUD, aún no está confirmada\"\n- \"Tengo tu SOLICITUD, te aviso cuando se confirme\"\n\nRECORDATORIO: Las visitas NUNCA se confirman en el chat.\nSolo registramos solicitudes que DESPUÉS se confirmarán.\n```\n\n---\n\n## 🎯 **IDENTIDAD Y OBJETIVO PRINCIPAL**\n\n**Eres David, profesional de Proper Rentas.**\n\n### **OBJETIVO PRIMARIO:**\n**CONSEGUIR 2 HORARIOS DE VISITA DEL CLIENTE (como solicitud)**\n\n### **Principios fundamentales:**\n- Hablas en primera persona como David\n- Eres un profesional real, no un bot\n- NUNCA inventas información\n- SIEMPRE revisar TODO el historial antes de responder\n- Comunicación directa y natural\n- Texto plano, sin emojis ni formatos especiales\n\n---\n\n## ⏰ **HORARIOS DE ATENCIÓN OFICIAL**\n\n### **HORARIOS ESTÁNDAR (todas las propiedades):**\n```\nLunes a Viernes: 9:00 am - 6:45 pm\nSábados: 9:00 am - 11:45 am\nDomingos: NO hay visitas\n```\n\n### **EXCEPCIÓN - Proyecto MODO:**\n```\nLunes a Viernes: 8:00 am - 8:00 pm\nSábados: 8:00 am - 5:00 pm\nDomingos: Consultar disponibilidad\n```\n\n---\n\n## 📧 **CORREO ÚNICO OFICIAL**\n\n**ÚNICO CORREO AUTORIZADO:**\n```\nsoporte.corretaje@proper.com.pe\n```\n\n**NUNCA inventar otros correos. Si necesitan enviar algo por correo, SIEMPRE usar este.**\n\n---\n\n## 🏢 **BASE DE CONOCIMIENTO - PROYECTO MODO**\n\n### **IDENTIFICACIÓN INMEDIATA:**\n**Si mencionan:** San Miguel, PUCP, cerca universidad, petfriendly\n**ACCIÓN:** Ofrecer directamente MODO\n\n### **PROYECTO MODO - San Miguel**\n**Códigos:** MODOLF / MODOTW\n**Ubicación:** Al costado de la PUCP, corazón de San Miguel\n**Características:** Edificio moderno, petfriendly\n\n**Departamentos disponibles:**\n\n**1 dormitorio (47-57 m²):**\n- Sin amoblar: S/1,700 (1 mes garantía + 1 adelanto)\n- Amoblado: S/1,900 (2 meses garantía + 1 adelanto)\n- Incluye: mantenimiento + internet + arbitrios\n- Link: https://urbania.pe/propiedades/moderno-departamento-en-san-miguel-cerca-a-la-pu-145880126.html\n\n**2 dormitorios (47-57 m²):**\n- Sin amoblar: S/1,900 (1 mes garantía + 1 adelanto)\n- Amoblado: S/2,100 (2 meses garantía + 1 adelanto)\n- Incluye: mantenimiento + internet + arbitrios\n- Link: https://urbania.pe/propiedades/alquiler-departamento-de-estreno-en-san-miguel-s-1800-145887441.html\n\n**ESTACIONAMIENTOS MODO:**\n- Precio: S/300 mensuales\n- **Modalidad 2x1:** 2 meses adelanto + 1 mes garantía\n- Preguntar SIEMPRE si necesitan estacionamiento\n\n**Condiciones especiales MODO:**\n- Contratos de 6, 9 o 12 meses\n- Sustento de ingresos formales\n- **Horarios especiales:** L-V 8am-8pm, Sáb 8am-5pm\n\n**Web informativa:** https://proper.com.pe/edificio-modo-departamentos-en-alquiler/\n\n---\n\n## 📋 **CONDICIONES ESTÁNDAR (resto de propiedades)**\n\n### **Condiciones de alquiler:**\n```\n- Dos meses de garantía\n- Un mes de adelanto\n- Contrato mínimo de un año\n- Sustento de ingresos formales\n- Horarios: L-V 9am-6:45pm, Sáb 9am-11:45am\n```\n\n---\n\n## 📄 **REQUISITOS Y FIRMA DE CONTRATO**\n\n### **REQUISITOS PERSONA NATURAL:**\n```\n- DNI o CE por ambos lados\n- 3 últimas boletas (dependiente) o 4 recibos honorarios (independiente)\n- Reporte deudas SBS: https://www.sbs.gob.pe/usuarios/nuestros-servicios/reporte-de-deuda\n- Reporte antecedentes: https://www.empleosperu.gob.pe/portal-mtpe/#/\n- Tutorial: https://youtu.be/MuES73ig5oo\n```\n\n### **REQUISITOS PERSONA JURÍDICA:**\n```\nIMPORTANTE: La empresa puede presentar requisitos, pero para \nfirmar el contrato DEBE figurar una PERSONA NATURAL (representante legal).\n\nRequisitos de la empresa:\n- Ficha RUC empresa\n- Sustento ingresos 3 meses - PDT\n- Declaración Impuesto a la Renta\n- DNI/CE representante legal\n- Reporte deudas SBS (representante)\n- Reporte antecedentes (representante)\n\nNOTA: En el contrato firmará el representante legal como persona natural.\n```\n\n---\n\n## 💰 **COMISIONES COMPARTIDAS**\n\n### **Respuesta estándar:**\n```\nCliente: \"¿Podemos coordinar algún esquema de comisión compartida?\"\n\nRespuesta:\n\"Por este departamento ya estamos compartiendo comisión.\nEl otro 50% lo podemos manejar 30% para usted y 20% para nosotros.\n¿Te parece bien este esquema?\"\n```\n\n---\n\n## 🚫 **PRECIOS NO NEGOCIABLES**\n\n### **Si preguntan por negociación:**\n```\nCliente: \"¿Es negociable el precio?\" / \"¿Puede bajar a X?\"\n\nRespuesta:\n\"Los propietarios acordaron ese precio como valor final.\nTe sugiero conocer el departamento para que veas todo \nel valor que incluye.\n\n¿Qué 2 horarios tienes disponibles para una visita?\"\n```\n\n---\n\n## 📅 **PROCESO CORRECTO - SOLICITUD DE VISITA**\n\n### **PASO 1 - Presentar condiciones y solicitar horarios:**\n```\n\"Las condiciones de alquiler son:\n[Condiciones según propiedad]\n\nSi estás de acuerdo, indícame 2 opciones de fecha y hora\nque prefieras para SOLICITAR tu visita.\n\nHorarios disponibles:\nLunes a Viernes: 9:00 am - 6:45 pm\nSábados: 9:00 am - 11:45 am\"\n```\n\n### **PASO 2 - Registro de SOLICITUD (NUNCA confirmación):**\n```\nCliente: \"Puedo martes 3pm o jueves 10am\"\n\nACCIÓN: Validar con Date & Time SIEMPRE\n\nRespuesta:\n\"Perfecto, registro tu SOLICITUD de visita:\n\nPropiedad: [dirección exacta]\nOpción 1: Martes 27/01/2025 - 15:00\nOpción 2: Jueves 29/01/2025 - 10:00\n\n⚠️ IMPORTANTE: Esta es tu SOLICITUD. Aún NO está confirmada.\nPronto te confirmo cuál de los dos horarios está disponible.\n\nSi necesitas enviar algún documento, usa:\nsoporte.corretaje@proper.com.pe\n\n¿Alguna pregunta adicional sobre el departamento?\"\n```\n\n### **PASO 3 - Si ya tienes los horarios (no repreguntar):**\n```\nCliente: \"¿Viene con refrigeradora?\"\n\nRespuesta (si ya diste los 2 horarios):\n\"Ese detalle lo verificamos en la visita.\nYa tengo tu SOLICITUD con los 2 horarios, \npronto te confirmo cuál está disponible.\n\n¿Algo más que necesites saber?\"\n```\n\n---\n\n## 🔄 **MANEJO ESTRATÉGICO DE CONSULTAS**\n\n### **Estrategia principal - Derivar a visita:**\n```\nCliente: \"¿Tiene balcón?\" / \"¿Es silencioso?\" / \"¿Viene con cama?\"\n\nRespuesta (información no crítica):\n\"Ese detalle lo verificamos directamente en la visita.\nPara coordinar tu SOLICITUD, ¿qué 2 horarios prefieres?\n\nRecuerda: L-V 9am-6:45pm, Sáb 9am-11:45am\"\n```\n\n### **Solo si INSISTEN mucho:**\n```\nCliente: \"NECESITO saber si tiene balcón antes de ir\"\n\nRespuesta:\n\"Entiendo que es importante para ti. Dame un momento\nque verifico ese dato específico y regreso contigo.\n\n[Si no se puede verificar:]\nNo tengo ese detalle confirmado ahora, pero sin falta\nlo revisamos en la visita. ¿Qué 2 horarios prefieres\npara tu SOLICITUD?\"\n```\n\n### **Aclaración sobre amoblado:**\n```\nCliente: \"¿El amoblado incluye cama?\"\n\nRespuesta:\n\"El departamento está amoblado pero el detalle específico\ndel mobiliario lo confirmamos en la visita.\nNo quiero darte información incorrecta.\n\n¿Cuándo podrías visitarlo? Dame 2 opciones de horario.\"\n```\n\n---\n\n## 📋 **FLUJOS OPTIMIZADOS**\n\n### **FLUJO A - Enlaces (Urbania/Adondevivir):**\n```\nCliente: \"Me interesa [enlace]\"\n\nACCIÓN: Ejecutar búsqueda con URL exacta\n\nRespuesta:\n\"Hola, soy David de Proper Rentas.\n\n[Información REAL obtenida]\n\nPara coordinar tu visita, necesito 2 horarios que prefieras.\n\nDisponibilidad:\nL-V: 9:00 am - 6:45 pm\nSábados: 9:00 am - 11:45 am\n\n¿Qué opciones tienes?\"\n```\n\n### **FLUJO B - Proyecto MODO (PUCP/San Miguel):**\n```\nCliente: \"Busco cerca de la PUCP\"\n\nRespuesta:\n\"Hola, soy David de Proper Rentas.\n\nTengo MODO, edificio moderno al costado de la PUCP:\n\n[Info de MODO]\n\n¿Necesitas estacionamiento? S/300 mensuales (2x1: \n2 meses adelanto + 1 garantía)\n\nPara SOLICITAR tu visita, dame 2 horarios.\nMODO tiene horario extendido:\nL-V: 8am-8pm, Sáb: 8am-5pm\"\n```\n\n### **FLUJO C - Ya tienes los horarios:**\n```\nCliente: [cualquier consulta después de dar horarios]\n\nRespuesta:\n\"[Respuesta breve a la consulta si es posible]\n\nYa tengo tu SOLICITUD con los 2 horarios.\nRecuerda que aún NO está confirmada, pronto te aviso.\n\n¿Algo más?\"\n```\n\n---\n\n## 🎯 **TÉCNICAS PARA CONSEGUIR HORARIOS**\n\n### **Crear urgencia sin presionar:**\n```\n\"Este departamento tiene bastante interés.\nPara separarte un espacio en la agenda,\n¿qué 2 horarios prefieres para tu SOLICITUD?\"\n```\n\n### **Después de cada respuesta:**\n```\n\"[Respuesta a consulta]\n\nYa que estás interesado, coordinemos tu visita.\n¿Qué 2 opciones de horario tienes?\nRecuerda: L-V 9am-6:45pm, Sáb 9am-11:45am\"\n```\n\n### **Si dudan:**\n```\nCliente: \"Lo voy a pensar\"\n\nRespuesta:\n\"Por supuesto. Te sugiero igual conocerlo para\ntomar una mejor decisión, sin compromiso.\n¿Qué día podrías? Dame 2 opciones para tu SOLICITUD.\"\n```\n\n---\n\n## ⚠️ **PROHIBICIONES ABSOLUTAS**\n\n**NUNCA JAMÁS:**\n1. Confirmar visitas como hechos (ES SOLO SOLICITUD)\n2. Inventar información, precios o características\n3. Crear correos diferentes a soporte.corretaje@proper.com.pe\n4. Hacer preguntas ya respondidas (revisar historial)\n5. Decir que está \"agendado\" o \"confirmado\"\n6. Asumir detalles de amoblado\n7. Negociar precios\n8. Olvidar que estacionamiento MODO es 2x1\n9. Dar horarios fuera del rango permitido\n10. No pedir los 2 horarios\n\n**SIEMPRE SIN EXCEPCIÓN:**\n1. Aclarar que es SOLICITUD, NO confirmación\n2. Revisar TODO el historial completo\n3. Usar Date & Time para fechas\n4. Orientar hacia conseguir 2 horarios\n5. Usar horarios correctos (9am-6:45pm / 9am-11:45am)\n6. Correo único: soporte.corretaje@proper.com.pe\n7. Preguntar por estacionamiento en MODO\n8. Ser David hablando directamente\n\n---\n\n## 📝 **EJEMPLOS CORRECTOS**\n\n### **Ejemplo 1 - SOLICITUD clara:**\n```\nCliente: \"Puedo el miércoles 4pm o viernes 10am\"\n\nDavid:\n\"Perfecto, registro tu SOLICITUD:\n\nOpción 1: Miércoles 28/01/2025 - 16:00\nOpción 2: Viernes 30/01/2025 - 10:00\n\n⚠️ Esta es tu SOLICITUD, aún NO está confirmada.\nPronto te confirmo cuál horario está disponible.\n\nSi necesitas enviar documentos:\nsoporte.corretaje@proper.com.pe\"\n```\n\n### **Ejemplo 2 - MODO con estacionamiento 2x1:**\n```\nCliente: \"El depa de San Miguel, ¿cuánto el estacionamiento?\"\n\nDavid:\n\"En MODO el estacionamiento cuesta S/300 mensuales.\nModalidad 2x1: pagas 2 meses adelantado + 1 de garantía.\n\n¿Lo necesitas? \n\nPara SOLICITAR tu visita, ¿qué 2 horarios prefieres?\nMODO: L-V 8am-8pm, Sáb 8am-5pm\"\n```\n\n### **Ejemplo 3 - Empresa (persona jurídica):**\n```\nCliente: \"Mi empresa alquilaría el depa\"\n\nDavid:\n\"Perfecto, la empresa puede presentar los requisitos\npero el contrato lo firma el representante legal\ncomo persona natural.\n\nNecesitarán:\n- Documentos de la empresa (RUC, PDT, etc.)\n- DNI y reportes del representante legal\n\nPara coordinar la visita, ¿qué 2 horarios prefieren?\nL-V: 9am-6:45pm, Sáb: 9am-11:45am\"\n```\n\n### **Ejemplo 4 - Sin inventar información:**\n```\nCliente: \"¿Cuánto es el mantenimiento exacto?\"\n\nDavid (si no está especificado):\n\"Ese monto exacto no lo tengo disponible ahora,\nlo verifico y te confirmo.\n\nMientras tanto, ¿qué 2 horarios prefieres para\nSOLICITAR tu visita?\"\n\n[NUNCA inventar: \"son aproximadamente 150\" o similar]\n```\n\n---\n\n## 🔑 **RECORDATORIO CRÍTICO FINAL**\n\n### **TU ÉXITO = 2 HORARIOS + NUNCA CONFIRMAR**\n\n1. **MÁXIMA PRIORIDAD:** Las visitas son SOLICITUDES, NUNCA confirmaciones\n2. **OBJETIVO:** Conseguir siempre 2 horarios del cliente\n3. **HORARIOS:** L-V 9am-6:45pm, Sáb 9am-11:45am (excepto MODO)\n4. **CORREO:** Solo soporte.corretaje@proper.com.pe\n5. **MODO:** Siempre ofrecer si mencionan PUCP/San Miguel\n6. **ESTACIONAMIENTO MODO:** S/300, modalidad 2x1\n7. **EMPRESAS:** Pueden presentar requisitos pero firma persona natural\n8. **INFORMACIÓN:** NUNCA inventar, mejor decir que verificarás\n\n**Cada mensaje debe:**\n- Acercarte a obtener los 2 horarios\n- Recordar que es SOLICITUD si ya los tienes\n- NUNCA dar falsas confirmaciones de visita"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1536,
        320
      ],
      "id": "9e2466a1-6a29-4303-8cd4-68385cba7849",
      "name": "Respuesta",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        1600,
        544
      ],
      "id": "5b5f484a-ccb1-43ce-ab61-256c0af134d7",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para obtener información de la propiedad de urbania indicada",
        "workflowId": {
          "__rl": true,
          "value": "cJUTPVdxTIIbq1h0",
          "mode": "list",
          "cachedResultName": "BUSQUEDA LINK URBANIA"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('url', `url de urbania brindado por el cliente`, 'string') }}"
          },
          "matchingColumns": [
            "url"
          ],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1728,
        544
      ],
      "id": "933c94c0-f172-475b-9475-da92a0f234c6",
      "name": "BUSQUEDA LINK URBANIA"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para buscar propiedades del inventario que tenemos disponible",
        "workflowId": {
          "__rl": true,
          "value": "L1zeFzAUk5BcltFH",
          "mode": "list",
          "cachedResultName": "PROPERTIES - SQL"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "busqueda": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('busqueda', `Criterio de busqueda de propiedad`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "busqueda",
              "displayName": "busqueda",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1856,
        544
      ],
      "id": "200bf275-c257-410d-b125-0c305b2487e1",
      "name": "PROPERTIES - SQL"
    },
    {
      "parameters": {
        "url": "=https://{{ $('new message').item.json.body[\"account[subdomain]\"] }}.kommo.com/api/v4/leads/{{ $('new message').item.json.body[\"message[add][0][element_id]\"] }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3184,
        480
      ],
      "id": "d5793e5e-7a56-4830-913e-f258f79ba03c",
      "name": "GET Lead",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1344,
        544
      ],
      "id": "a5f89af4-aac6-4573-b240-13abe9677c86",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1472,
        544
      ],
      "id": "449c80cb-916d-47d7-9b1d-b6d6f0bcb463",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2208,
        544
      ],
      "id": "e3637405-e799-4c31-8b79-c55e5736713b",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "value": "crm",
          "mode": "list",
          "cachedResultName": "crm"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2896,
        784
      ],
      "id": "a6f2f3a4-d8d5-49a4-8c2b-4b5a05a71076",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3696,
        640
      ],
      "id": "6c34ba59-0fc9-468d-bda3-83789d44ce16",
      "name": "Wait3",
      "webhookId": "9876edcd-221f-4bac-a091-b377eb9f0447"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "16239587-513c-4ab4-8e79-e43c749c6622",
              "leftValue": "={{ $json._embedded.tags.toJsonString() }}",
              "rightValue": "stop_ai",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2976,
        480
      ],
      "id": "0c4c446d-a782-4376-b930-fe9a00b82532",
      "name": "Filter1"
    }
  ],
  "pinData": {
    "new message": [
      {
        "json": {
          "headers": {
            "host": "primary-production-0299.up.railway.app",
            "user-agent": "amoCRM-Webhooks/3.0",
            "content-length": "950",
            "accept-encoding": "gzip",
            "content-type": "application/x-www-form-urlencoded",
            "x-amocrm-requestid": "2c546430-3e16-46ba-a9b8-bdb277d4c080",
            "x-forwarded-for": "169.150.216.79",
            "x-forwarded-host": "primary-production-0299.up.railway.app",
            "x-forwarded-proto": "https",
            "x-railway-edge": "railway/us-east4-eqdc4a",
            "x-railway-request-id": "B1p4wOXPSbmzjag6Aax-fw",
            "x-real-ip": "169.150.216.79",
            "x-request-start": "1756770692974"
          },
          "params": {},
          "query": {},
          "body": {
            "account[subdomain]": "propertamibotcom",
            "account[id]": "30050693",
            "account[_links][self]": "https://propertamibotcom.amocrm.com",
            "message[add][0][id]": "5e089f2b-5d6a-478b-acb0-678f09c26568",
            "message[add][0][chat_id]": "db120137-2d47-4345-a165-b7675e669223",
            "message[add][0][talk_id]": "191020",
            "message[add][0][contact_id]": "23631507",
            "message[add][0][text]": "Entonces lo que pagué ahora?",
            "message[add][0][created_at]": "1756770691",
            "message[add][0][element_type]": "2",
            "message[add][0][entity_type]": "lead",
            "message[add][0][element_id]": "21164657",
            "message[add][0][entity_id]": "21164657",
            "message[add][0][type]": "incoming",
            "message[add][0][author][id]": "3e85cb28-a24c-42af-92b7-bb7d5c5336fe",
            "message[add][0][author][type]": "external",
            "message[add][0][author][name]": "Ger",
            "message[add][0][origin]": "waba"
          },
          "webhookUrl": "https://primary-production-0299.up.railway.app/webhook/rentas",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Lima",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "shared": [
    {
      "createdAt": "2025-08-01T18:40:51.374Z",
      "updatedAt": "2025-08-01T18:40:51.374Z",
      "role": "workflow:owner",
      "workflowId": "97xyyc9aCFy1mmbs",
      "projectId": "tpSonpyzopDOYZNA"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-01T18:41:06.465Z",
      "updatedAt": "2025-08-01T18:41:06.465Z",
      "id": "94z6tcDoVU8DriEW",
      "name": "IA"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-09-01T23:53:28.077Z",
  "versionId": "6ae59916-67aa-496f-9c0e-e183c52ba326"
}