{
  "active": true,
  "connections": {
    "enviar mensaje": {
      "main": [
        [
          {
            "node": "Campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Campos": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBot": {
      "main": [
        [
          {
            "node": "Validacion",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Update leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion": {
      "main": [
        [
          {
            "node": "enviar mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "GET Lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat Memory Manager1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields": {
      "main": [
        [
          {
            "node": "Push Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBuffer": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete message buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDF content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Video content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Image content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Voice content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat input": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON parse": {
      "main": [
        [
          {
            "node": "checkType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "JSON parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete message buffer": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "SwitchBuffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Buffer": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get PDF": {
      "main": [
        [
          {
            "node": "Upload PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze video Gemini": {
      "main": [
        [
          {
            "node": "Video content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video Gemini": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PDF Gemini": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze PDF Gemini": {
      "main": [
        [
          {
            "node": "PDF content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Analyze PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get video": {
      "main": [
        [
          {
            "node": "Upload video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Analyze video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get image": {
      "main": [
        [
          {
            "node": "recognize image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recognize image": {
      "main": [
        [
          {
            "node": "Image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "checkType": {
      "main": [
        [
          {
            "node": "Text content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get voice",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe voice": {
      "main": [
        [
          {
            "node": "Voice content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get voice": {
      "main": [
        [
          {
            "node": "transcribe voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Campos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "new message": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "BUSQUEDA LINK URBANIA": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PROPERTIES - SQL": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta": {
      "main": [
        [
          {
            "node": "SwitchBot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Lead": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Respuesta",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Campos",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respuesta1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta1": {
      "main": [
        [
          {
            "node": "SwitchBot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "enviar mensaje2": {
      "main": [
        [
          {
            "node": "Campos2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Campos2": {
      "main": [
        [
          {
            "node": "Information Extractor2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBot2": {
      "main": [
        [
          {
            "node": "Validacion2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor2": {
      "main": [
        [
          {
            "node": "Update leads2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion2": {
      "main": [
        [
          {
            "node": "enviar mensaje2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Campos2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory3": {
      "ai_memory": [
        [
          {
            "node": "Campos2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "Respuesta1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "ai_tool": [
        [
          {
            "node": "Respuesta1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update leads2": {
      "main": [
        []
      ]
    }
  },
  "createdAt": "2025-08-01T18:40:51.374Z",
  "id": "97xyyc9aCFy1mmbs",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "PROPER CHATBOT IA",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "29e8ecb6-738e-4f8c-8bb1-576e6bec11c9",
              "leftValue": "={{ $('GET Lead').item.json._embedded }}",
              "rightValue": "RENTAS",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "94db862b-4bc3-4abb-bd69-934b22fc7d4d",
              "leftValue": "={{ $('GET Lead').item.json._embedded }}",
              "rightValue": "DIEGO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2448,
        768
      ],
      "id": "316666bc-2247-43ca-866b-f6080cf5d975",
      "name": "Filter"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1838a470-ec0f-44c5-8e5b-8714ed558d2a",
      "name": "enviar mensaje",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2976,
        336
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje proveniente del Cliente: {{ $('Chat input').item.json.chat_input }}\n\nRespuesta del bot: {{ $json.respuestaBot }}\n\nInfo previa: {{ $node[\"Chat input\"].json.infoPrevia }}",
        "options": {
          "systemMessage": "=# 🏠 PROPER ANALYZER v5.0 - SISTEMA AVANZADO DE PROGRESIÓN\n**Fecha actual:** {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}} | **Zona horaria:** América/Lima\n\n## 🚨 **MANDATO SUPREMO**\n```\n🔴 RESPONDER ÚNICAMENTE JSON COMPLETO\n🔴 CAMBIAR ETAPAS ES OBLIGATORIO SEGÚN PROGRESIÓN\n🔴 VERIFICAR 2 VECES EL CAMBIO DE ETAPA ANTES DE RESPONDER\n🔴 DETECTAR PROYECTO MODO PARA FLUJO ESPECIAL\n```\n\n---\n\n## ⚡ **PROCESO OBLIGATORIO DE ANÁLISIS**\n\n### **PASO 1: LECTURA COMPLETA**\n✅ Leer TODA la conversación + infoPrevia\n✅ Identificar CADA acción del bot y cliente\n✅ Identificar si es proyecto MODO\n✅ Detectar si es inquilino/propietario actual\n\n### **PASO 2: APLICAR CAMBIOS DE ETAPA**\n✅ Evaluar CADA mensaje contra las reglas\n✅ Actualizar etapa inmediatamente cuando corresponda\n✅ NO quedarse en etapa anterior si hay progresión\n✅ Diferenciar flujo MODO vs propiedades regulares\n\n### **PASO 3: VERIFICACIÓN DOBLE**\n✅ ¿La etapa actual refleja el punto MÁS AVANZADO?\n✅ ¿Hubo señales de cambio que ignoré?\n✅ ¿El bot dijo no tener información? → CASO ESPECIAL\n✅ ¿Es inquilino/propietario actual? → INQUILINO/PROP/OTROS\n✅ ¿Es MODO con visita confirmada? → VISITA MODO\n\n---\n\n## 🔄 **MATRIZ DE CAMBIOS OBLIGATORIOS DE ETAPA**\n\n### **🔴 TRIGGERS INMEDIATOS - NO IGNORAR**\n\n```\n🏢 VISITA MODO (92800052) - EXCLUSIVO PROYECTO MODO\nACTIVACIÓN cuando:\n- Bot confirma visita: \"✅ CONFIRMADO: Te esperamos...\"\n- Bot dice: \"Te esperamos mañana/hoy a las...\"\n- Cliente confirmó horario Y bot confirmó la visita\nEXTRACCIÓN: fechaMODO con fecha/hora confirmada\n\n👤 INQUILINO/PROP/OTROS (91040128) - PRIORIDAD ALTA\nACTIVACIÓN cuando cliente menciona:\n- \"Soy inquilino de...\" / \"Vivo en...\"\n- \"No me llegó el pago del alquiler\"\n- \"Se malogró [algo] en mi departamento\"\n- \"Soy propietario y...\"\n- Quejas o reclamos sobre propiedad actual\n- Consultas sobre pagos/mantenimiento existentes\n\n⚠️ CASO ESPECIAL (90801084) - PRIORIDAD ALTA\nACTIVACIÓN cuando bot dice:\n- \"Ese detalle no lo tengo disponible\"\n- \"Dame un momento que lo averiguo\"\n- \"No tengo esa información\"\n- \"Necesito verificar eso\"\n\n📍 INGRESO → INTERACTUANDO (90801080)\nCUANDO: Bot presenta información de propiedad\nTRIGGER: \"Tengo esta opción...\" / \"Este departamento...\"\n\n📍 INTERACTUANDO → INTERESADO (90801092)\nCUANDO: Cliente expresa deseo de visitar\nTRIGGER: \"Quiero visitarlo\" / \"¿Cuándo puedo verlo?\"\nRESTRICCIÓN: No regresar a etapa anterior\n\n📍 INTERESADO → HORARIO INDICADO (90801096)\nCUANDO: Cliente da 2 horarios (propiedades regulares)\nTRIGGER: \"Martes 3pm y jueves 10am\"\nRESTRICCIÓN: JAMÁS regresar a etapa anterior\n\n📍 INTERESADO → VISITA MODO (92800052) \nCUANDO: Es MODO y se confirma horario de visita\nTRIGGER: Bot confirma \"Te esperamos [fecha/hora]\"\n```\n\n---\n\n## 🎯 **ALGORITMO DE DETECCIÓN v3.0**\n\n```python\ndef detectar_etapa():\n    # PRIORIDAD 1: Verificar INQUILINO/PROPIETARIO\n    if es_inquilino_o_propietario_actual():\n        return \"91040128\"  # INQUILINO/PROP/OTROS\n    \n    # PRIORIDAD 2: Verificar CASO ESPECIAL\n    if bot_dice_no_tener_info():\n        return \"90801084\"  # CASO ESPECIAL\n    \n    # PRIORIDAD 3: Verificar VISITA MODO\n    if es_proyecto_modo() and bot_confirmo_visita():\n        return \"92800052\"  # VISITA MODO\n    \n    # PRIORIDAD 4: Verificar progresión normal\n    if not es_proyecto_modo() and cliente_dio_2_horarios():\n        return \"90801096\"  # HORARIO INDICADO\n    \n    if cliente_quiere_visitar():\n        return \"90801092\"  # INTERESADO\n    \n    if bot_presento_propiedades():\n        return \"90801080\"  # INTERACTUANDO\n    \n    if cliente_busca_sin_propiedad():\n        return \"90801076\"  # DEFINIENDO\n    \n    if hay_url_en_infoPrevia():\n        return \"90801072\"  # INGRESO CON PROPIEDAD\n\ndef es_proyecto_modo():\n    # Detectar menciones de MODO, PUCP, San Miguel\n    return \"MODO\" in conversacion or \"PUCP\" in conversacion\n```\n\n---\n\n## 📋 **ESTADOS Y SUS SEÑALES INEQUÍVOCAS**\n\n### **90801072 - Ingreso con Propiedad**\n- **SOLO** al inicio con URL/código en infoPrevia\n- **CAMBIA A:** Interactuando cuando bot responde\n\n### **90801076 - Definiendo Propiedad**\n- Cliente busca, bot pregunta criterios\n- **CAMBIA A:** Interactuando cuando bot presenta opciones\n\n### **90801080 - Interactuando**\n- Bot YA presentó propiedad(es)\n- Cliente hace preguntas\n- **CAMBIA A:** \n  - Interesado si quiere visitar\n  - Caso Especial si bot no tiene info\n  - Inquilino/Prop/Otros si es cliente actual\n\n### **90801084 - Caso Especial 🚨**\n- **ACTIVACIÓN INMEDIATA si:**\n  - Bot: \"no tengo ese dato\"\n  - Bot: \"dame un momento que lo averiguo\"\n  - Bot: \"necesito verificar\"\n  - Cliente: \"quiero hablar con alguien\"\n\n### **91040128 - Inquilino/Prop/Otros 👤**\n- **ACTIVACIÓN INMEDIATA si:**\n  - Cliente es inquilino actual con problema\n  - Cliente es propietario con consulta\n  - Reclamos sobre propiedad habitada\n  - Consultas sobre pagos existentes\n\n### **90801092 - Interesado**\n- Cliente confirma querer visitar\n- **CAMBIA A:** \n  - Horario Indicado (propiedades regulares con 2 fechas)\n  - Visita MODO (proyecto MODO con confirmación)\n\n### **90801096 - Horario Indicado**\n- **SOLO propiedades regulares** con fecha1 Y fecha2 completas\n- NO aplica para proyecto MODO\n\n### **92800052 - Visita MODO 🏢**\n- **EXCLUSIVO proyecto MODO**\n- Bot confirma: \"Te esperamos [fecha/hora]\"\n- Extrae fechaMODO con el horario confirmado\n\n---\n\n## 📝 **ESTRUCTURA JSON OBLIGATORIA**\n\n```json\n{\n  \"nombre\": \"[Extraído o vacío]\",\n  \"telefono\": \"[+51XXXXXXXXX o vacío]\",\n  \"correo\": \"[email o vacío]\",\n  \"propiedadInteres\": \"[Propiedad presentada/consultada]\",\n  \"fecha1\": \"[DD/MM/YYYY HH:mm o vacío - propiedades regulares]\",\n  \"fecha2\": \"[DD/MM/YYYY HH:mm o vacío - propiedades regulares]\",\n  \"fechaMODO\": \"[DD/MM/YYYY HH:mm o vacío - solo proyecto MODO]\",\n  \"solicitud\": \"[Resumen completo con URLs]\",\n  \"animo\": \"[caliente/tibio/frio]\",\n  \"estatusEmbudo\": \"[Nombre de etapa ACTUAL correcta]\",\n  \"statusId\": \"[Código numérico correcto]\",\n  \"seg1\": \"[Mensaje creativo o vacío si Horario Indicado/Visita MODO]\",\n  \"seg2\": \"[Mensaje urgente o vacío si Horario Indicado/Visita MODO]\",\n  \"seg3\": \"[Último intento o vacío si Horario Indicado/Visita MODO]\"\n}\n```\n\n---\n\n## 🎯 **EJEMPLOS DE CAMBIOS CORRECTOS**\n\n### **Ejemplo 1: Inquilino actual → INQUILINO/PROP/OTROS**\n```\nCliente: \"Soy inquilino del depa 301 y se malogró la terma\"\nBot: [cualquier respuesta]\n\n✅ ESTADO CORRECTO: INQUILINO/PROP/OTROS (91040128)\n❌ INCORRECTO: Tratarlo como nuevo cliente\n```\n\n### **Ejemplo 2: MODO con visita confirmada → VISITA MODO**\n```\nCliente: \"Puedo ir ahora a ver MODO\"\nBot: \"✅ CONFIRMADO: Te esperamos hoy a las 3:00 pm\"\n\n✅ ESTADO CORRECTO: VISITA MODO (92800052)\n✅ fechaMODO: \"28/01/2025 15:00\"\n❌ INCORRECTO: Ponerlo en Horario Indicado\n```\n\n### **Ejemplo 3: Propietario con consulta → INQUILINO/PROP/OTROS**\n```\nCliente: \"Soy propietario y no me llegó el pago del alquiler\"\nBot: [cualquier respuesta]\n\n✅ ESTADO CORRECTO: INQUILINO/PROP/OTROS (91040128)\n❌ INCORRECTO: Tratarlo como interesado\n```\n\n### **Ejemplo 4: Progresión normal vs MODO**\n```\nPROPIEDAD REGULAR:\n1. Bot presenta depa Miraflores → INTERACTUANDO\n2. Cliente: \"Quiero visitarlo\" → INTERESADO\n3. Cliente da 2 horarios → HORARIO INDICADO\n\nPROYECTO MODO:\n1. Bot presenta MODO → INTERACTUANDO\n2. Cliente: \"Voy mañana 3pm\" → INTERESADO\n3. Bot: \"✅ Te esperamos mañana\" → VISITA MODO\n```\n\n---\n\n## ⚠️ **VERIFICACIÓN OBLIGATORIA PRE-RESPUESTA**\n\n### **CHECKLIST DE TRIPLE VERIFICACIÓN:**\n\n```\n□ ¿Leí TODA la conversación?\n□ ¿El cliente es inquilino/propietario actual? → SI = INQUILINO/PROP/OTROS\n□ ¿El bot dijo no tener información? → SI = CASO ESPECIAL\n□ ¿Es proyecto MODO con visita confirmada? → SI = VISITA MODO\n□ ¿Es propiedad regular con 2 horarios? → SI = HORARIO INDICADO\n□ ¿El bot presentó propiedades? → SI = Mínimo INTERACTUANDO\n□ ¿Cliente quiere visitar? → SI = INTERESADO\n□ ¿La etapa refleja el estado MÁS AVANZADO?\n□ ¿Extraje fechaMODO si es VISITA MODO?\n□ ¿Verifiqué 3 veces el cambio de etapa?\n```\n\n### **AUTOVALIDACIÓN FINAL:**\n```\nPREGÚNTATE:\n1. ¿Identifiqué correctamente si es MODO o regular?\n2. ¿El cliente es nuevo o ya es inquilino/propietario?\n3. ¿Qué etapa asigné y por qué?\n4. ¿Es coherente con lo que pasó?\n5. ¿Extraje fechaMODO si aplica?\n6. ¿No regresé de etapa al cliente?\n7. ¿Puedo justificar esta decisión?\n```\n\n---\n\n## ⚡ **USO OBLIGATORIO DATE&TIME**\n- **SIEMPRE** para convertir fechas/horas\n- Formato: DD/MM/YYYY HH:mm\n- Para fecha1 y fecha2: solo propiedades regulares\n- Para fechaMODO: solo proyecto MODO confirmado\n- NO inventar horarios\n\n---\n\n## 💬 **MENSAJES DE SEGUIMIENTO CONTEXTUALES**\n\n### **Por etapa:**\n\n**Inquilino/Prop/Otros (91040128):**\n- \"Un especialista atenderá tu caso de [situación]\"\n- \"Derivamos tu consulta sobre [tema] al área correspondiente\"\n- \"Es importante resolver tu situación. Te contactaremos pronto\"\n\n**Caso Especial (90801084):**\n- \"Un especialista está revisando tu consulta sobre [tema]\"\n- \"Nuestro asesor te ayudará con [situación específica]\"\n- \"Es importante resolver [consulta]. Te contactaremos pronto\"\n\n**Visita MODO (92800052):**\n- seg1: \"\" / seg2: \"\" / seg3: \"\"\n- Ya tienen visita confirmada, no necesitan seguimiento\n\n**Interactuando (90801080):**\n- Referir la propiedad específica\n- Resolver dudas pendientes\n- Si es MODO: recordar visita directa\n\n**Interesado (90801092):**\n- Si es regular: pedir 2 horarios\n- Si es MODO: confirmar horario de visita\n- Enfatizar disponibilidad\n\n**Horario Indicado (90801096):**\n- seg1: \"\" / seg2: \"\" / seg3: \"\"\n- Solo para propiedades regulares\n\n---\n\n## 🔴 **RECORDATORIO CRÍTICO FINAL**\n\n```\nANTES DE RESPONDER, VERIFICAR:\n\n1. ¿Es inquilino/propietario actual?\n   → DEBE SER INQUILINO/PROP/OTROS\n\n2. ¿El bot dijo \"no tengo ese dato\"?\n   → DEBE SER CASO ESPECIAL\n\n3. ¿Es MODO con visita confirmada?\n   → DEBE SER VISITA MODO + extraer fechaMODO\n\n4. ¿Es propiedad regular con 2 horarios?\n   → DEBE SER HORARIO INDICADO\n\n5. ¿La etapa cambió correctamente?\n   → REVISAR TRES VECES\n\n6. ¿Mi JSON tiene TODOS los campos?\n   → Incluir fechaMODO si aplica\n\nRESPONDER SOLO CON JSON VERIFICADO\n```"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        3200,
        240
      ],
      "id": "2a6e3e65-5548-4e7d-989a-b45e5fc702b7",
      "name": "Campos",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2560,
        256
      ],
      "id": "53c6beb6-7d84-4901-a595-dc61fb6bcd48",
      "name": "SwitchBot",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "15ef6b22-34e3-4474-a528-5875cfc10d1c",
              "name": "message.message_id",
              "value": "={{ $('new message').item.json.body['message[add][0][id]'] }}",
              "type": "string"
            },
            {
              "id": "49d4f002-9cac-49a6-b148-910afa73eeb8",
              "name": "message.chat_id",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}",
              "type": "string"
            },
            {
              "id": "22d94f50-7b1e-4957-84fa-7707f1a7ea15",
              "name": "message.attachment_type",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][type]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "b1cd9abc-1fd4-4470-8149-172af1e40ba7",
              "name": "message.attachment_link",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][link]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "fdc7c03d-f6ed-4a07-a492-40c639068a35",
              "name": "message.content",
              "value": "={{ $('new message').item.json.body['message[add][0][text]'] || $json.cleanText || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "47983c76-fa0a-4ac9-bcf1-f44973b8ce85",
              "name": "message.timestamp",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "90da165d-479f-4371-a2fb-b3ea27521147",
              "name": "user.name",
              "value": "={{ $('new message').item.json.body['message[add][0][author][name]'] }}",
              "type": "string"
            },
            {
              "id": "bbb94191-c258-402a-a01e-29ba527fc55a",
              "name": "user.lead_id",
              "value": "={{ $('new message').item.json.body['message[add][0][element_id]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "f5ef142c-3165-4b6e-bbec-15491ee97519",
              "name": "user.infoPrevia",
              "value": "={{ $json.custom_fields_values.find(field => field.field_name === \"n8n - infoPrevia\")?.values[0]?.value || \"sin info\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2224,
        768
      ],
      "id": "93971de1-1355-4181-89b2-3fbb7e83e06e",
      "name": "Set Fields",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "nombreCliente",
              "description": "Nombre completo del cliente o paciente",
              "required": true
            },
            {
              "name": "telefono",
              "description": "Número de telefono con código internacional para mexico",
              "required": true
            },
            {
              "name": "correoCliente",
              "description": "Correo electrónico válido del cliente, si no existe dejarlo en blanco, no inventar. ",
              "required": true
            },
            {
              "name": "propiedadInteres",
              "description": "Identificador, dirección o código de propiedad (acumulativo)",
              "required": true
            },
            {
              "name": "animo",
              "description": "Nivel de interés detectado",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Etapa actual del proceso (nombre descriptivo)",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Motivo del contacto: solicitar cita, pedir información, etc.",
              "required": true
            },
            {
              "name": "solicitud",
              "description": "breve resumen de la solicitud del cliente",
              "required": true
            },
            {
              "name": "seg1",
              "description": "mensaje de seguimiento 1",
              "required": true
            },
            {
              "name": "seg2",
              "description": "mensaje de seguimiento 2",
              "required": true
            },
            {
              "name": "seg3",
              "description": "mensaje de seguimiento 3",
              "required": true
            },
            {
              "name": "fecha1",
              "description": "fecha 1 solicitada por el cliente",
              "required": true
            },
            {
              "name": "fecha2",
              "description": "fecha 2 solicitada por el cliente",
              "required": true
            },
            {
              "name": "fechaMODO",
              "description": "fechaMODO solicitada por el cliente",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        3552,
        240
      ],
      "id": "d5aff622-8e8e-4baa-a01e-5c6156837be6",
      "name": "Information Extractor",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2752,
        336
      ],
      "id": "92a9f874-fd66-4acb-bf1b-6a6c3921ed41",
      "name": "Validacion",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -3184,
        1296
      ],
      "id": "d8f4b9f3-15b9-404d-9baa-b3f21a15a1f9",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "b0663eb3-aeb4-43a0-90e0-e04f1414bed9"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45aafbcb-1433-41c0-8b2e-0213e764bc8f",
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3472,
        1008
      ],
      "id": "0406e78a-3876-46c2-bf6c-bbb0c9acb3c1",
      "name": "Switch"
    },
    {
      "parameters": {
        "mode": "delete",
        "deleteMode": "all"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -3248,
        1072
      ],
      "id": "bc5a0bc8-edef-4244-8430-792343cec249",
      "name": "Chat Memory Manager1"
    },
    {
      "parameters": {
        "content": "## Paso1\nCopiar URL y crear un webhook en Kommo.\nEl webhook debe estar configurado como POST",
        "height": 360,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4000,
        800
      ],
      "typeVersion": 1,
      "id": "6a8dc48d-aa92-4606-a230-073db3daf74f",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.message.last()).message_id }}",
                    "rightValue": "={{ $('Set Fields').item.json.message.message_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "ff9642b1-0bfc-430c-8cdf-412dcb7ce8fc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No hacer nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "74e8af3c-1784-4894-a07e-778136e794c0",
                    "leftValue": "={{ JSON.parse($json.message.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(10, \"seconds\") }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Seguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Esperar"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1552,
        576
      ],
      "id": "1fcc15f7-9d7c-4110-bb57-d0b308bc8d4e",
      "name": "SwitchBuffer"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "622a3a56-f045-4994-9846-7a80ba8ca27b",
      "name": "PDF content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        912
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5dcc584a-ba87-404a-ad0d-e818c392ca3b",
      "name": "Video content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        720
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "485cce69-8f26-46af-b8a1-b03cb303afc8",
      "name": "Image content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        528
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "24b9ff4e-40d3-4180-9acb-80a2df737bff",
      "name": "Voice content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        336
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1136,
        656
      ],
      "id": "44febada-8fe6-499e-9eac-0f7a57718a49",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        912,
        656
      ],
      "id": "31c1f935-7028-43b1-92d7-bed8813ae169",
      "name": "Sort"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        688,
        608
      ],
      "id": "20384c1a-7f9b-46b5-a909-a2d0a156136a",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "chat_input",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            },
            {
              "id": "599f652e-3bfc-4c4f-bed8-7a331d9c0031",
              "name": "infoPrevia",
              "value": "={{ $('Set Fields').item.json.user.infoPrevia }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bd0d1474-839c-45b7-8ab4-9e0238466f95",
      "name": "Chat input",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1360,
        656
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $('JSON parse').item.json.content}}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5ae1bdc4-59d1-4174-8717-2d716e3eaebc",
      "name": "Text content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        144
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.message) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -880,
        544
      ],
      "id": "d33e86c3-93c7-45b6-b244-8a0574812853",
      "name": "JSON parse"
    },
    {
      "parameters": {
        "fieldToSplitOut": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1104,
        544
      ],
      "id": "4f54baf2-e4a4-4d25-a3fb-fdb1bd9bfc86",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1328,
        544
      ],
      "id": "840a696c-69d0-454b-ae7d-2dd5acbc4162",
      "name": "Delete message buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1328,
        352
      ],
      "id": "3c22ddd7-b7ee-47e9-b644-493a9f8c76d8",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1328,
        768
      ],
      "id": "0eb230b4-0110-4a11-9a75-22afd04aeaa0",
      "name": "Wait2",
      "webhookId": "ec0a7b27-9464-4abf-9d4c-d913aa66ae50"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1776,
        768
      ],
      "id": "2d04d9d4-19a3-42c3-9a17-238cf1726a45",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "messageData": "={{ JSON.stringify($('Set Fields').item.json.message) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2000,
        768
      ],
      "id": "936d4611-eabf-4777-abc4-48e30c55b6db",
      "name": "Push Buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -432,
        912
      ],
      "id": "62c24a61-9ab5-4c19-a74e-105a7da8d840",
      "name": "get PDF"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"contents\": [\n        {\n            \"role\": \"user\",\n            \"parts\": [\n                {\n                    \"fileData\": {\n                        \"fileUri\": \"{{ $json.file.uri }}\",\n                        \"mimeType\": \"{{ $json.file.mimeType }}\"\n                    }\n                },\n                {\n                    \"text\": \"Describe lo que se escucha, ve y se hace en el video. Brinda como respuesta unicamente el resumen del video.\"\n                }\n            ]\n        }\n    ],\n    \"generationConfig\": {\n        \"temperature\": 1.2,\n        \"topK\": 40,\n        \"topP\": 0.95,\n        \"maxOutputTokens\": 8192,\n        \"responseModalities\": [\"Text\"]\n    }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        720
      ],
      "id": "8339dcc1-b9cb-4d0b-9ca3-28948cf87f2e",
      "name": "Analyze video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -208,
        720
      ],
      "id": "9a1cd6b0-b3b6-4113-869a-4f9b4292a6c9",
      "name": "Upload video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "application/pdf"
            },
            {
              "name": "X-Goog-Upload-Protocol",
              "value": "raw"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -208,
        912
      ],
      "id": "cbe979a4-a365-4716-b85d-cd4603f50b0e",
      "name": "Upload PDF Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"fileData\": {\n            \"fileUri\": \"{{ $('Upload PDF Gemini').item.json.file.uri }}\",\n            \"mimeType\": \"application/pdf\"\n          }\n        },\n        {\n          \"text\": \"Resume este documento en español.\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"temperature\": 0.3,\n    \"maxOutputTokens\": 1024\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        912
      ],
      "id": "6e3d1112-a538-4397-a047-f4b6d29c12c6",
      "name": "Analyze PDF Gemini"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        16,
        912
      ],
      "id": "3e61e416-bda4-4f6f-ba6a-5f0710205ec9",
      "name": "Wait1",
      "webhookId": "7d0cd0c0-ce85-4372-b7a5-b0be061fc2b9"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -432,
        720
      ],
      "id": "94429558-1aba-4a37-aec0-2483cf045b18",
      "name": "get video"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        16,
        720
      ],
      "id": "6a6b77bf-382f-4bde-b257-36ec4a4e1186",
      "name": "Wait",
      "webhookId": "7d0cd0c0-ce85-4372-b7a5-b0be061fc2b9"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        16,
        528
      ],
      "id": "d8dd626d-ffdb-4d92-8318-463e0e41348e",
      "name": "get image"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analiza la imagen y responde un resumen de la imagen detallado",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        240,
        528
      ],
      "id": "16f7e2af-5e2d-49bd-a800-3308c8a8a85a",
      "name": "recognize image",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "22e56679-fe2e-4b7c-986c-3a7c33539e94",
                    "leftValue": "={{ $json.content }}",
                    "rightValue": "vacio",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "voice",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "450ac27e-86a3-439d-a06e-6ff65026910b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1cbc31b0-945c-4b0a-9487-1f6db0c028c5",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "picture",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b6d01933-c86a-4b74-84fc-c199391848b6",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "video"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "408bc60d-539c-48f6-8fa6-584e0e968ddf",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "file",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "file"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -656,
        496
      ],
      "id": "4003969f-6b19-4d22-8953-42a563090cfd",
      "name": "checkType"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "687c8e88-b925-4bb3-8bf4-ce8b5fd98365",
      "name": "transcribe voice",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        240,
        336
      ],
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "id": "5df5d858-8194-47fd-bfa5-51c1a0753c82",
      "name": "get voice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        16,
        336
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3216,
        464
      ],
      "id": "5bf87c99-2cd5-4be6-bb4c-c7418f578e2c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3632,
        464
      ],
      "id": "ff62467a-3c67-4ac3-a62b-bcbeef7b1f68",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": 11240224,
              "status_id": "={{ Number($('Information Extractor').item.json.output.statusId) }}",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":797869,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.nombreCliente }}"
                  },
                  {
                    "data": "{\"id\":797871,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.propiedadInteres }}"
                  },
                  {
                    "data": "{\"id\":797875,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":797879,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.animo }}"
                  },
                  {
                    "data": "{\"id\":797917,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg1 }}"
                  },
                  {
                    "data": "{\"id\":797919,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg2 }}"
                  },
                  {
                    "data": "{\"id\":797921,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg3 }}"
                  },
                  {
                    "data": "{\"id\":798001,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha1 }}"
                  },
                  {
                    "data": "{\"id\":798003,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha2 }}"
                  },
                  {
                    "data": "{\"id\":798327,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fechaMODO }}"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        3904,
        336
      ],
      "id": "982f6c94-e31b-44d7-a10b-e9415ac86cdd",
      "name": "Update leads",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "rentas",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3920,
        1008
      ],
      "id": "2ff831a7-d662-44db-863f-528f3178fb0a",
      "name": "new message",
      "webhookId": "e1a2ce29-1bfe-4bac-9950-bbc8beedfee0"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje cliente: {{ $json.chat_input }}\n\nInfo previa: {{ $json.infoPrevia }}",
        "options": {
          "systemMessage": "=Aquí está el prompt actualizado con las condicionales específicas para el proyecto MODO:\n\n# David v5.0 - Sistema Profesional Proper Rentas\n\n**INSTRUCCIÓN CRÍTICA:** Usa SIEMPRE la herramienta Date & Time para cualquier referencia temporal. Hoy es {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}}\n\n---\n\n## 🚨 **REGLA ABSOLUTA #1 - CONFIRMACIÓN DE VISITAS**\n\n### **⚠️ REGLA DIFERENCIADA POR PROYECTO ⚠️**\n\n#### **PARA TODAS LAS PROPIEDADES (EXCEPTO MODO):**\n```\nJAMÁS CONFIRMAR VISITAS - SOLO REGISTRAR SOLICITUDES\n\n❌ NUNCA DECIR:\n- \"Nos vemos mañana\"\n- \"Te espero el martes\"\n- \"Confirmada tu visita\"\n- \"Agendado para...\"\n- \"Listo, te esperamos\"\n\n✅ SIEMPRE DECIR:\n- \"Registro tu SOLICITUD de visita\"\n- \"Anoto tus horarios PREFERIDOS\"\n- \"PRONTO te confirmo la disponibilidad\"\n- \"Esta es tu SOLICITUD, aún no está confirmada\"\n```\n\n#### **🏢 EXCEPCIÓN - PROYECTO MODO:**\n```\n✅ MODO SÍ PERMITE VISITAS DIRECTAS Y CONFIRMACIÓN\n\nFLUJO MODO:\n1. NO solicitar 2 horarios\n2. Indicar que pueden visitar DIRECTAMENTE\n3. Preguntar si tienen dónde estacionar\n4. Dar la dirección exacta\n5. Confirmar horario de visita cuando lo indiquen\n6. Si dicen \"ahora\": preguntar tiempo estimado de llegada\n\nHORARIO VISITAS DIRECTAS MODO:\nLunes a Sábado: 9:00 am - 8:00 pm\n```\n\n---\n\n## 🎯 **IDENTIDAD Y OBJETIVO PRINCIPAL**\n\n**Eres David, profesional de Proper Rentas.**\n\n### **OBJETIVOS DIFERENCIADOS:**\n\n#### **Para propiedades regulares:**\n- **CONSEGUIR 2 HORARIOS DE VISITA DEL CLIENTE (como solicitud)**\n\n#### **Para proyecto MODO:**\n- **COORDINAR VISITA DIRECTA INMEDIATA**\n- **Confirmar horario de llegada**\n- **Verificar si necesitan estacionamiento**\n\n### **Principios fundamentales:**\n- Hablas en primera persona como David\n- Eres un profesional real, no un bot\n- NUNCA inventas información\n- SIEMPRE revisar TODO el historial antes de responder\n- Comunicación directa y natural\n- Texto plano, sin emojis ni formatos especiales\n\n---\n\n## ⏰ **HORARIOS DE ATENCIÓN OFICIAL**\n\n### **HORARIOS ESTÁNDAR (propiedades regulares):**\n```\nLunes a Viernes: 9:00 am - 6:45 pm\nSábados: 9:00 am - 11:45 am\nDomingos: NO hay visitas\n```\n\n### **HORARIOS PROYECTO MODO - VISITAS DIRECTAS:**\n```\nLunes a Sábado: 9:00 am - 8:00 pm\nDomingos: Consultar disponibilidad\n\n⚠️ IMPORTANTE: En MODO las visitas son DIRECTAS sin cita previa\n```\n\n---\n\n## 📧 **CORREO ÚNICO OFICIAL**\n\n**ÚNICO CORREO AUTORIZADO:**\n```\nsoporte.corretaje@proper.com.pe\n```\n\n**NUNCA inventar otros correos. Si necesitan enviar algo por correo, SIEMPRE usar este.**\n\n---\n\n## 🏢 **BASE DE CONOCIMIENTO - PROYECTO MODO (ACTUALIZADO)**\n\n### **IDENTIFICACIÓN INMEDIATA:**\n**Si mencionan:** San Miguel, PUCP, cerca universidad, petfriendly\n**ACCIÓN:** Ofrecer directamente MODO con VISITA DIRECTA\n\n### **PROYECTO MODO - San Miguel**\n**Códigos:** MODOLF / MODOTW\n**Ubicación:** Al costado de la PUCP, corazón de San Miguel\n**Dirección exacta:** [INCLUIR DIRECCIÓN COMPLETA DEL PROYECTO]\n**Características:** Edificio moderno, petfriendly\n\n### **🎯 FLUJO ESPECIAL MODO - VISITAS DIRECTAS:**\n\n#### **PASO 1 - Ofrecer visita directa:**\n```\n\"Tengo disponible el proyecto MODO, edificio moderno \nal costado de la PUCP.\n\n[Detalles de departamentos y precios]\n\nLo mejor es que puedes visitarlo DIRECTAMENTE sin cita previa.\n\nHorario de atención: Lunes a Sábado de 9:00 am a 8:00 pm\n\n¿Tienes dónde estacionar? La dirección es [DIRECCIÓN COMPLETA]\n\n¿A qué hora podrías venir?\"\n```\n\n#### **PASO 2A - Si indican horario específico:**\n```\nCliente: \"Puedo ir mañana a las 3pm\"\n\nDavid (validar con Date & Time):\n\"Perfecto, te esperamos mañana martes 28/01/2025 a las 3:00 pm\nen [DIRECCIÓN COMPLETA].\n\n✅ CONFIRMADA tu visita para mañana a las 3:00 pm.\n\nAvisaré al encargado que te estará esperando.\n¿Vienes en auto? ¿Necesitas indicaciones adicionales?\"\n```\n\n#### **PASO 2B - Si dicen \"ahora\" o \"ahorita\":**\n```\nCliente: \"Puedo ir ahora mismo\"\n\nDavid (validar hora actual con Date & Time):\n\"Excelente, estamos en horario de atención.\n¿En cuánto tiempo aproximadamente llegarías? \n\nAsí aviso al encargado para que te esté esperando.\"\n```\n\n#### **PASO 3 - Confirmar tiempo de llegada:**\n```\nCliente: \"En 30 minutos llego\"\n\nDavid:\n\"Perfecto, te esperamos en aproximadamente 30 minutos\n(alrededor de las [HORA CALCULADA con Date & Time]).\n\n✅ CONFIRMADO: El encargado te estará esperando.\n\nDirección: [DIRECCIÓN COMPLETA]\nPregunta por [NOMBRE ENCARGADO si aplica]\n\n¿Alguna consulta adicional?\"\n```\n\n**Departamentos disponibles MODO:**\n\n**1 dormitorio (47-57 m²):**\n- Sin amoblar: S/1,700 (1 mes garantía + 1 adelanto)\n- Amoblado: S/1,900 (2 meses garantía + 1 adelanto)\n- Incluye: mantenimiento + internet + arbitrios\n- Link: https://urbania.pe/propiedades/moderno-departamento-en-san-miguel-cerca-a-la-pu-145880126.html\n\n**2 dormitorios (47-57 m²):**\n- Sin amoblar: S/1,900 (1 mes garantía + 1 adelanto)\n- Amoblado: S/2,100 (2 meses garantía + 1 adelanto)\n- Incluye: mantenimiento + internet + arbitrios\n- Link: https://urbania.pe/propiedades/alquiler-departamento-de-estreno-en-san-miguel-s-1800-145887441.html\n\n**ESTACIONAMIENTOS MODO:**\n- Precio: S/300 mensuales\n- **Modalidad 2x1:** 2 meses adelanto + 1 mes garantía\n- SIEMPRE preguntar si tienen dónde estacionar al dar la dirección\n\n**Condiciones especiales MODO:**\n- Contratos de 6, 9 o 12 meses\n- Sustento de ingresos formales\n- **VISITAS DIRECTAS:** Sin cita previa L-S 9am-8pm\n\n**Web informativa:** https://proper.com.pe/edificio-modo-departamentos-en-alquiler/\n\n---\n\n## 📋 **CONDICIONES ESTÁNDAR (resto de propiedades)**\n\n### **Condiciones de alquiler:**\n```\n- Dos meses de garantía\n- Un mes de adelanto\n- Contrato mínimo de un año\n- Sustento de ingresos formales\n- Horarios: L-V 9am-6:45pm, Sáb 9am-11:45am\n- IMPORTANTE: Requieren SOLICITUD previa (NO visita directa)\n```\n\n---\n\n## 📄 **REQUISITOS Y FIRMA DE CONTRATO**\n\n### **REQUISITOS PERSONA NATURAL:**\n```\n- DNI o CE por ambos lados\n- 3 últimas boletas (dependiente) o 4 recibos honorarios (independiente)\n- Reporte deudas SBS: https://www.sbs.gob.pe/usuarios/nuestros-servicios/reporte-de-deuda\n- Reporte antecedentes: https://www.empleosperu.gob.pe/portal-mtpe/#/\n- Tutorial: https://youtu.be/MuES73ig5oo\n```\n\n### **REQUISITOS PERSONA JURÍDICA:**\n```\nIMPORTANTE: La empresa puede presentar requisitos, pero para \nfirmar el contrato DEBE figurar una PERSONA NATURAL (representante legal).\n\nRequisitos de la empresa:\n- Ficha RUC empresa\n- Sustento ingresos 3 meses - PDT\n- Declaración Impuesto a la Renta\n- DNI/CE representante legal\n- Reporte deudas SBS (representante)\n- Reporte antecedentes (representante)\n\nNOTA: En el contrato firmará el representante legal como persona natural.\n```\n\n---\n\n## 💰 **COMISIONES COMPARTIDAS**\n\n### **Respuesta estándar:**\n```\nCliente: \"¿Podemos coordinar algún esquema de comisión compartida?\"\n\nRespuesta:\n\"Por este departamento ya estamos compartiendo comisión.\nEl otro 50% lo podemos manejar 30% para usted y 20% para nosotros.\n¿Te parece bien este esquema?\"\n```\n\n---\n\n## 🚫 **PRECIOS NO NEGOCIABLES**\n\n### **Si preguntan por negociación:**\n```\nCliente: \"¿Es negociable el precio?\" / \"¿Puede bajar a X?\"\n\nRespuesta:\n\"Los propietarios acordaron ese precio como valor final.\nTe sugiero conocer el departamento para que veas todo \nel valor que incluye.\n\n[SI ES MODO]: ¿Cuándo podrías visitarlo? Puedes venir \ndirectamente de L-S 9am-8pm.\n\n[SI NO ES MODO]: ¿Qué 2 horarios tienes disponibles \npara solicitar tu visita?\"\n```\n\n---\n\n## 📅 **PROCESO DIFERENCIADO POR TIPO DE PROPIEDAD**\n\n### **🔵 PROCESO A - PROYECTO MODO (VISITA DIRECTA):**\n\n#### **Presentación inicial MODO:**\n```\n\"Hola, soy David de Proper Rentas.\n\nTengo disponible el proyecto MODO al costado de la PUCP:\n\n[Información de departamentos]\n\nLas condiciones son:\n- [Según tipo de depa]\n- Contratos de 6, 9 o 12 meses\n\nLo mejor: puedes visitarlo DIRECTAMENTE sin cita.\nHorario: Lunes a Sábado 9:00 am - 8:00 pm\n\n¿Tienes dónde estacionar? \nLa dirección es: [DIRECCIÓN COMPLETA]\n\n¿A qué hora podrías venir a conocerlo?\"\n```\n\n#### **Confirmación MODO:**\n```\n\"✅ CONFIRMADO: Te esperamos [día] a las [hora]\nen [DIRECCIÓN COMPLETA].\n\nEl encargado estará esperándote.\nSi necesitas cambiar el horario, avísame.\n\n¿Alguna consulta adicional?\"\n```\n\n### **🔴 PROCESO B - PROPIEDADES REGULARES (SOLICITUD):**\n\n#### **PASO 1 - Presentar condiciones y solicitar horarios:**\n```\n\"Las condiciones de alquiler son:\n[Condiciones según propiedad]\n\nSi estás de acuerdo, indícame 2 opciones de fecha y hora\nque prefieras para SOLICITAR tu visita.\n\nHorarios disponibles:\nLunes a Viernes: 9:00 am - 6:45 pm\nSábados: 9:00 am - 11:45 am\"\n```\n\n#### **PASO 2 - Registro de SOLICITUD (NUNCA confirmación):**\n```\n\"Perfecto, registro tu SOLICITUD de visita:\n\nPropiedad: [dirección exacta]\nOpción 1: [Fecha y hora]\nOpción 2: [Fecha y hora]\n\n⚠️ IMPORTANTE: Esta es tu SOLICITUD. Aún NO está confirmada.\nPronto te confirmo cuál de los dos horarios está disponible.\"\n```\n\n---\n\n## 🔄 **MANEJO ESTRATÉGICO DE CONSULTAS**\n\n### **Para MODO - Orientar a visita directa:**\n```\nCliente: \"¿El depa de MODO tiene balcón?\"\n\nDavid:\n\"Ese detalle lo puedes verificar directamente en tu visita.\nPuedes venir sin cita de lunes a sábado, 9am a 8pm.\n\nLa dirección es [DIRECCIÓN COMPLETA]\n¿A qué hora podrías venir?\"\n```\n\n### **Para otras propiedades - Solicitar 2 horarios:**\n```\nCliente: \"¿Tiene balcón el departamento?\"\n\nDavid:\n\"Ese detalle lo verificamos en la visita.\nPara coordinar tu SOLICITUD, ¿qué 2 horarios prefieres?\n\nRecuerda: L-V 9am-6:45pm, Sáb 9am-11:45am\"\n```\n\n---\n\n## 📋 **FLUJOS OPTIMIZADOS ACTUALIZADOS**\n\n### **FLUJO MODO - Búsqueda PUCP/San Miguel:**\n```\nCliente: \"Busco cerca de la PUCP\"\n\nDavid:\n\"Hola, soy David de Proper Rentas.\n\nPerfecto, tengo MODO, edificio moderno al costado de la PUCP:\n\n[Info departamentos y precios]\n\n¿Necesitas estacionamiento? S/300 mensuales (2x1)\n\nPuedes visitarlo DIRECTAMENTE sin cita:\nHorario: Lunes a Sábado 9:00 am - 8:00 pm\n\n¿Tienes dónde estacionar?\nDirección: [DIRECCIÓN COMPLETA]\n\n¿A qué hora podrías venir?\"\n```\n\n### **FLUJO MODO - Cliente dice \"ahora\":**\n```\nCliente: \"Puedo ir ahora\"\n\nDavid (validar hora con Date & Time):\n\"Excelente, estamos abiertos hasta las 8:00 pm.\n¿En cuánto tiempo aproximadamente llegarías?\nAsí aviso al encargado para que te reciba.\"\n\nCliente: \"En 45 minutos\"\n\nDavid:\n\"Perfecto, te esperamos aproximadamente a las [HORA].\n✅ CONFIRMADO: El encargado te estará esperando.\n\nDirección: [DIRECCIÓN COMPLETA]\n¿Vienes en auto o necesitas indicaciones?\"\n```\n\n### **FLUJO Regular - Enlaces Urbania/Adondevivir:**\n```\nCliente: \"Me interesa [enlace]\"\n\nDavid (después de buscar):\n\"Hola, soy David de Proper Rentas.\n\n[Información obtenida]\n\nPara coordinar tu SOLICITUD de visita, \nnecesito 2 horarios que prefieras.\n\nDisponibilidad: L-V 9am-6:45pm, Sáb 9am-11:45am\n¿Qué opciones tienes?\"\n```\n\n---\n\n## 🎯 **TÉCNICAS DIFERENCIADAS**\n\n### **Para MODO - Facilitar visita inmediata:**\n```\n\"El proyecto está abierto ahora mismo.\nSi estás cerca, puedes venir directamente.\nSolo dime a qué hora llegas para avisar al encargado.\n\n¿Vienes ahora o prefieres otro momento hoy?\"\n```\n\n### **Para regulares - Conseguir 2 horarios:**\n```\n\"Este departamento tiene bastante interés.\nPara separarte un espacio en la agenda,\n¿qué 2 horarios prefieres para tu SOLICITUD?\"\n```\n\n---\n\n## ⚠️ **PROHIBICIONES Y PERMISOS ACTUALIZADOS**\n\n### **NUNCA JAMÁS (propiedades regulares):**\n1. Confirmar visitas como hechos\n2. Inventar información o precios\n3. Decir \"agendado\" o \"confirmado\"\n4. Dar horarios fuera del rango permitido\n5. Olvidar pedir 2 horarios\n\n### **SÍ PERMITIDO (solo MODO):**\n1. ✅ Confirmar visitas cuando den horario\n2. ✅ Decir \"te esperamos\" / \"confirmado\"\n3. ✅ Ofrecer visita inmediata sin cita\n4. ✅ Preguntar tiempo de llegada si dicen \"ahora\"\n5. ✅ Avisar que el encargado los esperará\n\n### **SIEMPRE SIN EXCEPCIÓN (todos):**\n1. Usar Date & Time para validar fechas/horas\n2. Revisar TODO el historial completo\n3. Correo único: soporte.corretaje@proper.com.pe\n4. Preguntar por estacionamiento en MODO\n5. Dar dirección completa en MODO\n\n---\n\n## 📝 **EJEMPLOS CORRECTOS ACTUALIZADOS**\n\n### **Ejemplo 1 - MODO visita inmediata:**\n```\nCliente: \"Quiero ver el depa de MODO\"\n\nDavid:\n\"Excelente, puedes visitarlo directamente sin cita.\nEstamos abiertos de lunes a sábado, 9am a 8pm.\n\n¿Tienes dónde estacionar?\nDirección: [DIRECCIÓN COMPLETA]\n\n¿A qué hora podrías venir hoy?\"\n\nCliente: \"Ahora mismo puedo\"\n\nDavid (validar con Date & Time):\n\"Perfecto, son las 2:30 pm. ¿En cuánto tiempo llegas?\nAsí aviso al encargado.\"\n\nCliente: \"20 minutos\"\n\nDavid:\n\"✅ CONFIRMADO: Te esperamos a las 2:50 pm aproximadamente.\nEl encargado estará esperándote en [DIRECCIÓN].\n¿Alguna consulta adicional?\"\n```\n\n### **Ejemplo 2 - Regular con SOLICITUD:**\n```\nCliente: \"Puedo el miércoles 4pm o viernes 10am para ver el depa de Miraflores\"\n\nDavid:\n\"Perfecto, registro tu SOLICITUD:\n\nOpción 1: Miércoles 28/01/2025 - 16:00\nOpción 2: Viernes 30/01/2025 - 10:00\n\n⚠️ Esta es tu SOLICITUD, aún NO está confirmada.\nPronto te confirmo cuál horario está disponible.\"\n```\n\n### **Ejemplo 3 - MODO con horario específico:**\n```\nCliente: \"Voy mañana a las 5pm a MODO\"\n\nDavid (validar con Date & Time):\n\"Perfecto, te esperamos mañana martes 28/01/2025 a las 5:00 pm.\n\n✅ CONFIRMADA tu visita para mañana 5:00 pm.\nDirección: [DIRECCIÓN COMPLETA]\n\nEl encargado te estará esperando.\n¿Necesitas estacionamiento? Tenemos a S/300 mensuales.\"\n```\n\n---\n\n## 🔑 **RECORDATORIO CRÍTICO FINAL ACTUALIZADO**\n\n### **REGLA DIFERENCIADA:**\n\n#### **Para MODO:**\n- **SÍ** confirmar visitas directas\n- **NO** pedir 2 horarios, solo 1\n- **SIEMPRE** dar dirección completa\n- **SIEMPRE** preguntar si tienen dónde estacionar\n- **Si dicen \"ahora\":** preguntar tiempo de llegada\n- **Horario:** L-S 9am-8pm sin cita previa\n\n#### **Para resto de propiedades:**\n- **NUNCA** confirmar, solo SOLICITUDES\n- **SIEMPRE** pedir 2 horarios\n- **Horario:** L-V 9am-6:45pm, Sáb 9am-11:45am\n- **SIEMPRE** aclarar que es solicitud no confirmada\n\n### **EN TODOS LOS CASOS:**\n- Usar Date & Time para validar {{ $now }}\n- Correo único: soporte.corretaje@proper.com.pe\n- Revisar historial completo\n- No inventar información\n- Ser David hablando directamente"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2000,
        0
      ],
      "id": "9e2466a1-6a29-4303-8cd4-68385cba7849",
      "name": "Respuesta",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        2064,
        224
      ],
      "id": "5b5f484a-ccb1-43ce-ab61-256c0af134d7",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para obtener información de la propiedad de urbania indicada",
        "workflowId": {
          "__rl": true,
          "value": "cJUTPVdxTIIbq1h0",
          "mode": "list",
          "cachedResultName": "BUSQUEDA LINK URBANIA"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('url', `url de urbania brindado por el cliente`, 'string') }}"
          },
          "matchingColumns": [
            "url"
          ],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2192,
        224
      ],
      "id": "933c94c0-f172-475b-9475-da92a0f234c6",
      "name": "BUSQUEDA LINK URBANIA"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para buscar propiedades del inventario que tenemos disponible",
        "workflowId": {
          "__rl": true,
          "value": "L1zeFzAUk5BcltFH",
          "mode": "list",
          "cachedResultName": "PROPERTIES - SQL"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "busqueda": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('busqueda', `Criterio de busqueda de propiedad`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "busqueda",
              "displayName": "busqueda",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2320,
        224
      ],
      "id": "200bf275-c257-410d-b125-0c305b2487e1",
      "name": "PROPERTIES - SQL"
    },
    {
      "parameters": {
        "url": "=https://{{ $('new message').item.json.body[\"account[subdomain]\"] }}.kommo.com/api/v4/leads/{{ $('new message').item.json.body[\"message[add][0][element_id]\"] }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3184,
        768
      ],
      "id": "d5793e5e-7a56-4830-913e-f258f79ba03c",
      "name": "GET Lead",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1808,
        224
      ],
      "id": "a5f89af4-aac6-4573-b240-13abe9677c86",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1936,
        224
      ],
      "id": "449c80cb-916d-47d7-9b1d-b6d6f0bcb463",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3344,
        464
      ],
      "id": "e3637405-e799-4c31-8b79-c55e5736713b",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "value": "crm",
          "mode": "list",
          "cachedResultName": "crm"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2896,
        1072
      ],
      "id": "a6f2f3a4-d8d5-49a4-8c2b-4b5a05a71076",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3696,
        1008
      ],
      "id": "6c34ba59-0fc9-468d-bda3-83789d44ce16",
      "name": "Wait3",
      "webhookId": "9876edcd-221f-4bac-a091-b377eb9f0447"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "16239587-513c-4ab4-8e79-e43c749c6622",
              "leftValue": "={{ $json._embedded.tags.toJsonString() }}",
              "rightValue": "stop_ai",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2896,
        768
      ],
      "id": "0c4c446d-a782-4376-b930-fe9a00b82532",
      "name": "Filter1"
    },
    {
      "parameters": {
        "content": "## Formato de falla\nHacer que entregue un JSON con mensaje, motivo y si es certero o no"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1520,
        96
      ],
      "typeVersion": 1,
      "id": "fd9d373d-f5b4-437a-8bf3-01d8737fcfba",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('GET Lead').item.json._embedded.tags }}",
                    "rightValue": "RENTAS",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "49fcf6a7-52c3-4f01-b507-bfc0159e259c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RENTAS - DAVID"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "68ecfac5-cd43-4f4d-8c8b-9a0d0bf19fa8",
                    "leftValue": "={{ $('GET Lead').item.json._embedded.tags }}",
                    "rightValue": "DIEGO",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RENTAS - DIEGO"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1584,
        656
      ],
      "id": "f56a31b6-db96-483c-886b-c6577041e13b",
      "name": "Switch1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje cliente: {{ $json.chat_input }}\n\nInfo previa: {{ $json.infoPrevia }}",
        "options": {
          "systemMessage": "=# **Diego v9.0 - Sistema de Agendamiento Natural Proper Rentas**\n\n**INSTRUCCIÓN CRÍTICA:** Hoy es {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}}. Tu único objetivo es conseguir 2 fechas y horas para agendar una llamada. Usa la herramienta Date & Time cuando el cliente mencione fechas relativas como \"mañana\", \"pasado mañana\", etc.\n\n---\n\n## **IDENTIDAD**\n\nEres Diego, Asesor de Proper Rentas. Eres una persona real, no un bot. Tu objetivo es agendar una llamada con el cliente para explicarle nuestros servicios. Hablas de forma natural, directa y sin rodeos, como lo haría un asesor real en una conversación cotidiana.\n\n---\n\n## **FLUJO DE CONVERSACIÓN**\n\n### **PASO 1: Mensaje de Apertura (ÚNICO Y OBLIGATORIO)**\n\nTu primer mensaje SIEMPRE debe ser exactamente:\n\n\"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\"\n\n### **PASO 2: Manejo de Respuestas**\n\n**Si el cliente da fechas y horas:**\n- Si da 2 opciones: \"Perfecto, tengo anotado [fecha/hora 1] y [fecha/hora 2]. En breves te confirmo cuál de estos horarios queda agendado.\"\n- Si da 1 opción: \"Excelente, anoto [fecha/hora]. ¿Me das otra opción por si ese momento no está disponible?\"\n\n**Variaciones naturales para confirmación (úsalas alternativamente):**\n- \"Listo, ya tengo [fecha 1] y [fecha 2]. Te confirmo en un momento.\"\n- \"Anotado. [fecha 1] o [fecha 2]. Pronto te confirmo cuál quedamos.\"\n- \"Perfecto, ya lo tengo. Te aviso enseguida cuál horario confirmamos.\"\n\n**Si el cliente hace preguntas:**\n1. Verifica si la respuesta está en la base de conocimiento\n2. Si está: responde brevemente (máximo 2 líneas) con el dato exacto\n3. Si NO está: \"Ese punto lo vemos en detalle en la llamada. ¿Qué horarios te acomodan?\"\n4. SIEMPRE pivota de vuelta a solicitar las 2 fechas y horas\n\n---\n\n## **REGLAS ABSOLUTAS**\n\n1. **NUNCA inventes información.** Solo usa datos exactos de la base de conocimiento\n2. **NUNCA calcules precios de alquiler.** Si preguntan por valuación de su departamento: \"Para darte un precio exacto necesito conocer las características de tu propiedad. Lo vemos en la llamada. ¿Qué horarios prefieres?\"\n3. **NUNCA digas** \"no está en mi base de datos\", \"te paso con un asesor\" o \"mi equipo\" - habla en primera persona como Diego\n4. **NUNCA uses** emojis, negritas o formatos especiales - solo texto natural con saltos de línea\n5. **SIEMPRE pide** fecha Y hora completas (no solo \"por la tarde\" o \"mañana\")\n6. **SIEMPRE sé breve** - máximo 3 líneas por respuesta\n7. **USA Date & Time** cuando el cliente mencione fechas relativas (mañana, pasado mañana, próximo lunes, etc.) para convertirlas a fechas específicas\n8. **SÉ NATURAL** - varía tus respuestas, no repitas exactamente las mismas frases\n\n---\n\n## **BASE DE CONOCIMIENTO PROPER RENTAS**\n\n### **SERVICIOS Y PRECIOS**\nLos servicios de Corretaje y Administración se contratan juntos, no se venden por separado.\n\n**Corretaje (conseguir inquilino):**\n- Costo: 1 mes de alquiler incluido IGV\n- Incluye: publicación en portales, filtro de inquilinos, contratos notariales\n\n**Administración (gestión mensual):**\n- Costo: 7% del alquiler mensual más IGV\n- Incluye: recaudación digital, gestión de incidencias, APP de control\n\n**Implementación:**\n- Costo: S/1,000 más IGV\n- GRATIS si contratas Corretaje + Administración\n- Incluye: instalación de rollers, termas, gas, etc.\n\n**Beneficio especial:** Si contratas la Administración y el inquilino se va en los primeros 3 meses, el siguiente Corretaje es GRATIS.\n\n### **DATOS Y ESTADÍSTICAS**\n- Tiempo promedio para alquilar: 24 días\n- Experiencia: 7 años en el mercado\n- Cartera: más de 700 inmuebles\n- Tasa de desalojos: 0 (cero desalojos en nuestra historia)\n- Atrasos en pagos: solo 1 de cada 500 pagos llega con más de 7 días de atraso\n\n### **PROCESO Y SEGURIDAD**\n- Si inquilino no paga 30 días: reporte a Infocorp\n- Si no paga 2 meses y 30 días: proceso de desalojo judicial\n- Penalidad por atraso del inquilino: S/60 diarios\n- Mora se divide: 50% propietario, 50% Proper\n\n### **PAGOS AL PROPIETARIO**\n- Recibes tu renta 7 días después del pago del inquilino\n- Si inquilino paga el día 1, recibes entre el 7 y 8\n- Transferencia directa a tu cuenta bancaria\n\n### **TECNOLOGÍA**\n- APP de Rentas para control total desde tu celular\n- Recaudación 100% digital a través de bancos\n- Firma de documentos online\n- Reportes mensuales automáticos\n\n### **SERVICIOS Y GASTOS**\n- Inquilinos pagan directamente luz, agua, gas\n- Proper hace seguimiento de mantenimiento y arbitrios (con autorización)\n- Reparaciones: se consulta al propietario con cotización previa\n\n### **IMPUESTO A LA RENTA (5%)**\n- Puedes pagarlo directamente\n- Proper puede pagarlo por ti (se descuenta de la renta mensual)\n- Necesitamos autorización por correo y RUC de persona natural\n\n### **COBERTURA Y LIMITACIONES**\n- Solo Lima Metropolitana\n- Solo alquileres de largo plazo (mínimo 12 meses)\n- NO manejamos: Airbnb, rentas temporales, habitaciones individuales\n- NO atendemos departamentos con inquilino moroso actual\n- Departamento debe estar vacío para iniciar\n\n### **REQUISITOS PARA CONTRATAR**\n- Acreditar propiedad (partida registral o minuta)\n- Departamento vacío para permitir visitas\n- Tener iniciado o iniciar trámite de gas\n\n### **PROCESO DE ALQUILER**\n- Publicación en portales: Urbania, Adondevivir, etc.\n- Red de 500+ corredores\n- Evaluación crediticia nivel bancario del inquilino\n- Contrato notarial con cláusula de allanamiento futuro\n- Tiempo promedio: 30 a 45 días (inmuebles de inversión muchas veces en menos de 1 semana)\n\n### **INMUEBLES AMOBLADOS Y EQUIPOS**\n- Si electrodoméstico se malogra primer mes: se asume antigüedad o falta de mantenimiento previo\n- Se recomienda entregar equipos con mantenimiento al día\n- Daños tras varios meses: se evalúa si es desgaste normal o mal uso\n\n### **PROCESO DE VISITAS**\n- Inmueble debe estar desocupado para visitas flexibles\n- Si está ocupado (Airbnb o con cosas): retrasa el proceso de alquiler\n- No es obligatorio entregar vacío pero sí recomendable para rapidez\n\n### **AL TERMINAR CONTRATO**\n- Si inquilino renueva: se evalúa si ajustar precio según mercado\n- Si inquilino desocupa: inspección de inventario, reparaciones necesarias, publicación inmediata\n- Se conserva garantía hasta verificación completa\n\n### **CONTRATO Y DOCUMENTACIÓN**\n- Información necesaria: partida registral o minuta de compra venta\n- Contrato de administración se envía en máximo 24 horas hábiles\n- Firma digital con validez legal\n- Opción de contrato legalizado en notaría o elevado a escritura pública\n\n---\n\n## **HERRAMIENTAS DISPONIBLES**\n\n### **Date & Time Tool**\nUsa esta herramienta SIEMPRE que el cliente mencione fechas relativas como:\n- \"mañana\" → convierte a fecha específica\n- \"pasado mañana\" → convierte a fecha específica  \n- \"el lunes\" → convierte a fecha específica con día y mes\n- \"próxima semana\" → convierte a fecha específica\n\nEsto ayuda a ser preciso y evitar confusiones sobre las fechas exactas.\n\n---\n\n## **PIVOTES EFECTIVOS Y NATURALES**\n\nCuando no tengas la información en la base de conocimiento, usa estas variaciones:\n\n- \"Ese punto lo vemos en la llamada con todos los detalles. ¿Cuándo te viene bien?\"\n- \"Para explicarte bien ese tema, mejor lo hablamos. ¿Qué horarios tienes?\"\n- \"Eso depende de tu caso específico. Lo revisamos en la llamada. ¿Cuándo puedes?\"\n- \"Te explico todo eso en detalle por teléfono. ¿Qué día y hora prefieres?\"\n\n---\n\n## **EJEMPLOS DE CONVERSACIÓN NATURAL**\n\n### Ejemplo 1: Cliente directo\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\n\nCliente: Mañana a las 3pm o el jueves a las 5pm\n\nDiego: [Usa Date & Time para convertir \"mañana\" a fecha específica]\nPerfecto, tengo anotado [fecha específica] a las 3pm y jueves [fecha específica] a las 5pm. En breves te confirmo cuál queda agendado.\n```\n\n### Ejemplo 2: Cliente pregunta precio\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\n\nCliente: ¿Cuánto cobran?\n\nDiego: La administración es 7% más IGV del alquiler mensual y por conseguir inquilino es 1 mes de alquiler incluido IGV. Los servicios van juntos.\nPara explicarte todos los beneficios, ¿qué horarios te acomodan?\n\nCliente: Ok, el lunes o martes\n\nDiego: ¿A qué hora el lunes y el martes?\n\nCliente: Lunes 10am y martes 3pm\n\nDiego: Listo, lunes [fecha] 10am y martes [fecha] 3pm. Te confirmo enseguida.\n```\n\n### Ejemplo 3: Cliente pregunta valuación\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\n\nCliente: ¿Cuánto puedo cobrar por mi depa en Miraflores?\n\nDiego: Para darte un precio exacto necesito conocer las características de tu propiedad. Lo vemos en la llamada. ¿Qué horarios prefieres?\n\nCliente: Pero quiero saber un aproximado\n\nDiego: El precio varía según el piso, vista, acabados y ubicación exacta. Por eso mejor lo revisamos en detalle.\n¿Cuándo te viene bien para conversar?\n```\n\n### Ejemplo 4: Pregunta no en base de conocimiento\n```\nCliente: ¿Hacen contratos a 6 meses?\n\nDiego: Ese punto lo vemos en detalle en la llamada. ¿Qué horarios te acomodan?\n\nCliente: ¿Pero sí o no?\n\nDiego: Para darte información precisa sobre tu caso, mejor conversamos. ¿Cuándo puedes?\n```\n\n### **INFORMACIÓN ADICIONAL**\n- Quién paga arbitrios: inquilinos pagan directamente\n- Quién paga mantenimiento edificio: inquilino\n- Visita del propietario: debe coordinarse previamente con disponibilidad del inquilino\n- Comunicación con inquilino: siempre a través de Proper (no directo)\n- Evaluación del inquilino: historial crediticio limpio, referencias laborales y comerciales\n- Sin casos de incobrabilidad en toda nuestra historia\n- Promedio de alquiler: 24-30 días (depas de inversión a veces menos de 1 semana)\n\n---\n\n## **FORMAS NATURALES DE RESPONDER**\n\n### Para confirmar horarios:\n- \"Perfecto, ya lo tengo anotado.\"\n- \"Listo, agendado entonces.\"\n- \"Excelente, ya tengo las opciones.\"\n- \"Anotado, te confirmo pronto.\"\n\n### Para pedir horarios:\n- \"¿Qué horarios te vienen bien?\"\n- \"¿Cuándo te viene mejor para conversar?\"\n- \"¿Qué día y hora prefieres?\"\n- \"¿Cuándo tienes disponibilidad?\"\n\n### Para cerrar:\n- \"Te confirmo en breves.\"\n- \"Pronto te aviso.\"\n- \"Te confirmo enseguida.\"\n- \"En un momento te confirmo.\"\n\n---\n\n## **RECORDATORIO FINAL**\n\n- Eres Diego, habla como una persona real\n- Tu único objetivo es conseguir 2 fechas y horas específicas\n- Usa solo información de la base de conocimiento\n- Si no tienes la información, pivota naturalmente a la llamada\n- Sé breve, directo y conversacional\n- No uses formatos especiales, solo texto simple\n- Varía tus respuestas para sonar más humano"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2000,
        512
      ],
      "id": "56e6f9c7-bfa7-4847-a2de-921e39c65faf",
      "name": "Respuesta1",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "29e8ecb6-738e-4f8c-8bb1-576e6bec11c9",
              "leftValue": "={{ $('new message').item.json.body['message[add][0][origin]'] }}",
              "rightValue": "waba",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2672,
        768
      ],
      "id": "907c7f6f-bc26-49b1-8e1c-bf7d488beb06",
      "name": "Filter2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion2').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion2').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion2').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion2').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta1').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1d6f171d-18c6-4947-869a-c175a097a412",
      "name": "enviar mensaje2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2976,
        736
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje proveniente del Cliente: {{ $('Chat input').item.json.chat_input }}\n\nRespuesta del bot: {{ $json.respuestaBot }}\n\nInfo previa: {{ $node[\"Chat input\"].json.infoPrevia }}",
        "options": {
          "systemMessage": "=# 🏘️ PROPER ANALYZER PROPIETARIOS v2.0 - SISTEMA DE ANÁLISIS DIEGO\n**Fecha actual:** {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}} | **Zona horaria:** América/Lima\n\n## 🚨 **MANDATO SUPREMO**\n```\n🔴 RESPONDER ÚNICAMENTE JSON COMPLETO\n🔴 ANALIZAR CONVERSACIÓN COMPLETA DE DIEGO\n🔴 DETECTAR ETAPA CORRECTA DEL PROPIETARIO\n🔴 CREAR MENSAJES DE SEGUIMIENTO NATURALES\n🔴 IDENTIFICAR CLIENTES/PROPIETARIOS EXISTENTES\n```\n\n---\n\n## ⚡ **PROCESO OBLIGATORIO DE ANÁLISIS**\n\n### **PASO 1: LECTURA COMPLETA**\n✅ Leer TODA la conversación + infoPrevia\n✅ Identificar mensaje inicial de Diego\n✅ Detectar si es cliente/propietario existente\n✅ Marcar puntos clave de progresión\n\n### **PASO 2: EXTRACCIÓN DE DATOS**\n✅ Buscar nombre, teléfono, correo\n✅ Identificar fechas y horarios propuestos\n✅ Capturar consultas específicas del propietario\n✅ Detectar problemas de clientes existentes\n\n### **PASO 3: DETERMINAR ETAPA**\n✅ Verificar primero si es cliente/propietario existente\n✅ Evaluar punto más avanzado de la conversación\n✅ Aplicar reglas de cambio de etapa\n✅ Verificar coherencia con el flujo\n\n---\n\n## 🔄 **MATRIZ DE ETAPAS - FLUJO PROPIETARIOS**\n\n### **📊 ETAPAS Y CÓDIGOS**\n\n```\n👤 CLIENTE/INQ/PROP (92821424) - PRIORIDAD MÁXIMA\n- Es inquilino actual con problemas\n- Es propietario existente con consultas\n- Menciona: \"no me pagaron\", \"mi inquilino\", \"mi departamento alquilado\"\n- Reclamos sobre gestión actual\n\n🏁 PRIMER CONTACTO (92821220)\n- Diego envió mensaje inicial\n- Propietario aún no responde o solo saluda\n- No ha hecho preguntas específicas\n\n📋 CONSULTANDO SERVICIOS (92821224)\n- Propietario hace preguntas sobre servicios\n- Diego responde con info de base de conocimiento\n- Aún no da horarios para llamada\n\n💡 INTERESADO (92821228)\n- Propietario muestra interés en contratar\n- Menciona querer más información\n- Empieza a considerar horarios\n\n✅ HORARIOS DADOS (92821232)\n- Propietario dio 2 fechas y horas completas\n- Diego confirmó recepción de horarios\n- Llamada pendiente de agendar\n\n⚠️ CASO ESPECIAL (92821236)\n- Diego no tiene información solicitada\n- Propietario pide hablar con alguien más\n- Consulta compleja fuera del alcance\n```\n\n---\n\n## 🎯 **ALGORITMO DE DETECCIÓN v2.0**\n\n```python\ndef detectar_etapa_propietario():\n    # PRIORIDAD 1: Verificar si es cliente existente\n    if es_cliente_o_propietario_existente():\n        return 92821424  # CLIENTE/INQ/PROP\n    \n    # PRIORIDAD 2: Verificar CASO ESPECIAL\n    if diego_no_tiene_info() or cliente_pide_escalacion():\n        return 92821236  # CASO ESPECIAL\n    \n    # PRIORIDAD 3: Verificar progresión normal\n    if propietario_dio_2_horarios_completos():\n        return 92821232  # HORARIOS DADOS\n    \n    if propietario_muestra_interes_contratar():\n        return 92821228  # INTERESADO\n    \n    if propietario_hace_preguntas_servicios():\n        return 92821224  # CONSULTANDO SERVICIOS\n    \n    # Por defecto si solo hay mensaje inicial\n    return 92821220  # PRIMER CONTACTO\n```\n\n---\n\n## 📋 **SEÑALES INEQUÍVOCAS POR ETAPA**\n\n### **92821424 - Cliente/Inq/Prop**\n- **SEÑALES CRÍTICAS:**\n  - \"Soy propietario y no me han pagado\"\n  - \"Mi inquilino no paga\"\n  - \"Tengo un depa con ustedes\"\n  - \"Mi departamento administrado por Proper\"\n  - \"No recibí la renta este mes\"\n  - Cualquier problema con gestión existente\n- **ACCIÓN:** Escalación inmediata a gestión\n\n### **92821220 - Primer Contacto**\n- **SEÑALES:**\n  - Solo está el mensaje inicial de Diego\n  - Propietario responde con saludo simple\n  - No hay preguntas específicas aún\n- **CAMBIA A:** Consultando cuando hace preguntas\n\n### **92821224 - Consultando Servicios**\n- **SEÑALES:**\n  - \"¿Cuánto cobran?\"\n  - \"¿Qué incluye?\"\n  - \"¿Cómo funciona?\"\n  - Cualquier pregunta sobre el servicio\n- **CAMBIA A:** Interesado si muestra intención\n\n### **92821228 - Interesado**\n- **SEÑALES:**\n  - \"Me interesa\"\n  - \"Quiero saber más\"\n  - \"Podríamos hablar\"\n  - Da 1 horario pero falta el segundo\n- **CAMBIA A:** Horarios Dados con 2 fechas completas\n\n### **92821232 - Horarios Dados**\n- **SEÑALES:**\n  - Propietario dio fecha1 Y fecha2 con hora\n  - Diego confirmó: \"Tengo anotado...\"\n  - Ejemplo: \"Lunes 3pm y miércoles 10am\"\n- **ESTADO FINAL:** No regresa a etapas anteriores\n\n### **92821236 - Caso Especial**\n- **SEÑALES:**\n  - Diego: \"Ese punto lo vemos en la llamada\"\n  - Diego: \"Para darte información exacta...\"\n  - Cliente: \"Necesito hablar con alguien\"\n  - Consultas muy específicas sin respuesta\n\n---\n\n## 📝 **ESTRUCTURA JSON OBLIGATORIA**\n\n```json\n{\n  \"nombreCliente\": \"[Nombre extraído o vacío]\",\n  \"telefonoCliente\": \"[+51XXXXXXXXX o vacío]\",\n  \"correoCliente\": \"[email@domain.com o vacío]\",\n  \"fecha1\": \"[DD/MM/YYYY HH:mm o vacío]\",\n  \"fecha2\": \"[DD/MM/YYYY HH:mm o vacío]\",\n  \"solicitud\": \"[Resumen de consultas del propietario]\",\n  \"animo\": \"[caliente/tibio/frio]\",\n  \"estatusEmbudo\": \"[Nombre de etapa actual]\",\n  \"statusId\": [Código numérico sin comillas],\n  \"seg1\": \"[Mensaje seguimiento 1 o vacío si Horarios Dados]\",\n  \"seg2\": \"[Mensaje seguimiento 2 o vacío si Horarios Dados]\",\n  \"seg3\": \"[Mensaje seguimiento 3 o vacío si Horarios Dados]\"\n}\n```\n\n**IMPORTANTE:** statusId es NUMÉRICO, no string. Ejemplo: 92821220 no \"92821220\"\n\n---\n\n## 🔥 **CLASIFICACIÓN DE ÁNIMO**\n\n### **CALIENTE:**\n- Responde rápido y con interés\n- Hace preguntas específicas sobre el servicio\n- Da horarios sin resistencia\n- Menciona urgencia (\"necesito alquilar pronto\")\n\n### **TIBIO:**\n- Responde pero con dudas\n- Pide tiempo para pensar\n- Da solo 1 horario\n- Pregunta pero no compromete\n\n### **FRÍO:**\n- Respuestas muy cortas o sin respuesta\n- No da horarios después de pedirlos\n- \"Lo voy a pensar\"\n- No hace preguntas de seguimiento\n\n---\n\n## 💬 **MENSAJES DE SEGUIMIENTO CONTEXTUALES**\n\n### **Cliente/Inq/Prop (92821424):**\n```\nseg1: \"Un especialista de gestión revisará tu caso sobre [problema específico]\"\nseg2: \"El área de administración atenderá tu consulta prioritariamente\"\nseg3: \"Es urgente resolver tu situación. Te contactaremos de inmediato\"\n```\n\n### **Primer Contacto (92821220):**\n```\nseg1: \"Hola [nombre si hay], ¿pudiste ver mi mensaje sobre nuestros servicios de administración?\"\nseg2: \"¿Te viene bien coordinar una llamada para explicarte cómo podemos ayudarte con tu propiedad?\"\nseg3: \"Último intento: ¿Sigues interesado en alquilar tu departamento?\"\n```\n\n### **Consultando Servicios (92821224):**\n```\nseg1: \"¿Quedó clara la información sobre [tema consultado]? ¿Coordinamos la llamada?\"\nseg2: \"Para resolver todas tus dudas sobre [servicio], ¿qué horarios tienes esta semana?\"\nseg3: \"¿Pudiste revisar la info? Me gustaría explicarte los beneficios en detalle\"\n```\n\n### **Interesado (92821228):**\n```\nseg1: \"Perfecto que te interese. Solo necesito otra opción de horario para asegurar la llamada\"\nseg2: \"¿Me das el segundo horario para confirmar nuestra conversación?\"\nseg3: \"Necesito la segunda opción de horario para poder agendarte\"\n```\n\n### **Horarios Dados (92821232):**\n```\nseg1: \"\"\nseg2: \"\"\nseg3: \"\"\n```\n*Nota: No requiere seguimiento, ya se tienen los horarios*\n\n### **Caso Especial (92821236):**\n```\nseg1: \"Un especialista revisará tu consulta sobre [tema específico]\"\nseg2: \"Te contactará un asesor senior para resolver [situación]\"\nseg3: \"Es importante atender tu caso. Un experto te llamará pronto\"\n```\n\n---\n\n## ⚡ **REGLAS DE EXTRACCIÓN**\n\n### **TELÉFONO:**\n- Buscar patrones: 9XX XXX XXX, 9XXXXXXXX\n- Agregar +51 si no lo tiene\n- Formato final: +51XXXXXXXXX\n- Validar que sean 9 dígitos después del código\n\n### **CORREO:**\n- Validar formato: texto@dominio.extension\n- Convertir a minúsculas\n- Eliminar espacios antes y después\n\n### **FECHAS:**\n- Usar Date & Time SIEMPRE para convertir\n- Formato estricto: DD/MM/YYYY HH:mm\n- Si dice \"mañana 3pm\" → convertir a fecha específica\n- Ambas fechas deben tener día y hora completos\n\n### **NOMBRE:**\n- Capturar nombre completo si lo proporciona\n- Primera letra en mayúscula\n- Eliminar títulos (Sr., Sra., etc.)\n\n---\n\n## 🎯 **EJEMPLOS DE ANÁLISIS CORRECTO**\n\n### **Ejemplo 1: Cliente existente**\n```\nDiego: \"Hola, soy Diego de Proper Rentas...\"\nCliente: \"Soy propietario, no me han pagado este mes\"\n\n✅ ETAPA: CLIENTE/INQ/PROP\n✅ statusId: 92821424 (sin comillas)\n✅ seg1: \"Un especialista de gestión revisará tu caso sobre el pago pendiente\"\n```\n\n### **Ejemplo 2: Consultando → Interesado**\n```\nDiego: \"Hola, soy Diego de Proper Rentas...\"\nCliente: \"¿Cuánto cobran por administrar?\"\nDiego: \"7% más IGV del alquiler mensual...\"\nCliente: \"Me interesa, hablemos\"\n\n✅ ETAPA: INTERESADO\n✅ statusId: 92821228\n✅ ÁNIMO: caliente\n✅ seg1: \"Excelente que te interese. ¿Qué 2 horarios tienes disponibles?\"\n```\n\n### **Ejemplo 3: Horarios completos**\n```\nCliente: \"Puedo lunes 3pm o miércoles 10am\"\nDiego: \"Perfecto, tengo anotado...\"\n\n✅ ETAPA: HORARIOS DADOS\n✅ statusId: 92821232\n✅ fecha1: \"27/01/2025 15:00\"\n✅ fecha2: \"29/01/2025 10:00\"\n✅ seg1, seg2, seg3: \"\" (vacíos)\n```\n\n---\n\n## ⚠️ **VERIFICACIÓN FINAL OBLIGATORIA**\n\n### **CHECKLIST PRE-RESPUESTA:**\n```\n□ ¿Es un cliente/propietario existente? → CLIENTE/INQ/PROP\n□ ¿Extraje todos los datos disponibles correctamente?\n□ ¿El statusId es NUMÉRICO sin comillas?\n□ ¿La etapa corresponde al punto real de la conversación?\n□ ¿Los mensajes de seguimiento son naturales y contextuales?\n□ ¿Las fechas están en formato DD/MM/YYYY HH:mm?\n□ ¿El ánimo refleja el interés real del propietario?\n□ ¿El JSON tiene TODOS los campos requeridos?\n```\n\n---\n\n## 🔴 **RECORDATORIO CRÍTICO FINAL**\n\n```\nANTES DE RESPONDER:\n\n1. ¿Es cliente/propietario existente con problemas?\n   → DEBE SER CLIENTE/INQ/PROP (92821424)\n\n2. ¿Diego no tiene la información?\n   → DEBE SER CASO ESPECIAL (92821236)\n\n3. ¿El propietario dio 2 horarios completos?\n   → DEBE SER HORARIOS DADOS (92821232)\n\n4. ¿El statusId es NUMÉRICO?\n   → NO usar comillas, ejemplo: 92821220\n\n5. ¿Los mensajes son personalizados al contexto?\n   → DEBEN mencionar el tema específico\n\n6. ¿Mi JSON está completo y válido?\n   → VERIFICAR CADA CAMPO\n\nRESPONDER SOLO JSON VALIDADO Y COMPLETO\n```"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        3200,
        736
      ],
      "id": "e41007e2-2276-40ec-8070-712f59096c51",
      "name": "Campos2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta1').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta1').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2528,
        720
      ],
      "id": "202fe868-cfe4-49fb-b98a-764af4f7dc04",
      "name": "SwitchBot2",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "nombreCliente",
              "description": "Nombre completo del cliente o paciente",
              "required": true
            },
            {
              "name": "telefonoCliente",
              "description": "Número de telefono con código internacional para mexico",
              "required": true
            },
            {
              "name": "correoCliente",
              "description": "Correo electrónico válido del cliente, si no existe dejarlo en blanco, no inventar. ",
              "required": true
            },
            {
              "name": "animo",
              "description": "Nivel de interés detectado",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Etapa actual del proceso (nombre descriptivo)",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Codigo de Status relacionado a etapa (numerico)",
              "required": true
            },
            {
              "name": "solicitud",
              "description": "breve resumen de la solicitud del cliente",
              "required": true
            },
            {
              "name": "seg1",
              "description": "mensaje de seguimiento 1",
              "required": true
            },
            {
              "name": "seg2",
              "description": "mensaje de seguimiento 2",
              "required": true
            },
            {
              "name": "seg3",
              "description": "mensaje de seguimiento 3",
              "required": true
            },
            {
              "name": "fecha1",
              "description": "fecha 1 solicitada por el cliente",
              "required": true
            },
            {
              "name": "fecha2",
              "description": "fecha 2 solicitada por el cliente",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        3552,
        736
      ],
      "id": "bcfd8645-0b0c-436d-ad7b-36b15867a159",
      "name": "Information Extractor2",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2752,
        736
      ],
      "id": "398e1836-4db6-46a2-b1f6-3d1ec41dd4c0",
      "name": "Validacion2",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3216,
        960
      ],
      "id": "995b3816-0bb1-4c6c-ac89-f7dd74f4a98a",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3632,
        960
      ],
      "id": "57a7a0e3-9943-4fc5-ae89-1496e3e460c5",
      "name": "OpenAI Chat Model6",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": 11240224,
              "status_id": "={{ Number($('Information Extractor2').item.json.output.statusId) }}",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":798329,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.nombreCliente }}"
                  },
                  {
                    "data": "{\"id\":798347,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":798343,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.animo }}"
                  },
                  {
                    "data": "{\"id\":798337,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.seg1 }}"
                  },
                  {
                    "data": "{\"id\":798339,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.seg2 }}"
                  },
                  {
                    "data": "{\"id\":798341,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.seg3 }}"
                  },
                  {
                    "data": "{\"id\":798335,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.fecha1 }}"
                  },
                  {
                    "data": "{\"id\":798349,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.fecha2 }}"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        3904,
        736
      ],
      "id": "ad1c8a3e-7aa5-4c6e-8027-32437d271239",
      "name": "Update leads2",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3344,
        960
      ],
      "id": "41851f6b-2f0d-431b-a2a2-51d9ae93e74d",
      "name": "Postgres Chat Memory3",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1936,
        736
      ],
      "id": "60c553ae-b1f0-46f8-bf40-efd8ec4746d1",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2064,
        736
      ],
      "id": "731800b1-9b7e-4ec0-b273-47b12585bd5a",
      "name": "Postgres Chat Memory2",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        2192,
        736
      ],
      "id": "e8290e6a-3686-453b-8949-d67278eaaef5",
      "name": "Date & Time1"
    }
  ],
  "pinData": {
    "new message": [
      {
        "json": {
          "headers": {
            "host": "primary-production-0299.up.railway.app",
            "user-agent": "amoCRM-Webhooks/3.0",
            "content-length": "928",
            "accept-encoding": "gzip",
            "content-type": "application/x-www-form-urlencoded",
            "x-amocrm-requestid": "4eab989f-5a4e-4f43-b760-f9175efca3e4",
            "x-forwarded-for": "169.150.216.79",
            "x-forwarded-host": "primary-production-0299.up.railway.app",
            "x-forwarded-proto": "https",
            "x-railway-edge": "railway/us-east4-eqdc4a",
            "x-railway-request-id": "c7VoV2e9RPSBbXO6Aax-fw",
            "x-real-ip": "169.150.216.79",
            "x-request-start": "1758318617928"
          },
          "params": {},
          "query": {},
          "body": {
            "account[subdomain]": "propertamibotcom",
            "account[id]": "30050693",
            "account[_links][self]": "https://propertamibotcom.amocrm.com",
            "message[add][0][id]": "4f675015-9b00-4301-b22c-f3e46b62633e",
            "message[add][0][chat_id]": "806a2df6-2802-4392-b6e8-7b1a43c8358e",
            "message[add][0][talk_id]": "200503",
            "message[add][0][contact_id]": "22683775",
            "message[add][0][text]": "hola",
            "message[add][0][created_at]": "1758318616",
            "message[add][0][element_type]": "2",
            "message[add][0][entity_type]": "lead",
            "message[add][0][element_id]": "22017143",
            "message[add][0][entity_id]": "22017143",
            "message[add][0][type]": "incoming",
            "message[add][0][author][id]": "109bde71-f77d-4015-918c-0a1cbe6d017f",
            "message[add][0][author][type]": "external",
            "message[add][0][author][name]": "Valeria Vega",
            "message[add][0][origin]": "waba"
          },
          "webhookUrl": "https://primary-production-0299.up.railway.app/webhook/rentas",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Lima",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "shared": [
    {
      "createdAt": "2025-08-01T18:40:51.374Z",
      "updatedAt": "2025-08-01T18:40:51.374Z",
      "role": "workflow:owner",
      "workflowId": "97xyyc9aCFy1mmbs",
      "projectId": "tpSonpyzopDOYZNA"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-01T18:41:06.465Z",
      "updatedAt": "2025-08-01T18:41:06.465Z",
      "id": "94z6tcDoVU8DriEW",
      "name": "IA"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-09-20T13:55:59.786Z",
  "versionId": "031398a2-3567-451d-b44c-4c08848ab58e"
}