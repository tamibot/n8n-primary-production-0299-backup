{
  "active": true,
  "connections": {
    "enviar mensaje": {
      "main": [
        [
          {
            "node": "Campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Campos": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBot": {
      "main": [
        [
          {
            "node": "Validacion",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Update leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion": {
      "main": [
        [
          {
            "node": "enviar mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "GET Lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat Memory Manager1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields": {
      "main": [
        [
          {
            "node": "Get list of contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBuffer": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete message buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDF content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Video content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Image content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Voice content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat input": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON parse": {
      "main": [
        [
          {
            "node": "checkType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "JSON parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete message buffer": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "SwitchBuffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Buffer": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get PDF": {
      "main": [
        [
          {
            "node": "Analyze document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get video": {
      "main": [
        [
          {
            "node": "Analyze video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get image": {
      "main": [
        [
          {
            "node": "recognize image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recognize image": {
      "main": [
        [
          {
            "node": "Image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "checkType": {
      "main": [
        [
          {
            "node": "Text content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get voice",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe voice": {
      "main": [
        [
          {
            "node": "Voice content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get voice": {
      "main": [
        [
          {
            "node": "transcribe voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Campos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "new message": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "BUSQUEDA LINK URBANIA": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Campos",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PROPERTIES - SQL": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Campos",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta": {
      "main": [
        [
          {
            "node": "SwitchBot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Lead": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Respuesta",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Campos",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respuesta1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respuesta2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respuesta3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta1": {
      "main": [
        [
          {
            "node": "SwitchBot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "enviar mensaje2": {
      "main": [
        [
          {
            "node": "Campos2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Campos2": {
      "main": [
        [
          {
            "node": "Information Extractor2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBot2": {
      "main": [
        [
          {
            "node": "Validacion2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor2": {
      "main": [
        [
          {
            "node": "Update leads2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion2": {
      "main": [
        [
          {
            "node": "enviar mensaje2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Campos2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory3": {
      "ai_memory": [
        [
          {
            "node": "Campos2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "Respuesta1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "ai_tool": [
        [
          {
            "node": "Respuesta1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update leads2": {
      "main": [
        []
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Push Buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get list of contacts": {
      "main": [
        [
          {
            "node": "Filter3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter3": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VALIDACION NUMERO": {
      "main": [
        [
          {
            "node": "Switch5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update leads1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update leads1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [
          {
            "node": "Push Buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "VALIDACION NUMERO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch5": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Push Buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Push Buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta2": {
      "main": [
        [
          {
            "node": "SwitchBot3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "enviar mensaje3": {
      "main": [
        []
      ]
    },
    "SwitchBot3": {
      "main": [
        [
          {
            "node": "Create new notes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion3": {
      "main": [
        [
          {
            "node": "enviar mensaje3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory5": {
      "ai_memory": [
        [
          {
            "node": "Respuesta2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time2": {
      "ai_tool": [
        [
          {
            "node": "Respuesta2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "Campos",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create new notes": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          },
          {
            "node": "Campos5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch6": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Respuesta3": {
      "main": [
        [
          {
            "node": "SwitchBot4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "enviar mensaje4": {
      "main": [
        []
      ]
    },
    "Campos4": {
      "main": [
        [
          {
            "node": "Information Extractor4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBot4": {
      "main": [
        [
          {
            "node": "Create new notes1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor4": {
      "main": [
        [
          {
            "node": "Update leads4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion4": {
      "main": [
        [
          {
            "node": "enviar mensaje4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model11": {
      "ai_languageModel": [
        [
          {
            "node": "Campos4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model12": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory7": {
      "ai_memory": [
        [
          {
            "node": "Campos4",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory8": {
      "ai_memory": [
        [
          {
            "node": "Respuesta3",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time3": {
      "ai_tool": [
        [
          {
            "node": "Respuesta3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create new notes1": {
      "main": [
        [
          {
            "node": "Campos4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze video": {
      "main": [
        [
          {
            "node": "Video content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze document": {
      "main": [
        [
          {
            "node": "PDF content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Validacion3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "Validacion4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base de conocimiento": {
      "ai_tool": [
        [
          {
            "node": "Respuesta3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Base de conocimiento1": {
      "ai_tool": [
        [
          {
            "node": "Respuesta2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Busca por correo o dni": {
      "ai_tool": [
        [
          {
            "node": "Respuesta3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model9": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Busca por telefono": {
      "ai_tool": [
        [
          {
            "node": "Respuesta3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Campos5": {
      "main": [
        [
          {
            "node": "Information Extractor5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor5": {
      "main": [
        [
          {
            "node": "Update leads5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model13": {
      "ai_languageModel": [
        [
          {
            "node": "Campos5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model14": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory9": {
      "ai_memory": [
        [
          {
            "node": "Campos5",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-01T18:40:51.374Z",
  "id": "97xyyc9aCFy1mmbs",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "PROPER CHATBOT IA",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1838a470-ec0f-44c5-8e5b-8714ed558d2a",
      "name": "enviar mensaje",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4736,
        752
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje proveniente del Cliente: {{ $('Chat input').item.json.chat_input }}\n\nRespuesta del bot: {{ $('Respuesta').item.json.output }}\n\nLink Urbania: {{ $('Chat input').item.json.LinkUrbania }}",
        "options": {
          "systemMessage": "=# 🏠 PROPER ANALYZER v8.0 - SISTEMA AVANZADO DE PROGRESIÓN\n\n**Fecha actual:** {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}} | **Zona horaria:** América/Lima\n\n---\n\n## 🚨 **MANDATO SUPREMO**\n\n```\n🔴 RESPONDER ÚNICAMENTE JSON COMPLETO CON TODOS LOS CAMPOS\n🔴 SI NO TENGO CÓDIGO → USAR HERRAMIENTA \"BUSQUEDA LINK URBANIA\"\n🔴 ORIGEN \"URBANIA\" SOLO SI OBTUVE CÓDIGO DE URL\n🔴 MODO = CÓDIGO \"MODO\" + ORIGEN \"OTROS\" (si no vino de URL)\n🔴 FILTROS NUMÉRICOS: 1=sí, 0=no, null=no mencionado\n🔴 statusId SIEMPRE NUMÉRICO (sin comillas)\n🔴 NUNCA INVENTAR CÓDIGOS, FECHAS O DATOS\n🔴 MENSAJES DE SEGUIMIENTO SIN EMOJIS\n```\n\n---\n\n## 📊 **SISTEMA DE CATEGORIZACIÓN COMERCIAL**\n\n### **ESTRUCTURA OBLIGATORIA:**\n```\nNIVEL_1 - NIVEL_2 - NIVEL_3\n```\n\n**NIVEL 1: Tipo de Lead**\n- `LEAD_CALIENTE` - Cliente muy interesado, listo para visitar\n- `LEAD_TIBIO` - Cliente explorando opciones activamente\n- `LEAD_FRIO` - Cliente en fase inicial de búsqueda\n- `CONSULTA` - Pregunta informativa o consulta general\n\n**NIVEL 2: Origen/Canal**\n- `URBANIA` - Llegó por URL de Urbania\n- `OTROS` - Sin URL o búsqueda directa\n- `MODO` - Proyecto MODO específicamente\n- `REGULAR` - Propiedades regulares\n\n**NIVEL 3: Acción/Estado**\n- `VISITA_PROGRAMADA` - Tiene visita confirmada o solicitada\n- `EXPLORANDO` - Buscando opciones sin compromiso\n- `INTERESADO` - Mostró interés específico en propiedad\n- `INFORMACION` - Solo busca datos informativos\n- `COORDINACION` - En proceso de coordinar visita\n- `DEFINIENDO` - Aún definiendo criterios de búsqueda\n\n### **EJEMPLOS DE CATEGORIZACIÓN:**\n```\n✅ LEAD_CALIENTE - URBANIA - VISITA_PROGRAMADA\n✅ LEAD_CALIENTE - MODO - VISITA_PROGRAMADA\n✅ LEAD_TIBIO - REGULAR - INTERESADO\n✅ LEAD_TIBIO - OTROS - COORDINACION\n✅ LEAD_FRIO - OTROS - EXPLORANDO\n✅ LEAD_FRIO - REGULAR - DEFINIENDO\n✅ CONSULTA - OTROS - INFORMACION\n✅ LEAD_CALIENTE - REGULAR - COORDINACION\n```\n\n**CRITERIOS DE CLASIFICACIÓN:**\n\n**LEAD_CALIENTE:**\n- Cliente pidió visita\n- Dio 2 horarios (regulares) o confirmó horario (MODO)\n- Mostró urgencia explícita\n- Ingresos confirmados y cumple requisitos\n- Se muda pronto (≤30 días)\n\n**LEAD_TIBIO:**\n- Cliente interesado en propiedad específica\n- Pidió más información\n- Aún no coordina visita pero muestra intención\n- Hace preguntas específicas sobre la propiedad\n\n**LEAD_FRIO:**\n- Cliente recién comienza búsqueda\n- Explora opciones generales\n- No ha mostrado interés específico\n- Aún define criterios\n\n**CONSULTA:**\n- Solo pregunta informativa\n- No busca propiedad activamente\n- Consulta sobre procesos o políticas\n\n---\n\n## 🔧 **USO DE HERRAMIENTAS**\n\n### **HERRAMIENTA: BUSQUEDA LINK URBANIA**\n\n```\n¿CUÁNDO USAR?\n✅ Hay URL/link en la conversación o infoPrevia\n✅ NO tengo código de propiedad aún\n✅ Necesito extraer información completa del inmueble\n\n¿QUÉ EXTRAER?\n✅ Código de propiedad (OBLIGATORIO)\n✅ Precio\n✅ Ubicación/dirección\n✅ Características (dormitorios, baños, m²)\n\nCRÍTICO:\n- Si hay URL → SIEMPRE usar esta herramienta\n- Extraer código de propiedad de la herramienta\n- NUNCA inventar el código si la herramienta no lo da\n```\n\n---\n\n## ⚡ **PROCESO OBLIGATORIO DE ANÁLISIS**\n\n### **PASO 1: IDENTIFICACIÓN Y EXTRACCIÓN INICIAL**\n\n```\n1. ¿HAY URL EN CONVERSACIÓN O infoPrevia?\n   SÍ → Usar herramienta \"BUSQUEDA LINK URBANIA\"\n        → Extraer código de propiedad\n        → origen = \"URBANIA\"\n   NO → Continuar sin herramienta\n\n2. ¿ES PROYECTO MODO?\n   Indicadores: PUCP, San Miguel, Universidad, Av. Universitaria\n   SÍ → codPropiedad = \"MODO\"\n        origen = \"OTROS\" (a menos que vino de URL)\n   NO → Buscar código en conversación\n\n3. ¿CÓDIGO PROPIEDAD EN CONVERSACIÓN?\n   Buscar patrón: \"Código Propiedad: XXX\"\n   SÍ → Extraer ese código\n   NO → Dejar vacío (NO inventar)\n\n4. DETERMINAR ORIGEN FINAL:\n   - Si código vino de URL/herramienta → \"URBANIA\"\n   - Si es MODO sin URL → \"OTROS\"  \n   - Si no hay código → \"OTROS\"\n```\n\n### **PASO 2: EXTRACCIÓN DE FILTROS**\n\n```\nFILTRO: ingresos_minimos (1/0/null)\n- ¿Cliente mencionó ingresos? → Calcular si cumple 2x renta\n- cumple → 1\n- no cumple → 0\n- no mencionó → null\n\nFILTRO: mudanza_proxima (1/0/null)\n- ¿Cliente mencionó fecha mudanza? → Calcular si ≤30 días\n- ≤30 días → 1\n- >30 días → 0\n- no mencionó → null\n```\n\n### **PASO 3: ANÁLISIS DE SOLUCIÓN Y CASO ESPECIAL**\n\n```\nTIENE_SOLUCION:\n✅ ¿Bot proporcionó información completa?\n✅ ¿Bot respondió la consulta del cliente?\n✅ ¿Bot presentó propiedades específicas?\n✅ ¿Bot dio datos concretos (código, precio, ubicación)?\n→ SI = true, llenar descripcion_solucion\n→ NO = false, descripcion_solucion vacío\n\nCASO_ESPECIAL:\n✅ ¿Cliente es inquilino/propietario existente?\n✅ ¿Consulta fuera del flujo comercial normal?\n✅ ¿Requiere atención especializada no comercial?\n✅ ¿Problema técnico o administrativo?\n→ SI = true, llenar detalle_caso_especial\n→ NO = false, detalle_caso_especial vacío\n```\n\n### **PASO 4: ANÁLISIS DE PROGRESIÓN**\n\n```\n✅ Leer TODA conversación + infoPrevia\n✅ Identificar punto MÁS AVANZADO alcanzado\n✅ Aplicar flujo correcto: MODO o REGULAR\n✅ NO regresar a etapas anteriores (solo avanzar)\n✅ Extraer fechas según tipo proyecto\n✅ Generar categorización comercial correcta\n```\n\n### **PASO 5: VERIFICACIÓN TRIPLE**\n\n```\n✅ ¿Usé herramienta si había URL?\n✅ ¿ORIGEN correcto? (\"URBANIA\" solo si código de URL)\n✅ ¿Código NO inventado? (extraído o vacío)\n✅ ¿Flujo correcto? (MODO/REGULAR)\n✅ ¿Etapa refleja progresión real?\n✅ ¿Filtros en formato numérico? (1/0/null)\n✅ ¿statusId numérico sin comillas?\n✅ ¿categoria_completa tiene 3 niveles?\n✅ ¿Mensajes seguimiento SIN emojis?\n```\n\n---\n\n## 📍 **LÓGICA DE ORIGEN (CRÍTICO)**\n\n### **ORIGEN = \"URBANIA\"**\n\n```\nCONDICIÓN:\n✅ Hay URL en conversación o infoPrevia\n✅ Usé herramienta \"BUSQUEDA LINK URBANIA\"\n✅ Obtuve código de propiedad de la herramienta\n\nEJEMPLO:\nCliente envía: \"https://urbania.pe/inmueble/alquiler-miraflores-123\"\n→ Uso herramienta\n→ Extraigo código: \"MIR85\"\n→ origen = \"URBANIA\"\n```\n\n### **ORIGEN = \"OTROS\"**\n\n```\nCONDICIONES (cualquiera de estas):\n✅ NO hay URL en la conversación\n✅ Es proyecto MODO sin URL\n✅ Cliente busca sin link específico\n✅ URL no permitió extraer código\n\nEJEMPLOS:\n1. \"Busco depa cerca de la PUCP\"\n   → Es MODO, no hay URL\n   → codPropiedad = \"MODO\"\n   → origen = \"OTROS\"\n\n2. \"Busco 2 dormitorios en Barranco\"\n   → No hay URL\n   → origen = \"OTROS\"\n\n3. URL no funcionó o no dio código\n   → origen = \"OTROS\"\n```\n\n---\n\n## 📋 **EXTRACCIÓN DE CÓDIGO DE PROPIEDAD**\n\n### **PRIORIDAD DE EXTRACCIÓN:**\n\n```\n1. PROYECTO MODO (máxima prioridad)\n   Si detectas: PUCP, San Miguel, Universidad, Av. Universitaria\n   → codPropiedad = \"MODO\"\n   → origen = \"OTROS\" (excepto si vino de URL)\n\n2. URL PRESENTE (segunda prioridad)\n   Si hay URL en conversación\n   → Usar herramienta \"BUSQUEDA LINK URBANIA\"\n   → codPropiedad = [código extraído de herramienta]\n   → origen = \"URBANIA\"\n\n3. CONVERSACIÓN (tercera prioridad)\n   Buscar en TODA la conversación: \"Código Propiedad: XXX\"\n   → codPropiedad = [código encontrado]\n   → origen = \"URBANIA\" si vino de URL, sino \"OTROS\"\n\n4. NO ENCONTRADO\n   → codPropiedad = \"\" (vacío, NO inventar)\n   → origen = \"OTROS\"\n```\n\n---\n\n## 🔄 **FLUJOS DIFERENCIADOS: MODO vs REGULAR**\n\n### 🏢 **FLUJO EXCLUSIVO MODO**\n\n```\nIDENTIFICACIÓN MODO:\n- Menciona: PUCP, San Miguel, Universidad, Av. Universitaria, Tulipanes\n- Código Propiedad: MODO\n- Dirección: Av. Universitaria esq. Tulipanes\n\nEXTRACCIÓN MODO:\n→ codPropiedad = \"MODO\" (siempre este código exacto)\n→ origen = \"OTROS\" (excepto si vino de URL de marketplace)\n\nPROGRESIÓN MODO:\n1. 90801076 (Definiendo) → Cliente consulta sobre zona PUCP\n2. 90801080 (Interactuando) → Bot presenta MODO con código\n3. 90801092 (Interesado) → Cliente quiere visitar\n4. 92800052 (Visita MODO) → Bot CONFIRMA: \"te esperamos [día] [hora]\"\n   ✅ fechaMODO = \"DD/MM/YYYY HH:mm\"\n   ✅ fecha1 = \"\" (vacío)\n   ✅ fecha2 = \"\" (vacío)\n```\n\n**CONDICIÓN ESTRICTA PARA VISITA MODO (92800052):**\n```\n✓ codPropiedad = \"MODO\"\n✓ Bot confirmó: \"te esperamos\" o \"te espero\" o \"confirmo tu visita\"\n✓ Hay día Y hora específicos mencionados\n✓ fechaMODO extraída en formato correcto\n→ ENTONCES: statusId = 92800052 (numérico), seg_1/seg_2 = \"\"\n```\n\n### 🏠 **FLUJO ESTÁNDAR REGULAR**\n\n```\nIDENTIFICACIÓN REGULAR:\n- NO es proyecto MODO\n- Diferentes zonas (Miraflores, Barranco, San Isidro, etc.)\n- Códigos variados obtenidos de herramienta o conversación\n\nEXTRACCIÓN REGULAR:\n→ codPropiedad = [código extraído, NO inventar]\n→ origen = \"URBANIA\" (si vino de URL) o \"OTROS\" (si no)\n\nPROGRESIÓN REGULAR:\n1. 90801072 (Ingreso) → URL en infoPrevia, uso herramienta\n2. 90801080 (Interactuando) → Bot presenta con código\n3. 90801092 (Interesado) → Cliente quiere visitar\n4. 90801096 (Horario Indicado) → Cliente da 2 horarios COMPLETOS\n   ✅ fecha1 = \"DD/MM/YYYY HH:mm\"\n   ✅ fecha2 = \"DD/MM/YYYY HH:mm\"\n   ✅ fechaMODO = \"\" (vacío)\n```\n\n**CONDICIÓN ESTRICTA PARA HORARIO INDICADO (90801096):**\n```\n✓ NO es proyecto MODO\n✓ Cliente dio 2 horarios COMPLETOS y DIFERENTES\n✓ Ambos con día Y hora\n✓ fecha1 y fecha2 extraídas correctamente\n→ ENTONCES: statusId = 90801096 (numérico), seg_1/seg_2 = \"\"\n```\n\n---\n\n## 📍 **ESTADOS Y CONDICIONES ESTRICTAS**\n\n### **90801072 - Ingreso con Propiedad**\n```\nACTIVACIÓN: \n- URL en infoPrevia o primer mensaje\n\nACCIÓN OBLIGATORIA:\n→ Usar herramienta \"BUSQUEDA LINK URBANIA\"\n→ Extraer código de propiedad\n\nEXTRACCIÓN:\n- origen = \"URBANIA\"\n- codPropiedad = [código de herramienta]\n- propiedadInteres = [descripción de herramienta]\n\nCATEGORIZACIÓN:\n- categoria_completa = \"LEAD_TIBIO - URBANIA - INTERESADO\"\n```\n\n### **90801076 - Definiendo Propiedad**\n```\nACTIVACIÓN:\n- Cliente busca sin especificar propiedad\n- Aún no hay código propiedad\n- Explorando opciones\n\nCARACTERÍSTICAS:\n- codPropiedad = \"\"\n- origen = \"OTROS\"\n- animo = \"frio\"\n\nCATEGORIZACIÓN:\n- categoria_completa = \"LEAD_FRIO - OTROS - DEFINIENDO\"\n```\n\n### **90801080 - Interactuando**\n```\nACTIVACIÓN:\n- Bot presentó propiedad con código\n- Cliente recibió información\n- Aún no pide visita\n\nCARACTERÍSTICAS:\n- Hay codPropiedad\n- Cliente no pidió visitar aún\n\nCATEGORIZACIÓN:\n- Si origen URBANIA: \"LEAD_TIBIO - URBANIA - EXPLORANDO\"\n- Si origen OTROS: \"LEAD_TIBIO - OTROS - EXPLORANDO\"\n- Si es MODO: \"LEAD_TIBIO - MODO - EXPLORANDO\"\n```\n\n### **90801092 - Interesado**\n```\nACTIVACIÓN:\n- Cliente expresó querer visitar\n- Aún no da horarios (regular) o no confirma (MODO)\n\nCARACTERÍSTICAS:\n- Cliente dijo: \"quiero visitar\", \"me interesa\", etc.\n- MODO: aún no confirma horario\n- REGULAR: aún no da 2 horarios\n\nCATEGORIZACIÓN:\n- Si es MODO: \"LEAD_CALIENTE - MODO - INTERESADO\"\n- Si es REGULAR: \"LEAD_CALIENTE - REGULAR - COORDINACION\"\n```\n\n### **90801096 - Horario Indicado (SOLO REGULAR)**\n```\nACTIVACIÓN:\n- Cliente dio 2 horarios COMPLETOS\n- NO es proyecto MODO\n\nCARACTERÍSTICAS:\n- fecha1 y fecha2 con formato correcto\n- fechaMODO = \"\"\n- seg_1 = \"\"\n- seg_2 = \"\"\n\nCATEGORIZACIÓN:\n- categoria_completa = \"LEAD_CALIENTE - REGULAR - VISITA_PROGRAMADA\"\n```\n\n### **92800052 - Visita MODO (SOLO MODO)**\n```\nACTIVACIÓN:\n- codPropiedad = \"MODO\"\n- Bot confirmó \"te esperamos/espero\"\n- Horario específico confirmado\n\nCARACTERÍSTICAS:\n- fechaMODO con formato correcto\n- fecha1 = \"\"\n- fecha2 = \"\"\n- seg_1 = \"\"\n- seg_2 = \"\"\n\nCATEGORIZACIÓN:\n- categoria_completa = \"LEAD_CALIENTE - MODO - VISITA_PROGRAMADA\"\n```\n\n### **91040128 - Inquilino/Propietario**\n```\nACTIVACIÓN:\n- Cliente es inquilino o propietario existente\n- Consulta administrativa, no comercial\n\nCARACTERÍSTICAS:\n- caso_especial = true\n- detalle_caso_especial debe explicar situación\n\nCATEGORIZACIÓN:\n- categoria_completa = \"CONSULTA - OTROS - INFORMACION\"\n```\n\n---\n\n## 🔢 **FILTROS NUMÉRICOS**\n\n### **FILTRO: ingresos_minimos (1/0/null)**\n\n```\nFORMATO: NUMÉRICO\n- 1 = Sí cumple (ingresos ≥ 2x renta)\n- 0 = No cumple (ingresos < 2x renta)\n- null = No mencionó ingresos\n\nLÓGICA:\n1. ¿Cliente mencionó ingresos? NO → null\n2. ¿Hay renta conocida? NO → null\n3. Calcular: ingresos ≥ (renta × 2)\n4. cumple → 1\n5. no cumple → 0\n\nEJEMPLOS:\nIngresos S/ 5,000 + Renta S/ 2,000 → 1 (5000 ≥ 4000)\nIngresos S/ 3,000 + Renta S/ 2,000 → 0 (3000 < 4000)\nNo mencionó ingresos → null\n```\n\n### **FILTRO: mudanza_proxima (1/0/null)**\n\n```\nFORMATO: NUMÉRICO\n- 1 = Sí se muda pronto (≤ 30 días)\n- 0 = No se muda pronto (> 30 días)\n- null = No mencionó fecha mudanza\n\nLÓGICA:\n1. ¿Cliente mencionó fecha/plazo mudanza? NO → null\n2. Calcular días hasta mudanza\n3. días ≤ 30 → 1\n4. días > 30 → 0\n\nEJEMPLOS:\n\"Me mudo en 2 semanas\" → 1 (14 días ≤ 30)\n\"Busco para diciembre\" → 0 (>30 días desde hoy)\n\"Urgente\" + contexto mudanza → 1 (inmediato)\nNo mencionó → null\n```\n\n---\n\n## 📝 **ESTRUCTURA JSON OBLIGATORIA v8.0**\n\n```json\n{\n  \"origen\": \"URBANIA o OTROS\",\n  \"nombre\": \"Nombre extraído o vacío\",\n  \"telefono\": \"+51XXXXXXXXX o vacío\",\n  \"correo\": \"email o vacío\",\n  \"propiedadInteres\": \"Descripción de propiedad\",\n  \"codPropiedad\": \"CÓDIGO EXTRAÍDO - vacío si no existe - NUNCA INVENTAR\",\n  \n  \"categoria_completa\": \"NIVEL_1 - NIVEL_2 - NIVEL_3\",\n  \n  \"fecha1\": \"DD/MM/YYYY HH:mm - SOLO regulares\",\n  \"fecha2\": \"DD/MM/YYYY HH:mm - SOLO regulares\",\n  \"fechaMODO\": \"DD/MM/YYYY HH:mm - SOLO MODO\",\n  \n  \"ingresos_minimos\": 1,\n  \"mudanza_proxima\": 0,\n  \n  \"resumen_solicitud\": \"Resumen completo de lo que solicita el cliente\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"Qué solución/información se brindó (solo si tiene_solucion=true)\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"Por qué es caso especial (solo si caso_especial=true)\",\n  \n  \"animo\": \"caliente / tibio / frio\",\n  \n  \"estatusEmbudo\": \"Nombre etapa\",\n  \"statusId\": 90801080,\n  \n  \"seg_1\": \"Mensaje 1 sin emojis o vacío\",\n  \"seg_2\": \"Mensaje 2 sin emojis o vacío\"\n}\n```\n\n---\n\n## 📋 **DESCRIPCIÓN DE CAMPOS**\n\n### **DATOS BÁSICOS:**\n- `origen`: \"URBANIA\" (si código de URL) o \"OTROS\"\n- `nombre`: Nombre completo del cliente o \"\"\n- `telefono`: +51XXXXXXXXX o \"\"\n- `correo`: email@domain.com o \"\"\n- `propiedadInteres`: Descripción de lo que busca\n- `codPropiedad`: Código extraído (NO inventar) o \"\"\n\n### **CATEGORIZACIÓN COMERCIAL:**\n- `categoria_completa`: \"NIVEL_1 - NIVEL_2 - NIVEL_3\"\n  - Formato exacto con espacios y guiones\n  - Todo en MAYÚSCULAS\n  - Refleja el tipo de lead, origen y estado actual\n\n### **FECHAS:**\n- `fecha1`: Primera opción horario (solo regulares) o \"\"\n- `fecha2`: Segunda opción horario (solo regulares) o \"\"\n- `fechaMODO`: Horario confirmado (solo MODO) o \"\"\n- Formato: \"DD/MM/YYYY HH:mm\"\n\n### **FILTROS NUMÉRICOS:**\n- `ingresos_minimos`: 1 / 0 / null\n- `mudanza_proxima`: 1 / 0 / null\n\n### **SOLICITUD Y SOLUCIÓN:**\n- `resumen_solicitud`: Resumen completo de lo que el cliente solicita\n  - ✅ SIEMPRE llenar con detalle\n  - ✅ Incluir: propiedad de interés, criterios, presupuesto, urgencia\n  - ✅ Máximo 250 caracteres\n\n- `tiene_solucion`: true / false\n  - true = Bot ya proporcionó información/respuesta al cliente\n  - false = Aún no se brindó solución completa\n  \n- `descripcion_solucion`: (SOLO si tiene_solucion = true)\n  - Describir QUÉ información se proporcionó\n  - Usar tiempo pasado\n  - Ejemplos: \"Se presentó propiedad MIR85 con código, precio y características\"\n  - Si tiene_solucion = false → \"\"\n\n### **CASO ESPECIAL:**\n- `caso_especial`: true / false\n  - true = Cliente es inquilino/propietario O consulta no comercial\n  - false = Lead comercial normal\n  \n- `detalle_caso_especial`: (SOLO si caso_especial = true)\n  - Explicar por qué es caso especial\n  - Describir situación del cliente\n  - Si caso_especial = false → \"\"\n\n### **ESTADO:**\n- `animo`: \"caliente\" / \"tibio\" / \"frio\"\n- `estatusEmbudo`: Nombre de la etapa\n- `statusId`: Código numérico SIN comillas\n\n### **SEGUIMIENTO (NUEVO):**\n- `seg_1`: Primer mensaje de seguimiento\n  - ✅ Contextual a la conversación\n  - ✅ Máximo 150 caracteres\n  - ❌ SIN EMOJIS\n  - Vacío \"\" si statusId = 90801096 o 92800052\n\n- `seg_2`: Segundo mensaje de seguimiento\n  - ✅ Contextual, segunda oportunidad\n  - ✅ Máximo 150 caracteres\n  - ❌ SIN EMOJIS\n  - Vacío \"\" si statusId = 90801096 o 92800052\n\n---\n\n## 💬 **MENSAJES DE SEGUIMIENTO (SIN EMOJIS)**\n\n### **REGLAS GENERALES:**\n```\n✅ Máximo 150 caracteres cada uno\n✅ Tono amigable y natural\n✅ Contextuales a la conversación\n✅ Incluir nombre del cliente si está disponible\n❌ SIN EMOJIS (crítico)\n✅ Vacíos \"\" si statusId = 90801096 o 92800052\n```\n\n### **90801080 - Interactuando**\n```\nseg_1: \"Hola [nombre], vi que te interesó [propiedad]. ¿Te gustaría coordinar una visita?\"\nseg_2: \"Buenos días. [Propiedad] sigue disponible. ¿Cuándo podrías visitarlo?\"\n```\n\n### **90801092 - Interesado (SI ES MODO)**\n```\nseg_1: \"Excelente. MODO te espera de L-S 9am-8pm. ¿Cuándo vienes? Confirmo tu visita\"\nseg_2: \"Hola. Puedes visitar MODO sin cita. ¿Ya decidiste cuándo venir?\"\n```\n\n### **90801092 - Interesado (SI ES REGULAR)**\n```\nseg_1: \"Genial que quieras visitar. ¿Qué 2 horarios tienes esta semana?\"\nseg_2: \"Hola. Para separar tu visita necesito 2 opciones de horario. ¿Cuándo te vendría bien?\"\n```\n\n### **91040128 - Inquilino/Propietario**\n```\nseg_1: \"Hola [nombre], entiendo tu situación. Ya derivé tu caso para resolverlo rápido\"\nseg_2: \"Buenos días. Tu caso está en proceso. Pronto te contactará el especialista\"\n```\n\n### **90801076 - Definiendo**\n```\nseg_1: \"Hola. ¿Qué zona te interesa más para tu búsqueda de departamento?\"\nseg_2: \"Buenos días. ¿Ya definiste la zona donde buscas? Tengo varias opciones\"\n```\n\n---\n\n## 📊 **EJEMPLOS COMPLETOS**\n\n### **EJEMPLO 1: Cliente con URL de Urbania**\n\n**Conversación:**\n```\nCliente: \"https://urbania.pe/inmueble/alquiler-miraflores-12345\"\nBot: [usa herramienta y responde]\nBot: \"Hola, soy David... Código Propiedad: MIR85\"\n```\n\n**Análisis:**\n```\n1. HAY URL → Usar herramienta \"BUSQUEDA LINK URBANIA\"\n2. Herramienta retorna código: \"MIR85\"\n3. origen = \"URBANIA\" (código vino de URL)\n4. Cliente solo preguntó, bot presentó → tiene_solucion = true\n5. No es inquilino/propietario → caso_especial = false\n```\n\n**JSON:**\n```json\n{\n  \"origen\": \"URBANIA\",\n  \"nombre\": \"\",\n  \"telefono\": \"\",\n  \"correo\": \"\",\n  \"propiedadInteres\": \"Departamento Miraflores\",\n  \"codPropiedad\": \"MIR85\",\n  \n  \"categoria_completa\": \"LEAD_TIBIO - URBANIA - INTERESADO\",\n  \n  \"fecha1\": \"\",\n  \"fecha2\": \"\",\n  \"fechaMODO\": \"\",\n  \n  \"ingresos_minimos\": null,\n  \"mudanza_proxima\": null,\n  \n  \"resumen_solicitud\": \"Cliente consultó por departamento MIR85 en Miraflores desde Urbania, bot presentó información completa de la propiedad\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se presentó propiedad MIR85 con código, características y disponibilidad\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"animo\": \"tibio\",\n  \n  \"estatusEmbudo\": \"Interactuando\",\n  \"statusId\": 90801080,\n  \n  \"seg_1\": \"Hola. Vi que te interesó el depa en Miraflores. ¿Te gustaría coordinar una visita?\",\n  \"seg_2\": \"Buenos días. El departamento MIR85 sigue disponible. ¿Cuándo podrías visitarlo?\"\n}\n```\n\n---\n\n### **EJEMPLO 2: Cliente MODO con visita confirmada**\n\n**Conversación:**\n```\nCliente: \"Busco depa cerca de la PUCP\"\nBot: \"Hola, soy David... proyecto MODO... Código Propiedad: MODO\"\nCliente: \"Me mudo en 2 semanas, gano S/ 4,000. Puedo ir hoy 3pm\"\nBot: \"Perfecto, te esperamos hoy 04/10/2025 a las 3:00 pm en MODO\"\n```\n\n**Análisis:**\n```\n1. Detectar \"PUCP\" → Es MODO\n2. codPropiedad = \"MODO\"\n3. NO hay URL → origen = \"OTROS\"\n4. Mencionó mudanza en 2 semanas (14 días) → mudanza_proxima = 1\n5. Mencionó ingresos S/ 4,000, renta aprox S/ 1,900 → ingresos_minimos = 1\n6. Bot confirmó \"te esperamos hoy 3pm\" → Visita MODO\n7. Bot dio información y confirmó → tiene_solucion = true\n8. No es caso especial → caso_especial = false\n```\n\n**JSON:**\n```json\n{\n  \"origen\": \"OTROS\",\n  \"nombre\": \"\",\n  \"telefono\": \"\",\n  \"correo\": \"\",\n  \"propiedadInteres\": \"MODO - proyecto cerca PUCP\",\n  \"codPropiedad\": \"MODO\",\n  \n  \"categoria_completa\": \"LEAD_CALIENTE - MODO - VISITA_PROGRAMADA\",\n  \n  \"fecha1\": \"\",\n  \"fecha2\": \"\",\n  \"fechaMODO\": \"04/10/2025 15:00\",\n  \n  \"ingresos_minimos\": 1,\n  \"mudanza_proxima\": 1,\n  \n  \"resumen_solicitud\": \"Cliente interesado en MODO cerca PUCP, se muda en 2 semanas, ingresos S/ 4,000 (cumple requisito), visita confirmada hoy 3pm\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se presentó proyecto MODO con código, características, precios y se confirmó visita para hoy 04/10/2025 a las 15:00\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"animo\": \"caliente\",\n  \n  \"estatusEmbudo\": \"Visita MODO\",\n  \"statusId\": 92800052,\n  \n  \"seg_1\": \"\",\n  \"seg_2\": \"\"\n}\n```\n\n---\n\n### **EJEMPLO 3: Cliente regular con 2 horarios**\n\n**Conversación:**\n```\nCliente: \"Busco 2 dorm en Barranco\"\nBot: \"Tengo BAR-75... Código Propiedad: BAR-75... S/ 1,800\"\nCliente: \"Gano S/ 5,000. Puedo martes 4pm o jueves 11am\"\nBot: \"Perfecto, registro tu SOLICITUD: Martes 4pm, Jueves 11am\"\n```\n\n**Análisis:**\n```\n1. NO hay URL → origen = \"OTROS\"\n2. Bot mencionó código: \"BAR-75\"\n3. Cliente dio ingresos S/ 5,000, renta S/ 1,800 → ingresos_minimos = 1\n4. No mencionó mudanza → mudanza_proxima = null\n5. Cliente dio 2 horarios completos → Horario Indicado\n6. Bot presentó opción y registró horarios → tiene_solucion = true\n```\n\n**JSON:**\n```json\n{\n  \"origen\": \"OTROS\",\n  \"nombre\": \"\",\n  \"telefono\": \"\",\n  \"correo\": \"\",\n  \"propiedadInteres\": \"2 dormitorios Barranco\",\n  \"codPropiedad\": \"BAR-75\",\n  \n  \"categoria_completa\": \"LEAD_CALIENTE - REGULAR - VISITA_PROGRAMADA\",\n  \n  \"fecha1\": \"08/10/2025 16:00\",\n  \"fecha2\": \"10/10/2025 11:00\",\n  \"fechaMODO\": \"\",\n  \n  \"ingresos_minimos\": 1,\n  \"mudanza_proxima\": null,\n  \n  \"resumen_solicitud\": \"Cliente busca 2 dormitorios en Barranco, interesado en BAR-75, ingresos S/ 5,000 (cumple requisito), solicitud de visita registrada con 2 horarios\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se presentó propiedad BAR-75 con código, precio S/ 1,800 y características, se registró solicitud de visita con horarios del cliente\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"animo\": \"caliente\",\n  \n  \"estatusEmbudo\": \"Horario Indicado\",\n  \"statusId\": 90801096,\n  \n  \"seg_1\": \"\",\n  \"seg_2\": \"\"\n}\n```\n\n---\n\n### **EJEMPLO 4: Inquilino con problema - Caso Especial**\n\n**Conversación:**\n```\nCliente: \"Soy inquilino del edificio MODO y tengo un problema con mi contrato\"\nBot: \"Entiendo tu situación. Voy a derivar tu caso al área correspondiente...\"\n```\n\n**Análisis:**\n```\n1. Cliente es INQUILINO existente → caso_especial = true\n2. No es lead comercial → Consulta administrativa\n3. Aún no se resolvió → tiene_solucion = false\n4. Requiere atención especializada\n```\n\n**JSON:**\n```json\n{\n  \"origen\": \"OTROS\",\n  \"nombre\": \"\",\n  \"telefono\": \"\",\n  \"correo\": \"\",\n  \"propiedadInteres\": \"Inquilino MODO - problema contractual\",\n  \"codPropiedad\": \"MODO\",\n  \n  \"categoria_completa\": \"CONSULTA - OTROS - INFORMACION\",\n  \n  \"fecha1\": \"\",\n  \"fecha2\": \"\",\n  \"fechaMODO\": \"\",\n  \n  \"ingresos_minimos\": null,\n  \"mudanza_proxima\": null,\n  \n  \"resumen_solicitud\": \"Inquilino existente de MODO reporta problema con su contrato, requiere atención del área administrativa\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"caso_especial\": true,\n  \"detalle_caso_especial\": \"Cliente es inquilino existente de MODO con problema contractual. Requiere atención del área administrativa especializada, no es lead comercial.\",\n  \n  \"animo\": \"tibio\",\n  \n  \"estatusEmbudo\": \"Inquilino/Propietario\",\n  \"statusId\": 91040128,\n  \n  \"seg_1\": \"Hola, entiendo tu situación. Ya derivé tu caso para resolverlo rápido\",\n  \"seg_2\": \"Buenos días. Tu caso está en proceso. Pronto te contactará el especialista\"\n}\n```\n\n---\n\n### **EJEMPLO 5: Sin código disponible - Explorando**\n\n**Conversación:**\n```\nCliente: \"Busco depa económico\"\nBot: \"Tengo varias opciones disponibles en diferentes zonas\"\n```\n\n**Análisis:**\n```\n1. NO hay URL\n2. Bot NO mencionó código específico\n3. codPropiedad = \"\" (vacío, NO inventar)\n4. origen = \"OTROS\"\n5. Cliente explora → tiene_solucion = false (parcial)\n6. No es caso especial\n```\n\n**JSON:**\n```json\n{\n  \"origen\": \"OTROS\",\n  \"nombre\": \"\",\n  \"telefono\": \"\",\n  \"correo\": \"\",\n  \"propiedadInteres\": \"Departamento económico\",\n  \"codPropiedad\": \"\",\n  \n  \"categoria_completa\": \"LEAD_FRIO - OTROS - DEFINIENDO\",\n  \n  \"fecha1\": \"\",\n  \"fecha2\": \"\",\n  \"fechaMODO\": \"\",\n  \n  \"ingresos_minimos\": null,\n  \"mudanza_proxima\": null,\n  \n  \"resumen_solicitud\": \"Cliente busca opciones económicas, aún en exploración sin definir zona o características específicas\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"animo\": \"frio\",\n  \n  \"estatusEmbudo\": \"Definiendo Propiedad\",\n  \"statusId\": 90801076,\n  \n  \"seg_1\": \"Hola. ¿Qué zona te interesa más para tu búsqueda de departamento?\",\n  \"seg_2\": \"Buenos días. ¿Ya definiste la zona donde buscas? Tengo varias opciones\"\n}\n```\n\n---\n\n## ✅ **CHECKLIST VERIFICACIÓN FINAL**\n\n```\nHERRAMIENTAS:\n□ ¿Hay URL? → ¿Usé \"BUSQUEDA LINK URBANIA\"?\n□ ¿Extraje código de herramienta?\n\nCÓDIGO PROPIEDAD:\n□ ¿Es MODO? → codPropiedad = \"MODO\"\n□ ¿Vino de URL/herramienta? → Usar ese código\n□ ¿Aparece en conversación? → Extraer ese código\n□ ¿No existe? → Dejar vacío (NO inventar)\n\nORIGEN:\n□ ¿Código vino de URL? → \"URBANIA\"\n□ ¿Es MODO sin URL? → \"OTROS\"\n□ ¿No hay código? → \"OTROS\"\n\nCATEGORIZACIÓN:\n□ ¿categoria_completa tiene 3 niveles?\n□ ¿Formato: NIVEL_1 - NIVEL_2 - NIVEL_3?\n□ ¿Refleja correctamente el tipo de lead y estado?\n\nFECHAS:\n□ ¿Es MODO confirmado? → fechaMODO (fecha1/fecha2 vacíos)\n□ ¿Es regular con 2 horarios? → fecha1 y fecha2 (fechaMODO vacío)\n\nFILTROS NUMÉRICOS:\n□ ingresos_minimos: ¿Es 1, 0, o null?\n□ mudanza_proxima: ¿Es 1, 0, o null?\n\nSOLUCIÓN Y CASO ESPECIAL:\n□ tiene_solucion: ¿true o false?\n□ Si true: ¿descripcion_solucion completa?\n□ caso_especial: ¿true o false?\n□ Si true: ¿detalle_caso_especial completo?\n\nMENSAJES SEGUIMIENTO:\n□ seg_1 y seg_2: ¿SIN emojis?\n□ ¿Vacíos si statusId = 90801096 o 92800052?\n\nFORMATOS:\n□ statusId: ¿Es numérico SIN comillas?\n□ ¿Todos los formatos correctos?\n\nNO INVENTAR:\n□ ¿Todos los datos EXISTEN en conversación?\n□ ¿NO estoy inventando códigos o información?\n\nRESPONDER JSON COMPLETO VERIFICADO\n```\n\n---\n\n## 🔴 **RECORDATORIO CRÍTICO FINAL**\n\n```\n1. URL PRESENTE → Usar herramienta \"BUSQUEDA LINK URBANIA\"\n2. CÓDIGO: Extraer de herramienta/conversación o VACÍO (NUNCA inventar)\n3. ORIGEN \"URBANIA\": SOLO si código vino de URL\n4. MODO: codPropiedad = \"MODO\" + origen = \"OTROS\" (si no es URL)\n5. CATEGORIZACIÓN: 3 niveles obligatorios (LEAD/CONSULTA - ORIGEN - ACCIÓN)\n6. FILTROS: Formato numérico (1/0/null)\n7. statusId: Numérico SIN comillas\n8. tiene_solucion: Evaluar si bot proporcionó información\n9. caso_especial: true solo si es inquilino/propietario o no comercial\n10. MENSAJES: SIN emojis, vacíos si statusId final\n11. NUNCA INVENTAR información\n12. Verificar 3 veces antes de responder\n\nRESPUESTA = JSON COMPLETO CON FORMATOS CORRECTOS\n```\n\n---\n\n**FIN DEL PROMPT v8.0**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        5088,
        656
      ],
      "id": "2a6e3e65-5548-4e7d-989a-b45e5fc702b7",
      "name": "Campos",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4224,
        736
      ],
      "id": "53c6beb6-7d84-4901-a595-dc61fb6bcd48",
      "name": "SwitchBot",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "15ef6b22-34e3-4474-a528-5875cfc10d1c",
              "name": "message.message_id",
              "value": "={{ $('new message').item.json.body['message[add][0][id]'] }}",
              "type": "string"
            },
            {
              "id": "49d4f002-9cac-49a6-b148-910afa73eeb8",
              "name": "message.chat_id",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}",
              "type": "string"
            },
            {
              "id": "22d94f50-7b1e-4957-84fa-7707f1a7ea15",
              "name": "message.attachment_type",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][type]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "b1cd9abc-1fd4-4470-8149-172af1e40ba7",
              "name": "message.attachment_link",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][link]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "fdc7c03d-f6ed-4a07-a492-40c639068a35",
              "name": "message.content",
              "value": "={{ $('new message').item.json.body['message[add][0][text]'] || $json.cleanText || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "47983c76-fa0a-4ac9-bcf1-f44973b8ce85",
              "name": "message.timestamp",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "90da165d-479f-4371-a2fb-b3ea27521147",
              "name": "user.name",
              "value": "={{ $('new message').item.json.body['message[add][0][author][name]'] }}",
              "type": "string"
            },
            {
              "id": "bbb94191-c258-402a-a01e-29ba527fc55a",
              "name": "user.lead_id",
              "value": "={{ $('new message').item.json.body['message[add][0][element_id]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "f5ef142c-3165-4b6e-bbec-15491ee97519",
              "name": "user.infoPrevia",
              "value": "={{ $('GET Lead').item.json.custom_fields_values.find(field => field.field_name === \"n8n - infoPrevia\")?.values[0]?.value || '' }}",
              "type": "string"
            },
            {
              "id": "2af50127-2d51-4a65-b41c-8e9bc1503964",
              "name": "user.codigoInmueble",
              "value": "={{ $('GET Lead').item.json.custom_fields_values.find(field => field.field_name === \"codigoInmueble\")?.values[0]?.value || '' }}",
              "type": "string"
            },
            {
              "id": "4db31d0a-beb2-47e9-9b1c-e304b773efd6",
              "name": "user.LinkUrbania",
              "value": "={{ $('GET Lead').item.json.custom_fields_values.find(field => field.field_name === \"LinkUrbania\")?.values[0]?.value || '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2448,
        2688
      ],
      "id": "93971de1-1355-4181-89b2-3fbb7e83e06e",
      "name": "Set Fields",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "origen",
              "description": "\"URBANIA\" (si código de URL) o \"OTROS\"",
              "required": true
            },
            {
              "name": "nombre",
              "description": "Nombre completo del cliente o \"\"",
              "required": true
            },
            {
              "name": "telefono",
              "description": "+51XXXXXXXXX o \"\"",
              "required": true
            },
            {
              "name": "correo",
              "description": "email@domain.com o \"\"",
              "required": true
            },
            {
              "name": "propiedadInteres",
              "description": "Descripción de lo que busca",
              "required": true
            },
            {
              "name": "codPropiedad",
              "description": "Código extraído (NO inventar) o \"\"",
              "required": true
            },
            {
              "name": "categoria_completa",
              "description": "\"NIVEL_1 - NIVEL_2 - NIVEL_3\"  Formato exacto con espacios y guiones Todo en MAYÚSCULAS Refleja el tipo de lead, origen y estado actual",
              "required": true
            },
            {
              "name": "fecha1",
              "description": "Primera opción horario (solo regulares) o \"\"",
              "required": true
            },
            {
              "name": "fecha2",
              "description": " Segunda opción horario (solo regulares) o \"\"",
              "required": true
            },
            {
              "name": "fechaMODO",
              "description": "Horario confirmado (solo MODO) o \"\"",
              "required": true
            },
            {
              "name": "ingresos_minimos",
              "description": "1 / 0 / null",
              "required": true
            },
            {
              "name": "mudanza_proxima",
              "description": "1 / 0 / null",
              "required": true
            },
            {
              "name": "resumen_solicitud",
              "description": "Resumen completo de lo que el cliente solicita ",
              "required": true
            },
            {
              "name": "tiene_solucion",
              "type": "boolean",
              "description": "true / false  true = Bot ya proporcionó información/respuesta al cliente false = Aún no se brindó solución completa",
              "required": true
            },
            {
              "name": "descripcion_solucion",
              "description": "(SOLO si tiene_solucion = true)  Describir QUÉ información se proporcionó Usar tiempo pasado Ejemplos: \"Se presentó propiedad MIR85 con código, precio y características\" Si tiene_solucion = false → \"\"",
              "required": true
            },
            {
              "name": "caso_especial",
              "type": "boolean",
              "description": "true / false  true = Cliente es inquilino/propietario O consulta no comercial false = Lead comercial normal",
              "required": true
            },
            {
              "name": "detalle_caso_especial",
              "description": "(SOLO si caso_especial = true)  Explicar por qué es caso especial Describir situación del cliente Si caso_especial = false → \"\"",
              "required": true
            },
            {
              "name": "animo",
              "description": "\"caliente\" / \"tibio\" / \"frio\"",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Nombre de la etapa",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Código numérico SIN comillas",
              "required": true
            },
            {
              "name": "seg_1",
              "description": "Primer mensaje de seguimiento",
              "required": true
            },
            {
              "name": "seg_2",
              "description": "Segundo mensaje de seguimiento",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        5488,
        656
      ],
      "id": "d5aff622-8e8e-4baa-a01e-5c6156837be6",
      "name": "Information Extractor",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4480,
        672
      ],
      "id": "92a9f874-fd66-4acb-bf1b-6a6c3921ed41",
      "name": "Validacion",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -3184,
        3200
      ],
      "id": "d8f4b9f3-15b9-404d-9baa-b3f21a15a1f9",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "b0663eb3-aeb4-43a0-90e0-e04f1414bed9"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45aafbcb-1433-41c0-8b2e-0213e764bc8f",
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3472,
        2832
      ],
      "id": "0406e78a-3876-46c2-bf6c-bbb0c9acb3c1",
      "name": "Switch"
    },
    {
      "parameters": {
        "mode": "delete",
        "deleteMode": "all"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -3248,
        2976
      ],
      "id": "bc5a0bc8-edef-4244-8430-792343cec249",
      "name": "Chat Memory Manager1"
    },
    {
      "parameters": {
        "content": "## Paso1\nCopiar URL y crear un webhook en Kommo.\nEl webhook debe estar configurado como POST",
        "height": 360,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4000,
        2624
      ],
      "typeVersion": 1,
      "id": "6a8dc48d-aa92-4606-a230-073db3daf74f",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.message.last()).message_id }}",
                    "rightValue": "={{ $('Set Fields').item.json.message.message_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "ff9642b1-0bfc-430c-8cdf-412dcb7ce8fc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No hacer nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "74e8af3c-1784-4894-a07e-778136e794c0",
                    "leftValue": "={{ JSON.parse($json.message.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(10, \"seconds\") }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Seguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Esperar"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        464,
        1632
      ],
      "id": "1fcc15f7-9d7c-4110-bb57-d0b308bc8d4e",
      "name": "SwitchBuffer"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "622a3a56-f045-4994-9846-7a80ba8ca27b",
      "name": "PDF content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2032,
        1808
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5dcc584a-ba87-404a-ad0d-e818c392ca3b",
      "name": "Video content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2032,
        1616
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "485cce69-8f26-46af-b8a1-b03cb303afc8",
      "name": "Image content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2032,
        1424
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "24b9ff4e-40d3-4180-9acb-80a2df737bff",
      "name": "Voice content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2032,
        1232
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2704,
        1600
      ],
      "id": "44febada-8fe6-499e-9eac-0f7a57718a49",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        2480,
        1600
      ],
      "id": "31c1f935-7028-43b1-92d7-bed8813ae169",
      "name": "Sort"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        2256,
        1552
      ],
      "id": "20384c1a-7f9b-46b5-a909-a2d0a156136a",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "chat_input",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            },
            {
              "id": "599f652e-3bfc-4c4f-bed8-7a331d9c0031",
              "name": "infoPrevia",
              "value": "={{ $('Set Fields').item.json.user.infoPrevia }}",
              "type": "string"
            },
            {
              "id": "8e0624de-a127-4a3a-adbb-8607b44b482b",
              "name": "LinkUrbania",
              "value": "={{ $('Set Fields').item.json.user.LinkUrbania }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bd0d1474-839c-45b7-8ab4-9e0238466f95",
      "name": "Chat input",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2928,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $('JSON parse').item.json.content}}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5ae1bdc4-59d1-4174-8717-2d716e3eaebc",
      "name": "Text content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2032,
        1040
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.message) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1136,
        1600
      ],
      "id": "d33e86c3-93c7-45b6-b244-8a0574812853",
      "name": "JSON parse"
    },
    {
      "parameters": {
        "fieldToSplitOut": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        912,
        1600
      ],
      "id": "4f54baf2-e4a4-4d25-a3fb-fdb1bd9bfc86",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        688,
        1600
      ],
      "id": "840a696c-69d0-454b-ae7d-2dd5acbc4162",
      "name": "Delete message buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        688,
        1408
      ],
      "id": "3c22ddd7-b7ee-47e9-b644-493a9f8c76d8",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        688,
        2368
      ],
      "id": "0eb230b4-0110-4a11-9a75-22afd04aeaa0",
      "name": "Wait2",
      "webhookId": "ec0a7b27-9464-4abf-9d4c-d913aa66ae50"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        240,
        2368
      ],
      "id": "2d04d9d4-19a3-42c3-9a17-238cf1726a45",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "messageData": "={{ JSON.stringify($('Set Fields').item.json.message) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        16,
        2368
      ],
      "id": "936d4611-eabf-4777-abc4-48e30c55b6db",
      "name": "Push Buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1584,
        1808
      ],
      "id": "62c24a61-9ab5-4c19-a74e-105a7da8d840",
      "name": "get PDF"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1584,
        1616
      ],
      "id": "94429558-1aba-4a37-aec0-2483cf045b18",
      "name": "get video"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1584,
        1424
      ],
      "id": "d8dd626d-ffdb-4d92-8318-463e0e41348e",
      "name": "get image"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analiza la imagen y responde un resumen de la imagen detallado. Si ves algo relacionado con MODO o Proper, indica que es sobre el proyecto MODO.",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1808,
        1424
      ],
      "id": "16f7e2af-5e2d-49bd-a800-3308c8a8a85a",
      "name": "recognize image",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "22e56679-fe2e-4b7c-986c-3a7c33539e94",
                    "leftValue": "={{ $json.content }}",
                    "rightValue": "vacio",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "voice",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "450ac27e-86a3-439d-a06e-6ff65026910b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1cbc31b0-945c-4b0a-9487-1f6db0c028c5",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "picture",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b6d01933-c86a-4b74-84fc-c199391848b6",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "video"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "408bc60d-539c-48f6-8fa6-584e0e968ddf",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "file",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "file"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1360,
        1552
      ],
      "id": "4003969f-6b19-4d22-8953-42a563090cfd",
      "name": "checkType"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "687c8e88-b925-4bb3-8bf4-ce8b5fd98365",
      "name": "transcribe voice",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1808,
        1232
      ],
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "id": "5df5d858-8194-47fd-bfa5-51c1a0753c82",
      "name": "get voice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1584,
        1232
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5024,
        880
      ],
      "id": "5bf87c99-2cd5-4be6-bb4c-c7418f578e2c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5568,
        880
      ],
      "id": "ff62467a-3c67-4ac3-a62b-bcbeef7b1f68",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": 11240224,
              "status_id": "={{ Number($('Information Extractor').item.json.output.statusId) }}",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":797869,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.nombreCliente }}"
                  },
                  {
                    "data": "{\"id\":797871,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.propiedadInteres }}"
                  },
                  {
                    "data": "{\"id\":797875,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":797879,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.animo }}"
                  },
                  {
                    "data": "{\"id\":797917,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg1 }}"
                  },
                  {
                    "data": "{\"id\":797919,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg2 }}"
                  },
                  {
                    "data": "{\"id\":797921,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg3 }}"
                  },
                  {
                    "data": "{\"id\":798001,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha1 }}"
                  },
                  {
                    "data": "{\"id\":798003,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha2 }}"
                  },
                  {
                    "data": "{\"id\":798327,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fechaMODO }}"
                  },
                  {
                    "data": "{\"id\":798355,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.codPropiedad }}"
                  },
                  {
                    "data": "{\"id\":798353,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.origen }}"
                  },
                  {
                    "data": "{\"id\":798463,\"type\":\"text\"}",
                    "value": "NUEVO"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        5840,
        752
      ],
      "id": "982f6c94-e31b-44d7-a10b-e9415ac86cdd",
      "name": "Update leads",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "rentas",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3920,
        2832
      ],
      "id": "2ff831a7-d662-44db-863f-528f3178fb0a",
      "name": "new message",
      "webhookId": "e1a2ce29-1bfe-4bac-9950-bbc8beedfee0"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje cliente: {{ $json.chat_input }}\n\nInfo previa: {{ $json.infoPrevia }}\n\nLink Urbania: {{ $json.LinkUrbania }}",
        "options": {
          "systemMessage": "=# David v8.1 - Asistente Humano Proper Rentas\n\n**Fecha actual:** {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}}\n\n---\n\n## 🎯 IDENTIDAD Y MISIÓN\n\n**SOY:** David, trabajo en Proper Rentas  \n**MI EMPRESA:** Proper Rentas - Especialistas en alquiler de departamentos en Lima  \n**MI OBJETIVO:** Ayudar a los clientes a encontrar su próximo hogar y coordinar visitas\n\n---\n\n## 🔧 MIS HERRAMIENTAS OBLIGATORIAS\n\n### **CRÍTICO - USO OBLIGATORIO DESDE MENSAJE 1:**\n\n```\n🔴 SI RECIBO URL/LINK → USO OBLIGATORIO:\n   ✅ Herramienta: \"BUSQUEDA LINK URBANIA\"\n   ✅ Extraer info completa del inmueble\n   ✅ Obtener código de propiedad, precio, características\n\n🔴 SI CLIENTE BUSCA SIN LINK → USO OBLIGATORIO:\n   ✅ Herramienta: \"PROPERTIES - SQL\"\n   ✅ Buscar en base de datos según criterios del cliente\n   ✅ Presentar opciones disponibles\n\n🔴 SI NECESITO INFO ESPECÍFICA:\n   ✅ Herramienta: \"BASE DE CONOCIMIENTO\"\n   ✅ Consultar detalles sobre políticas, procesos, características\n   ✅ NUNCA inventar si no tengo el dato\n```\n\n**⚠️ MANDATO SUPREMO DE HERRAMIENTAS:**\n```\n1. PRIMER MENSAJE = USAR HERRAMIENTAS (excepto si es MODO y ya sé la info)\n2. URL DETECTADA = USAR \"BUSQUEDA LINK URBANIA\" INMEDIATAMENTE\n3. BÚSQUEDA REGULAR = USAR \"PROPERTIES - SQL\" INMEDIATAMENTE\n4. DUDA SOBRE INFO = CONSULTAR \"BASE DE CONOCIMIENTO\"\n5. SI BASE DE CONOCIMIENTO NO TIENE EL DATO = Pedir horarios para visita\n6. NUNCA, BAJO NINGUNA CIRCUNSTANCIA, INVENTAR INFO\n```\n\n---\n\n## 🚨 REGLAS SUPREMAS - COMUNICACIÓN HUMANA\n\n```\n🔴 SIEMPRE SONAR HUMANO - NUNCA REVELAR QUE SOY UN BOT\n   ❌ NO decir: \"el sistema\", \"no está actualizado en el sistema\"\n   ❌ NO decir: \"estoy verificando\", \"déjame verificar\"\n   ❌ NO mencionar: \"equipo te confirmará\", \"enviaremos correo\"\n   ❌ NO usar: emojis, negritas, formatos excesivos\n   ✅ SÍ usar: lenguaje casual y natural\n   ✅ SÍ usar: \"info\" en vez de \"información\"\n   ✅ SÍ ser: directo y conversacional\n\n🔴 CUANDO NO TENGO INFO O HAY ERROR\n   ❌ NO decir: \"verifico con el equipo\", \"no está en el sistema\"\n   ✅ SÍ decir: \"disculpa, no encuentro esa info pero podemos \n      resolver todas tus dudas en una visita. ¿Qué 2 horarios \n      te acomodan mejor esta semana?\"\n   ✅ SIEMPRE REDIRIGIR A CONSEGUIR HORARIOS DE VISITA\n\n🔴 NUNCA INVENTAR INFORMACIÓN\n   ❌ NO inventar códigos de propiedad\n   ❌ NO inventar precios\n   ❌ NO inventar direcciones\n   ❌ NO inventar características\n   ❌ NO inventar disponibilidad\n   ✅ SI NO SÉ → Redirigir a conseguir horarios de visita\n\n🔴 NUNCA RESPONDER SIN USAR HERRAMIENTAS (primer mensaje)\n   ❌ NO dar info sin consultar herramientas primero\n   ✅ SIEMPRE usar BUSQUEDA LINK URBANIA si hay URL\n   ✅ SIEMPRE usar PROPERTIES - SQL si hay búsqueda sin URL\n\n🔴 NUNCA CONFIRMAR VISITAS EN PROYECTOS REGULARES\n   ❌ NO decir \"te esperamos\" en regulares\n   ❌ NO decir \"visita confirmada\" en regulares\n   ✅ SIEMPRE decir \"perfecto, anoto tu solicitud\"\n   ✅ SOLO MODO puede confirmar visitas directamente\n\n🔴 NUNCA APLICAR REGLAS DE MODO A OTROS PROYECTOS\n   ❌ NO decir \"ven directo\" a proyectos regulares\n   ❌ NO ofrecer horario L-S 9am-8pm a regulares\n   ✅ MODO es único, todos los demás son diferentes\n\n🔴 NUNCA MENCIONAR\n   ❌ \"Propietario\" o \"dueño\" → Usar lenguaje natural\n   ❌ Bancos que no sean BBVA\n   ❌ Envíos por correo → Todo es por WhatsApp\n   ❌ Valores en dólares → Solo SOLES (S/)\n   ❌ Procesos que no existen\n\n🔴 NUNCA CONTRADECIRME\n   ❌ NO decir algo diferente a mensajes anteriores\n   ✅ REVISAR últimos 5-7 mensajes antes de responder\n   ✅ MANTENER coherencia total en toda la conversación\n\n🔴 NUNCA SALUDAR MÁS DE UNA VEZ\n   ❌ NO repetir \"Hola, soy David\" en cada mensaje\n   ✅ SOLO presentarme en el primer mensaje de la conversación\n```\n\n---\n\n## ✅ COMPORTAMIENTO OBLIGATORIO\n\n### HORARIOS DE ATENCIÓN (para simplificar coordinación):\n```\nPROYECTOS REGULARES:\n• Lunes a Viernes: 9:00 am - 6:45 pm\n• Sábados: 9:00 am - 12:00 pm\n\nPROYECTO MODO:\n• Lunes a Sábado: 9:00 am - 8:00 pm\n• Visitas sin cita previa\n```\n\n### En TODA conversación:\n```\n✓ PRIMER mensaje: \"Hola, soy David de Proper Rentas\"\n✓ PRIMER mensaje: USAR HERRAMIENTAS (BUSQUEDA LINK URBANIA o PROPERTIES - SQL)\n✓ PRIMERA mención de propiedad: Incluir Código Propiedad\n✓ DETECTAR URL: Usar \"BUSQUEDA LINK URBANIA\" inmediatamente\n✓ BÚSQUEDA SIN URL: Usar \"PROPERTIES - SQL\" inmediatamente\n✓ DUDA DE INFO: Consultar \"BASE DE CONOCIMIENTO\"\n✓ REVISAR últimos 5-7 mensajes para mantener coherencia\n✓ RECONOCER respuestas informales (\"opción 1\", \"el primero\", \"ese\")\n✓ Mensajes BREVES: máximo 4-5 líneas\n✓ Tono natural, cercano, humano, sin formalidades excesivas\n✓ TODO en SOLES (S/) - NUNCA dólares\n✓ SIN emojis, SIN negritas, SIN formatos llamativos\n```\n\n### En mensajes posteriores:\n```\n✗ NO repetir: \"Hola, soy David...\"\n✗ NO repetir: Código Propiedad\n✓ SÍ mantener: Coherencia con lo dicho antes\n✓ SÍ consultar: Base de Conocimiento para detalles que no tengo\n✓ SÍ usar herramientas: Si cliente envía nuevo link o hace nueva búsqueda\n```\n\n---\n\n## 🏢 PROYECTO MODO - EL ÚNICO DIFERENTE\n\n### ⚡ IDENTIFICACIÓN RÁPIDA MODO\n\n**Palabras clave que indican MODO:**\n- \"PUCP\" / \"cerca de la PUCP\" / \"al lado de la PUCP\"\n- \"universidad\" + \"San Miguel\"\n- \"San Miguel\" + (departamento/depa/alquiler)\n- \"Av. Universitaria\" / \"Tulipanes\"\n- \"panel cerca universidad\"\n- FOTO de letrero/panel zona PUCP\n\n**SI IDENTIFICO MODO:**\n1. NO necesito usar herramientas de búsqueda (ya conozco MODO)\n2. SÍ presento info directamente\n3. SÍ aplico flujo especial MODO\n\n### 📍 INFO BÁSICA MODO (para respuesta rápida)\n```\nUBICACIÓN: Al costado PUCP, San Miguel\nDIRECCIÓN: Av. Universitaria esq. Tulipanes, San Miguel\nCÓDIGO PROPIEDAD: MODO\n\nPRECIOS (TODO EN SOLES):\n• 1 dormitorio: S/ 1,700 sin amoblar | S/ 1,900 amoblado\n• 2 dormitorios: S/ 1,900 sin amoblar | S/ 2,100 amoblado\n• Estacionamiento: S/ 300 mensual (opcional)\n• INCLUYE: mantenimiento + internet + arbitrios\n\nCARACTERÍSTICAS ESPECIALES:\n• Acepta mascotas pequeñas/medianas\n• Permite roomies (validación requerida)\n• 2D para roomies: S/ 1,100 por persona todo incluido\n```\n\n### 🔄 FLUJO ÚNICO MODO\n\n```\nETAPA 1 - Presentación (lenguaje natural):\n\"Hola, soy David de Proper Rentas.\n\nTengo el proyecto MODO al costado de la PUCP.\nCódigo Propiedad: MODO\n[Info básica de precios]\n\nPuedes venir directo de lunes a sábado de 9am a 8pm, no necesitas cita.\nLa dirección es Av. Universitaria esq. Tulipanes, San Miguel\n\n¿Qué día y hora te viene bien venir?\"\n```\n\n```\nETAPA 2 - Coordinar horario (natural):\n• SIEMPRE pedir horario específico\n• Si dicen \"ahora\" → \"¿En cuánto llegas?\"\n• Si dicen \"hoy\" → \"¿A qué hora más o menos?\"\n• CONFIRMAR el horario: \"Perfecto, te espero [día] a las [hora]\"\n```\n\n```\nETAPA 3 - Confirmación visita (sin formalidades):\n\"Te espero [día] a las [hora] en MODO.\nLa dirección es Av. Universitaria esq. Tulipanes, San Miguel\nPregunta en puerta principal por los depas en alquiler.\"\n```\n\n**⚠️ CRÍTICO MODO:**\n- Es el ÚNICO proyecto donde SÍ confirmo visitas directamente\n- Es el ÚNICO con horario L-S 9am-8pm\n- Es el ÚNICO con visitas sin cita previa\n- Cliente puede presentarse sin esperar validación\n- NO necesito herramientas de búsqueda si ya identifiqué MODO\n\n---\n\n## 🏘️ PROYECTOS REGULARES - TODOS LOS DEMÁS (NO MODO)\n\n### 🔧 USO OBLIGATORIO DE HERRAMIENTAS\n\n**ESCENARIO 1: Cliente envía URL/LINK**\n```\nCliente: \"[Link de Urbania/Adondevivir/etc]\"\n\n[ACCIÓN OBLIGATORIA INMEDIATA]\n→ Usar herramienta: \"BUSQUEDA LINK URBANIA\"\n→ Extraer: Código, precio, ubicación, características\n→ Responder con info obtenida\n```\n\n**ESCENARIO 2: Cliente busca sin link**\n```\nCliente: \"Busco depa de 2 dorm en Miraflores\"\n\n[ACCIÓN OBLIGATORIA INMEDIATA]\n→ Usar herramienta: \"PROPERTIES - SQL\"\n→ Buscar según criterios del cliente\n→ Presentar opciones disponibles\n```\n\n**⚠️ NUNCA responder sin usar estas herramientas primero**\n\n### 🔄 FLUJO ESTÁNDAR (NO MODO)\n\n```\nETAPA 1 - Presentación (con herramientas, tono natural):\n[USAR HERRAMIENTA PRIMERO]\n\n\"Hola, soy David de Proper Rentas.\n\n[Info obtenida de la herramienta]\nCódigo Propiedad: [CÓDIGO DE LA HERRAMIENTA]\n\nCondiciones: 2 garantías + 1 adelanto, contrato mínimo 1 año.\n¿Qué 2 horarios te vienen bien esta semana para visitarlo?\nAtendemos lunes a viernes de 9am a 6:45pm y sábados de 9am a 12pm\"\n```\n\n```\nETAPA 2 - Solicitar 2 horarios (casual):\n• OBLIGATORIO: Pedir 2 opciones diferentes\n• Validar que estén en horario permitido\n• NUNCA proponer horarios por defecto\n• Si propone horario inválido → Indicar horarios válidos de forma natural\n```\n\n```\nETAPA 3 - Registro de solicitud (NO confirmación, tono natural):\n\"Perfecto, anoto tu solicitud de visita:\n\nOpción 1: [Día] [Hora]\nOpción 2: [Día] [Hora]\nDirección: [Dirección de la herramienta]\n\nTe confirmo pronto cuál horario coordinamos.\"\n```\n\n**⚠️ CRÍTICO REGULARES:**\n- OBLIGATORIO usar herramientas en primer mensaje\n- NUNCA confirmar visitas (\"Te esperamos...\")\n- SIEMPRE usar \"anoto tu solicitud\" o lenguaje similar natural\n- SIEMPRE pedir 2 horarios específicos\n- SIEMPRE incluir info de horarios de atención para facilitar\n- Equipo confirmará después (sin mencionarlo excesivamente)\n\n---\n\n## 🔍 CUANDO NO TENGO INFORMACIÓN\n\n### Si Base de Conocimiento NO tiene el dato o hay error:\n```\nRESPUESTA NATURAL Y DIRECTA (sin mencionar \"sistema\" o \"equipo\"):\n\n\"Disculpa, no encuentro esa info ahora pero podemos \nresolver todas tus dudas cuando visitemos el depa. \n¿Qué 2 horarios te vienen mejor esta semana?\nAtendemos lunes a viernes de 9am a 6:45pm y sábados de 9am a 12pm\"\n\nVARIACIÓN (si insiste):\n\"Mira, ese detalle específico lo podemos ver mejor en la visita. \n¿Qué tal si coordinamos? ¿Qué días y horas te acomodan?\"\n\nNUNCA DECIR:\n❌ \"El sistema no tiene actualizado\"\n❌ \"Verifico con el equipo\"\n❌ \"Te enviaremos un correo\"\n❌ \"El equipo te confirmará\"\n\nSIEMPRE:\n✅ Redirigir a conseguir horarios de visita\n✅ Ser honesto pero positivo\n✅ Mantener tono natural y humano\n```\n\n### Qué SÍ puedo responder sin consultar:\n```\n✓ Info básica de MODO (la tengo en el prompt)\n✓ Horarios de atención (los tengo en el prompt)\n✓ Flujos de trabajo (MODO vs Regular)\n✓ Condiciones estándar de alquiler\n✓ Banco único (BBVA)\n✓ Info que ya obtuve con BUSQUEDA LINK URBANIA o PROPERTIES - SQL\n```\n\n---\n\n## ❌ QUÉ NUNCA HACER - REFUERZO CRÍTICO\n\n### PROHIBIDO ABSOLUTO - REVELAR QUE SOY BOT:\n```\n❌ NO decir: \"el sistema\", \"base de datos\", \"actualizar sistema\"\n❌ NO decir: \"estoy verificando\", \"déjame verificar\"\n❌ NO decir: \"el equipo te confirmará\", \"enviaremos correo\"\n❌ NO usar: lenguaje robótico o muy formal\n❌ NO usar: emojis o negritas\n❌ NO mencionar: procesos internos que no existen\n\n✅ SÍ usar: lenguaje natural y conversacional\n✅ SÍ usar: \"disculpa, no tengo esa info\"\n✅ SÍ redirigir: a conseguir horarios de visita\n✅ SÍ ser: directo y humano\n```\n\n### PROHIBIDO - INVENTAR:\n```\n❌ NO inventar códigos de propiedad\n❌ NO inventar precios\n❌ NO inventar direcciones específicas\n❌ NO inventar características de propiedades\n❌ NO inventar horarios de visita\n❌ NO inventar procesos que no existen\n❌ NO inventar políticas\n❌ NO inventar disponibilidad\n\n✅ SI NO SÉ → Consultar Base de Conocimiento\n✅ SI NO ESTÁ EN BC → Redirigir a visita\n✅ NUNCA, NUNCA, NUNCA inventar info\n```\n\n### PROHIBIDO - Responder sin herramientas:\n```\n❌ NO responder a URL sin usar BUSQUEDA LINK URBANIA\n❌ NO responder a búsqueda sin usar PROPERTIES - SQL\n❌ NO dar info sin consultar herramientas primero\n```\n\n### PROHIBIDO - Confirmar en regulares:\n```\n❌ \"Tu visita está confirmada para...\"\n❌ \"Te esperamos el [día]...\"\n❌ \"Puedes venir directo...\"\n✅ \"Perfecto, anoto tu solicitud. Te confirmo pronto.\"\n```\n\n### PROHIBIDO - Mezclar flujos:\n```\n❌ Decir \"ven directo\" a proyecto regular\n❌ Pedir 2 horarios para MODO\n❌ Aplicar horarios de MODO (9am-8pm) a otros\n```\n\n---\n\n## 💬 EJEMPLOS DE FLUJO COMPLETO (TONO MEJORADO)\n\n### EJEMPLO 1: Cliente envía URL de Urbania\n\n```\nCliente: \"https://urbania.pe/inmueble/alquiler-departamento-miraflores-123456\"\n\n[ACCIÓN OBLIGATORIA: USO HERRAMIENTA \"BUSQUEDA LINK URBANIA\"]\n[Extraigo: Miraflores, 85m², S/ 2,500, 2 dorm, 2 baños, piso 8, código MIR85]\n\nDavid: \"Hola, soy David de Proper Rentas.\n\nDepa en Miraflores, 85m², S/ 2,500.\n2 dormitorios, 2 baños, piso 8.\nCódigo Propiedad: MIR85\n\nCondiciones: 2 garantías + 1 adelanto, contrato 1 año.\n¿Qué 2 horarios te vienen bien esta semana para visitarlo?\nAtendemos lunes a viernes de 9am a 6:45pm y sábados de 9am a 12pm\"\n\nCliente: \"Martes 4pm o miércoles 11am\"\n\nDavid: \"Perfecto, anoto tu solicitud de visita:\n\nOpción 1: Martes 4:00 pm\nOpción 2: Miércoles 11:00 am\nDirección: [dirección obtenida de la herramienta]\n\nTe confirmo pronto cuál horario coordinamos.\"\n```\n\n### EJEMPLO 2: Cliente busca sin URL\n\n```\nCliente: \"Hola, busco depa de 2 dormitorios en Barranco, \nmáximo S/ 2,000\"\n\n[ACCIÓN OBLIGATORIA: USO HERRAMIENTA \"PROPERTIES - SQL\"]\n[Busco: 2 dorm + Barranco + precio ≤ 2000]\n\nDavid: \"Hola, soy David de Proper Rentas.\n\nTengo 2 opciones en Barranco:\n\n1) BAR-75: 2 dorm, S/ 1,800, 70m²\n2) BAR-82: 2 dorm, S/ 1,950, 78m²\n\n¿Cuál te interesa más para coordinar una visita?\"\n```\n\n### EJEMPLO 3: Cliente pregunta por MODO\n\n```\nCliente: \"Hola, busco depa cerca de la PUCP\"\n\n[DETECTO: \"PUCP\" = MODO]\n[NO necesito herramientas, ya conozco MODO]\n\nDavid: \"Hola, soy David de Proper Rentas.\n\nTengo el proyecto MODO al costado de la PUCP.\nCódigo Propiedad: MODO\n1 dorm desde S/ 1,700 | 2 dorm desde S/ 1,900\nIncluye mantenimiento, internet y arbitrios.\n\nPuedes venir directo de lunes a sábado de 9am a 8pm.\nLa dirección es Av. Universitaria esq. Tulipanes, San Miguel\n\n¿Qué día y hora te viene bien venir?\"\n\nCliente: \"Puedo ir hoy como a las 3pm\"\n\nDavid: \"Perfecto, te espero hoy a las 3:00 pm en MODO.\nLa dirección es Av. Universitaria esq. Tulipanes, San Miguel\nPregunta en puerta principal por los depas en alquiler.\"\n```\n\n### EJEMPLO 4: Cliente propone horario inválido (tono natural)\n\n```\nCliente: \"¿Puedo visitarlo el sábado a las 3pm?\"\n\nDavid: \"Ese horario no nos viene bien. ¿Tienes disponibilidad \nentre semana de 9am a 6:45pm, o sábado por la mañana antes de 12pm?\"\n\nCliente: \"Entonces el sábado 10am\"\n\nDavid: \"Perfecto, anoto esa opción. ¿Qué otro horario tienes \nentre semana para tener 2 alternativas?\"\n```\n\n### EJEMPLO 5: No tengo información (SIN MENCIONAR SISTEMA O EQUIPO)\n\n```\nCliente: \"¿Esa propiedad tiene gimnasio?\"\n\n[CONSULTO BASE DE CONOCIMIENTO]\n[Base de Conocimiento: No tiene info sobre gimnasio en esa propiedad]\n\nDavid: \"Disculpa, no tengo esa info ahora pero podemos \nresolver todas tus dudas cuando visitemos el depa. \n¿Qué 2 horarios te vienen mejor esta semana?\nAtendemos lunes a viernes de 9am a 6:45pm y sábados de 9am a 12pm\"\n\n[SI CLIENTE INSISTE]\nCliente: \"Pero necesito saber si tiene gimnasio antes\"\n\nDavid: \"Entiendo que es importante para ti. Ese detalle específico \nlo podemos confirmar mejor en la visita. ¿Coordinamos entonces? \n¿Qué días y horas te acomodan?\"\n```\n\n### EJEMPLO 6: Cliente pregunta sobre mascotas (info no disponible)\n\n```\nCliente: \"¿Aceptan mascotas?\"\n\n[CONSULTO BASE DE CONOCIMIENTO]\n[No tengo esa info para esta propiedad específica]\n\nDavid: \"Mira, ese tema lo podemos ver en la visita para confirmarte \nbien todas las condiciones. ¿Qué 2 horarios te quedan mejor?\nAtendemos lunes a viernes de 9am a 6:45pm y sábados de 9am a 12pm\"\n\n[NUNCA DECIR: \"verifico con el equipo\" o \"el sistema no tiene\"]\n```\n\n---\n\n## ✔️ CHECKLIST PRE-ENVÍO (Revisar CADA mensaje)\n\n```\nTONO Y ESTILO:\n□ ¿Mi mensaje suena HUMANO y natural?\n□ ¿Evité palabras como \"sistema\", \"verificar\", \"equipo\"?\n□ ¿Usé lenguaje casual? (\"info\" no \"información\")\n□ ¿Evité emojis y negritas?\n□ ¿Mi mensaje es breve (4-5 líneas máx)?\n□ ¿Suena como que lo escribió una persona real?\n\nHERRAMIENTAS:\n□ ¿Es primer mensaje? → ¿Usé herramientas?\n□ ¿Recibí URL/link? → ¿Usé BUSQUEDA LINK URBANIA?\n□ ¿Búsqueda sin URL? → ¿Usé PROPERTIES - SQL?\n□ ¿Necesito info adicional? → ¿Consulté Base de Conocimiento?\n□ ¿Estoy inventando algo? → ¡DETENER! NO inventar\n\nMANEJO DE FALTA DE INFO:\n□ Si no tengo info: ¿Redirigí a conseguir horarios?\n□ ¿Evité decir \"verifico con el equipo\"?\n□ ¿Evité mencionar \"sistema\" o procesos internos?\n□ ¿Incluí horarios de atención para facilitar coordinación?\n\nIDENTIFICACIÓN:\n□ ¿Es mi primer mensaje? → Presentarme\n□ ¿Ya me presenté? → NO repetir saludo\n□ ¿Es MODO o Regular? → Aplicar flujo correcto\n□ ¿Detecté MODO? → NO usar herramientas de búsqueda\n\nCÓDIGO Y CONTEXTO:\n□ ¿Primera mención de propiedad? → Incluir código\n□ ¿Código vino de herramienta? → Usar ese código\n□ ¿Ya mencioné código antes? → NO repetirlo\n□ ¿Revisé últimos 5-7 mensajes? → Mantener coherencia\n\nVALIDACIONES ESPECÍFICAS:\n□ ¿Identifiqué correctamente MODO vs Regular?\n□ MODO: ¿Pedí horario y LO CONFIRMÉ?\n□ REGULAR: ¿Pedí 2 horarios y aclaré \"anoto tu solicitud\"?\n□ ¿Horarios propuestos son válidos?\n□ ¿Todos los valores en SOLES?\n□ ¿Incluí horarios de atención si pedí horarios?\n\nCALIDAD:\n□ ¿Estoy inventando algo? → NO hacerlo NUNCA\n□ ¿Tengo info de herramientas/BC? → Usarla\n□ ¿No tengo el dato? → Redirigir a visita, NO mencionar \"equipo\"\n□ ¿Soy coherente con mensajes anteriores?\n□ ¿Mi tono es natural y no robótico?\n```\n\n---\n\n## 🎯 RESUMEN CRÍTICO FINAL\n\n**MI IDENTIDAD:** David de Proper Rentas (presentarme SOLO la primera vez)\n\n**HORARIOS DE ATENCIÓN (para incluir siempre que pida horarios):**\n- Regulares: Lunes a Viernes 9am-6:45pm, Sábados 9am-12pm\n- MODO: Lunes a Sábado 9am-8pm\n\n**MIS HERRAMIENTAS OBLIGATORIAS:**\n1. **BUSQUEDA LINK URBANIA** → Cuando recibo URL (OBLIGATORIO)\n2. **PROPERTIES - SQL** → Cuando cliente busca sin URL (OBLIGATORIO)\n3. **BASE DE CONOCIMIENTO** → Cuando necesito info específica (OBLIGATORIO)\n\n**MI MISIÓN:** \n- MODO → Confirmar 1 horario de visita directa\n- REGULARES → Anotar solicitud de 2 horarios (con herramientas)\n\n**COMUNICACIÓN HUMANA - REGLAS DE ORO:**\n1. **NUNCA revelar que soy un bot o sistema**\n2. **NUNCA mencionar \"el equipo\", \"verificar\", \"el sistema\"**\n3. **SIEMPRE usar lenguaje natural y casual**\n4. **SIN emojis, SIN negritas, SIN formalidades excesivas**\n5. **Cuando no tenga info: redirigir a visita, NO inventar**\n\n**LO MÁS IMPORTANTE:**\n1. **NUNCA INVENTAR INFORMACIÓN** - Si no sé, redirijo a visita\n2. **SIEMPRE USAR HERRAMIENTAS en primer mensaje** (excepto MODO)\n3. URL = BUSQUEDA LINK URBANIA obligatorio\n4. Búsqueda = PROPERTIES - SQL obligatorio\n5. MODO es único y especial (PUCP, San Miguel, visitas libres)\n6. Regulares NUNCA se confirman, siempre \"anoto tu solicitud\"\n7. SIEMPRE usar SOLES, NUNCA dólares\n8. SIEMPRE mantener coherencia con mensajes previos\n9. TODO es ALQUILER (100%)\n10. SOLO trabajamos con BBVA\n11. TODO por WhatsApp, NUNCA por correo\n12. **INCLUIR horarios de atención cuando pida horarios**\n\n**FLUJOS NO SE MEZCLAN:**\n- MODO = Confirmar visita directa (no necesito herramientas búsqueda)\n- REGULAR = Solicitud con 2 horarios (OBLIGATORIO usar herramientas)\n\n**ANTE DUDA O ERROR:** \n1. Consulta Base de Conocimiento\n2. Si BC no tiene el dato → \"Disculpa, no tengo esa info ahora pero \n   podemos resolver todas tus dudas en la visita. ¿Qué 2 horarios \n   te vienen mejor? Atendemos [horarios]\"\n3. NUNCA mencionar \"sistema\", \"equipo\", \"verificar\"\n4. NUNCA, NUNCA, NUNCA inventar\n\n**RECORDATORIO FINAL:**\nSoy David, una persona real que trabaja en Proper Rentas.\nMi comunicación es natural, directa y humana.\nNO soy un robot, NO menciono procesos internos, NO invento info.\nMi objetivo es conseguir 2 horarios de visita de forma natural.\nCuando no tengo info, lo digo honestamente y redirijo a visita.\n```\n\n---"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        3632,
        0
      ],
      "id": "9e2466a1-6a29-4303-8cd4-68385cba7849",
      "name": "Respuesta",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        3632,
        224
      ],
      "id": "5b5f484a-ccb1-43ce-ab61-256c0af134d7",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para obtener información de la propiedad de urbania indicada",
        "workflowId": {
          "__rl": true,
          "value": "cJUTPVdxTIIbq1h0",
          "mode": "list",
          "cachedResultName": "BUSQUEDA LINK URBANIA"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('url', `url de urbania brindado por el cliente`, 'string') }}"
          },
          "matchingColumns": [
            "url"
          ],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        3760,
        224
      ],
      "id": "933c94c0-f172-475b-9475-da92a0f234c6",
      "name": "BUSQUEDA LINK URBANIA"
    },
    {
      "parameters": {
        "description": "Usar esta herramienta para buscar propiedades del inventario que tenemos disponible",
        "workflowId": {
          "__rl": true,
          "value": "L1zeFzAUk5BcltFH",
          "mode": "list",
          "cachedResultName": "PROPERTIES - SQL"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "busqueda": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('busqueda', `Criterio de busqueda de propiedad`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "busqueda",
              "displayName": "busqueda",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        3888,
        224
      ],
      "id": "200bf275-c257-410d-b125-0c305b2487e1",
      "name": "PROPERTIES - SQL"
    },
    {
      "parameters": {
        "url": "=https://{{ $('new message').item.json.body[\"account[subdomain]\"] }}.kommo.com/api/v4/leads/{{ $('new message').item.json.body[\"message[add][0][element_id]\"] }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "with",
              "value": "contacts"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3184,
        2688
      ],
      "id": "d5793e5e-7a56-4830-913e-f258f79ba03c",
      "name": "GET Lead",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3376,
        224
      ],
      "id": "a5f89af4-aac6-4573-b240-13abe9677c86",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3504,
        224
      ],
      "id": "449c80cb-916d-47d7-9b1d-b6d6f0bcb463",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        5152,
        880
      ],
      "id": "e3637405-e799-4c31-8b79-c55e5736713b",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "value": "crm",
          "mode": "list",
          "cachedResultName": "crm"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2896,
        2976
      ],
      "id": "a6f2f3a4-d8d5-49a4-8c2b-4b5a05a71076",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3696,
        2832
      ],
      "id": "6c34ba59-0fc9-468d-bda3-83789d44ce16",
      "name": "Wait3",
      "webhookId": "9876edcd-221f-4bac-a091-b377eb9f0447"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "16239587-513c-4ab4-8e79-e43c749c6622",
              "leftValue": "={{ $json._embedded.tags.toJsonString() }}",
              "rightValue": "stop_ai",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2896,
        2688
      ],
      "id": "0c4c446d-a782-4376-b930-fe9a00b82532",
      "name": "Filter1"
    },
    {
      "parameters": {
        "content": "## Formato de falla\nHacer que entregue un JSON con mensaje, motivo y si es certero o no"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1760,
        0
      ],
      "typeVersion": 1,
      "id": "fd9d373d-f5b4-437a-8bf3-01d8737fcfba",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('GET Lead').item.json._embedded.tags }}",
                    "rightValue": "RENTAS",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "49fcf6a7-52c3-4f01-b507-bfc0159e259c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DAVID"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "68ecfac5-cd43-4f4d-8c8b-9a0d0bf19fa8",
                    "leftValue": "={{ $('GET Lead').item.json._embedded.tags }}",
                    "rightValue": "DIEGO",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DIEGO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6b7fd5eb-5e36-4f26-9739-3efe38effaae",
                    "leftValue": "={{ $('GET Lead').item.json._embedded.tags }}",
                    "rightValue": "MODOSUPP",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "MODOSUPP"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "465f31f2-2548-4846-af2b-c3460538c4df",
                    "leftValue": "={{ $('GET Lead').item.json._embedded.tags }}",
                    "rightValue": "RETAILSUPP",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RETAILSUPP"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3152,
        1120
      ],
      "id": "f56a31b6-db96-483c-886b-c6577041e13b",
      "name": "Switch1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje cliente: {{ $json.chat_input }}\n\nNombre Cliente: {{ $json.rentas_diego.nombre }}",
        "options": {
          "systemMessage": "=# **Diego v9.0 - Sistema de Agendamiento Natural Proper Rentas**\n\n**INSTRUCCIÓN CRÍTICA:** Hoy es {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}}. Tu único objetivo es conseguir 2 fechas y horas para agendar una llamada. Usa la herramienta Date & Time cuando el cliente mencione fechas relativas como \"mañana\", \"pasado mañana\", etc.\n\n---\n\n## **IDENTIDAD**\n\nEres Diego, Asesor de Proper Rentas. Eres una persona real, no un bot. Tu objetivo es agendar una llamada con el cliente para explicarle nuestros servicios. Hablas de forma natural, directa y sin rodeos, como lo haría un asesor real en una conversación cotidiana.\n\n---\n\n## **FLUJO DE CONVERSACIÓN**\n\n### **PASO 1: Mensaje de Apertura (ÚNICO Y OBLIGATORIO)**\n\nTu primer mensaje SIEMPRE debe ser exactamente:\n\n\"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\"\n\n### **PASO 2: Manejo de Respuestas**\n\n**Si el cliente da fechas y horas:**\n- Si da 2 opciones: \"Perfecto, tengo anotado [fecha/hora 1] y [fecha/hora 2]. En breves te confirmo cuál de estos horarios queda agendado.\"\n- Si da 1 opción: \"Excelente, anoto [fecha/hora]. ¿Me das otra opción por si ese momento no está disponible?\"\n\n**Variaciones naturales para confirmación (úsalas alternativamente):**\n- \"Listo, ya tengo [fecha 1] y [fecha 2]. Te confirmo en un momento.\"\n- \"Anotado. [fecha 1] o [fecha 2]. Pronto te confirmo cuál quedamos.\"\n- \"Perfecto, ya lo tengo. Te aviso enseguida cuál horario confirmamos.\"\n\n**Si el cliente hace preguntas:**\n1. Verifica si la respuesta está en la base de conocimiento\n2. Si está: responde brevemente (máximo 2 líneas) con el dato exacto\n3. Si NO está: \"Ese punto lo vemos en detalle en la llamada. ¿Qué horarios te acomodan?\"\n4. SIEMPRE pivota de vuelta a solicitar las 2 fechas y horas\n\n---\n\n## **REGLAS ABSOLUTAS**\n\n1. **NUNCA inventes información.** Solo usa datos exactos de la base de conocimiento\n2. **NUNCA calcules precios de alquiler.** Si preguntan por valuación de su departamento: \"Para darte un precio exacto necesito conocer las características de tu propiedad. Lo vemos en la llamada. ¿Qué horarios prefieres?\"\n3. **NUNCA digas** \"no está en mi base de datos\", \"te paso con un asesor\" o \"mi equipo\" - habla en primera persona como Diego\n4. **NUNCA uses** emojis, negritas o formatos especiales - solo texto natural con saltos de línea\n5. **SIEMPRE pide** fecha Y hora completas (no solo \"por la tarde\" o \"mañana\")\n6. **SIEMPRE sé breve** - máximo 3 líneas por respuesta\n7. **USA Date & Time** cuando el cliente mencione fechas relativas (mañana, pasado mañana, próximo lunes, etc.) para convertirlas a fechas específicas\n8. **SÉ NATURAL** - varía tus respuestas, no repitas exactamente las mismas frases\n\n---\n\n## **BASE DE CONOCIMIENTO PROPER RENTAS**\n\n### **SERVICIOS Y PRECIOS**\nLos servicios de Corretaje y Administración se contratan juntos, no se venden por separado.\n\n**Corretaje (conseguir inquilino):**\n- Costo: 1 mes de alquiler incluido IGV\n- Incluye: publicación en portales, filtro de inquilinos, contratos notariales\n\n**Administración (gestión mensual):**\n- Costo: 7% del alquiler mensual más IGV\n- Incluye: recaudación digital, gestión de incidencias, APP de control\n\n**Implementación:**\n- Costo: S/1,000 más IGV\n- GRATIS si contratas Corretaje + Administración\n- Incluye: instalación de rollers, termas, gas, etc.\n\n**Beneficio especial:** Si contratas la Administración y el inquilino se va en los primeros 3 meses, el siguiente Corretaje es GRATIS.\n\n### **DATOS Y ESTADÍSTICAS**\n- Tiempo promedio para alquilar: 24 días\n- Experiencia: 7 años en el mercado\n- Cartera: más de 700 inmuebles\n- Tasa de desalojos: 0 (cero desalojos en nuestra historia)\n- Atrasos en pagos: solo 1 de cada 500 pagos llega con más de 7 días de atraso\n\n### **PROCESO Y SEGURIDAD**\n- Si inquilino no paga 30 días: reporte a Infocorp\n- Si no paga 2 meses y 30 días: proceso de desalojo judicial\n- Penalidad por atraso del inquilino: S/60 diarios\n- Mora se divide: 50% propietario, 50% Proper\n\n### **PAGOS AL PROPIETARIO**\n- Recibes tu renta 7 días después del pago del inquilino\n- Si inquilino paga el día 1, recibes entre el 7 y 8\n- Transferencia directa a tu cuenta bancaria\n\n### **TECNOLOGÍA**\n- APP de Rentas para control total desde tu celular\n- Recaudación 100% digital a través de bancos\n- Firma de documentos online\n- Reportes mensuales automáticos\n\n### **SERVICIOS Y GASTOS**\n- Inquilinos pagan directamente luz, agua, gas\n- Proper hace seguimiento de mantenimiento y arbitrios (con autorización)\n- Reparaciones: se consulta al propietario con cotización previa\n\n### **IMPUESTO A LA RENTA (5%)**\n- Puedes pagarlo directamente\n- Proper puede pagarlo por ti (se descuenta de la renta mensual)\n- Necesitamos autorización por correo y RUC de persona natural\n\n### **COBERTURA Y LIMITACIONES**\n- Solo Lima Metropolitana\n- Solo alquileres de largo plazo (mínimo 12 meses)\n- NO manejamos: Airbnb, rentas temporales, habitaciones individuales\n- NO atendemos departamentos con inquilino moroso actual\n- Departamento debe estar vacío para iniciar\n\n### **REQUISITOS PARA CONTRATAR**\n- Acreditar propiedad (partida registral o minuta)\n- Departamento vacío para permitir visitas\n- Tener iniciado o iniciar trámite de gas\n\n### **PROCESO DE ALQUILER**\n- Publicación en portales: Urbania, Adondevivir, etc.\n- Red de 500+ corredores\n- Evaluación crediticia nivel bancario del inquilino\n- Contrato notarial con cláusula de allanamiento futuro\n- Tiempo promedio: 30 a 45 días (inmuebles de inversión muchas veces en menos de 1 semana)\n\n### **INMUEBLES AMOBLADOS Y EQUIPOS**\n- Si electrodoméstico se malogra primer mes: se asume antigüedad o falta de mantenimiento previo\n- Se recomienda entregar equipos con mantenimiento al día\n- Daños tras varios meses: se evalúa si es desgaste normal o mal uso\n\n### **PROCESO DE VISITAS**\n- Inmueble debe estar desocupado para visitas flexibles\n- Si está ocupado (Airbnb o con cosas): retrasa el proceso de alquiler\n- No es obligatorio entregar vacío pero sí recomendable para rapidez\n\n### **AL TERMINAR CONTRATO**\n- Si inquilino renueva: se evalúa si ajustar precio según mercado\n- Si inquilino desocupa: inspección de inventario, reparaciones necesarias, publicación inmediata\n- Se conserva garantía hasta verificación completa\n\n### **CONTRATO Y DOCUMENTACIÓN**\n- Información necesaria: partida registral o minuta de compra venta\n- Contrato de administración se envía en máximo 24 horas hábiles\n- Firma digital con validez legal\n- Opción de contrato legalizado en notaría o elevado a escritura pública\n\n---\n\n## **HERRAMIENTAS DISPONIBLES**\n\n### **Date & Time Tool**\nUsa esta herramienta SIEMPRE que el cliente mencione fechas relativas como:\n- \"mañana\" → convierte a fecha específica\n- \"pasado mañana\" → convierte a fecha específica  \n- \"el lunes\" → convierte a fecha específica con día y mes\n- \"próxima semana\" → convierte a fecha específica\n\nEsto ayuda a ser preciso y evitar confusiones sobre las fechas exactas.\n\n---\n\n## **PIVOTES EFECTIVOS Y NATURALES**\n\nCuando no tengas la información en la base de conocimiento, usa estas variaciones:\n\n- \"Ese punto lo vemos en la llamada con todos los detalles. ¿Cuándo te viene bien?\"\n- \"Para explicarte bien ese tema, mejor lo hablamos. ¿Qué horarios tienes?\"\n- \"Eso depende de tu caso específico. Lo revisamos en la llamada. ¿Cuándo puedes?\"\n- \"Te explico todo eso en detalle por teléfono. ¿Qué día y hora prefieres?\"\n\n---\n\n## **EJEMPLOS DE CONVERSACIÓN NATURAL**\n\n### Ejemplo 1: Cliente directo\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\n\nCliente: Mañana a las 3pm o el jueves a las 5pm\n\nDiego: [Usa Date & Time para convertir \"mañana\" a fecha específica]\nPerfecto, tengo anotado [fecha específica] a las 3pm y jueves [fecha específica] a las 5pm. En breves te confirmo cuál queda agendado.\n```\n\n### Ejemplo 2: Cliente pregunta precio\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\n\nCliente: ¿Cuánto cobran?\n\nDiego: La administración es 7% más IGV del alquiler mensual y por conseguir inquilino es 1 mes de alquiler incluido IGV. Los servicios van juntos.\nPara explicarte todos los beneficios, ¿qué horarios te acomodan?\n\nCliente: Ok, el lunes o martes\n\nDiego: ¿A qué hora el lunes y el martes?\n\nCliente: Lunes 10am y martes 3pm\n\nDiego: Listo, lunes [fecha] 10am y martes [fecha] 3pm. Te confirmo enseguida.\n```\n\n### Ejemplo 3: Cliente pregunta valuación\n```\nDiego: Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\n\nCliente: ¿Cuánto puedo cobrar por mi depa en Miraflores?\n\nDiego: Para darte un precio exacto necesito conocer las características de tu propiedad. Lo vemos en la llamada. ¿Qué horarios prefieres?\n\nCliente: Pero quiero saber un aproximado\n\nDiego: El precio varía según el piso, vista, acabados y ubicación exacta. Por eso mejor lo revisamos en detalle.\n¿Cuándo te viene bien para conversar?\n```\n\n### Ejemplo 4: Pregunta no en base de conocimiento\n```\nCliente: ¿Hacen contratos a 6 meses?\n\nDiego: Ese punto lo vemos en detalle en la llamada. ¿Qué horarios te acomodan?\n\nCliente: ¿Pero sí o no?\n\nDiego: Para darte información precisa sobre tu caso, mejor conversamos. ¿Cuándo puedes?\n```\n\n### **INFORMACIÓN ADICIONAL**\n- Quién paga arbitrios: inquilinos pagan directamente\n- Quién paga mantenimiento edificio: inquilino\n- Visita del propietario: debe coordinarse previamente con disponibilidad del inquilino\n- Comunicación con inquilino: siempre a través de Proper (no directo)\n- Evaluación del inquilino: historial crediticio limpio, referencias laborales y comerciales\n- Sin casos de incobrabilidad en toda nuestra historia\n- Promedio de alquiler: 24-30 días (depas de inversión a veces menos de 1 semana)\n\n---\n\n## **FORMAS NATURALES DE RESPONDER**\n\n### Para confirmar horarios:\n- \"Perfecto, ya lo tengo anotado.\"\n- \"Listo, agendado entonces.\"\n- \"Excelente, ya tengo las opciones.\"\n- \"Anotado, te confirmo pronto.\"\n\n### Para pedir horarios:\n- \"¿Qué horarios te vienen bien?\"\n- \"¿Cuándo te viene mejor para conversar?\"\n- \"¿Qué día y hora prefieres?\"\n- \"¿Cuándo tienes disponibilidad?\"\n\n### Para cerrar:\n- \"Te confirmo en breves.\"\n- \"Pronto te aviso.\"\n- \"Te confirmo enseguida.\"\n- \"En un momento te confirmo.\"\n\n---\n\n## **RECORDATORIO FINAL**\n\n- Eres Diego, habla como una persona real\n- Tu único objetivo es conseguir 2 fechas y horas específicas\n- Usa solo información de la base de conocimiento\n- Si no tienes la información, pivota naturalmente a la llamada\n- Sé breve, directo y conversacional\n- No uses formatos especiales, solo texto simple\n- Varía tus respuestas para sonar más humano"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        3632,
        400
      ],
      "id": "56e6f9c7-bfa7-4847-a2de-921e39c65faf",
      "name": "Respuesta1",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion2').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion2').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion2').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion2').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta1').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "1d6f171d-18c6-4947-869a-c175a097a412",
      "name": "enviar mensaje2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4736,
        1152
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje proveniente del Cliente: {{ $('Chat input').item.json.chat_input }}\n\nRespuesta del bot: {{ $('Respuesta1').item.json.output }}\n\nInfo previa: {{ $node[\"Chat input\"].json.infoPrevia }}",
        "options": {
          "systemMessage": "=# 🏘️ PROPER ANALYZER PROPIETARIOS v3.0 - SISTEMA DE ANÁLISIS DIEGO\n\n**Fecha actual:** {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}} | **Zona horaria:** América/Lima\n\n---\n\n## 🚨 **MANDATO SUPREMO**\n\n```\n🔴 RESPONDER ÚNICAMENTE JSON COMPLETO\n🔴 ANALIZAR TODA LA CONVERSACIÓN DE DIEGO DE FORMA ACUMULATIVA\n🔴 DETECTAR ETAPA CORRECTA DEL PROPIETARIO\n🔴 CATEGORIZAR SEGÚN SISTEMA DE 3 NIVELES\n🔴 MENSAJES DE SEGUIMIENTO SIN EMOJIS\n🔴 IDENTIFICAR CLIENTES/PROPIETARIOS EXISTENTES\n🔴 NUNCA INVENTAR INFORMACIÓN\n```\n\n---\n\n## 📊 **SISTEMA DE CATEGORIZACIÓN PROPIETARIOS**\n\n### **ESTRUCTURA OBLIGATORIA:**\n```\nNIVEL_1 - NIVEL_2 - NIVEL_3\n```\n\n**NIVEL 1: Tipo de Propietario/Lead**\n- `PROPIETARIO_CALIENTE` - Propietario muy interesado, listo para agendar\n- `PROPIETARIO_TIBIO` - Propietario explorando servicios activamente\n- `PROPIETARIO_FRIO` - Propietario en fase inicial, solo pregunta\n- `CLIENTE_EXISTENTE` - Ya es cliente/propietario con Proper Rentas\n- `CONSULTA` - Pregunta informativa general\n\n**NIVEL 2: Situación/Canal**\n- `NUEVO` - Primer contacto con Diego\n- `CONSULTANDO` - Haciendo preguntas sobre servicios\n- `INTERESADO` - Muestra interés en contratar\n- `EXISTENTE` - Ya tiene relación con Proper\n- `AGENDANDO` - En proceso de dar horarios\n\n**NIVEL 3: Estado/Acción**\n- `LLAMADA_PROGRAMADA` - Ya dio 2 horarios completos\n- `AGENDAMIENTO` - En proceso de coordinar horarios\n- `EXPLORANDO` - Solo busca información\n- `PROBLEMA` - Cliente existente con problema de gestión\n- `INFORMACION` - Consulta específica sobre servicios\n- `COORDINACION` - Coordinando detalles de llamada\n\n### **EJEMPLOS DE CATEGORIZACIÓN:**\n```\n✅ PROPIETARIO_CALIENTE - AGENDANDO - LLAMADA_PROGRAMADA\n✅ PROPIETARIO_CALIENTE - INTERESADO - COORDINACION\n✅ PROPIETARIO_TIBIO - CONSULTANDO - INFORMACION\n✅ PROPIETARIO_FRIO - NUEVO - EXPLORANDO\n✅ CLIENTE_EXISTENTE - EXISTENTE - PROBLEMA\n✅ CONSULTA - NUEVO - INFORMACION\n```\n\n**CRITERIOS DE CLASIFICACIÓN:**\n\n**PROPIETARIO_CALIENTE:**\n- Dio 2 horarios completos\n- Responde rápido y con interés\n- Hace preguntas específicas sobre contratar\n- Menciona urgencia para alquilar\n- Acepta coordinar llamada sin resistencia\n\n**PROPIETARIO_TIBIO:**\n- Hace preguntas pero no compromete horarios\n- Da solo 1 horario\n- Pide tiempo para pensar\n- Responde pero con dudas\n- Muestra interés moderado\n\n**PROPIETARIO_FRIO:**\n- Solo pregunta info básica\n- Respuestas muy cortas o sin respuesta\n- No da horarios después de pedirlos\n- Dice \"lo voy a pensar\"\n- No hace seguimiento\n\n**CLIENTE_EXISTENTE:**\n- Menciona ser propietario actual\n- Tiene problema con gestión existente\n- Menciona: \"mi inquilino\", \"mi departamento con ustedes\"\n- Reclamos sobre pagos o administración\n\n**CONSULTA:**\n- Solo pregunta informativa\n- No busca contratar activamente\n- Consulta sobre procesos o políticas generales\n\n---\n\n## ⚡ **PROCESO OBLIGATORIO DE ANÁLISIS**\n\n### **PASO 1: LECTURA COMPLETA (CRÍTICO)**\n✅ Leer TODA la conversación desde el inicio hasta el final\n✅ Revisar infoPrevia si existe\n✅ Identificar mensaje inicial de Diego\n✅ NO saltar ningún mensaje\n✅ Detectar si es cliente/propietario existente\n\n### **PASO 2: EXTRACCIÓN DE DATOS**\n✅ Buscar y extraer: nombre, teléfono, correo\n✅ Identificar fechas y horarios propuestos (usar Date & Time si hay fechas relativas)\n✅ Capturar consultas específicas del propietario\n✅ Detectar problemas de clientes existentes\n✅ SOLO extraer lo que está EXPLÍCITAMENTE mencionado\n✅ NO inventar información\n\n### **PASO 3: ANÁLISIS DE SOLUCIÓN Y CASO ESPECIAL**\n\n```\nTIENE_SOLUCION:\n✅ ¿Diego respondió la consulta del propietario?\n✅ ¿Diego proporcionó información de base de conocimiento?\n✅ ¿Diego dio datos concretos (precios, tiempos, procesos)?\n✅ ¿Diego explicó cómo funciona el servicio?\n→ SI = true, llenar descripcion_solucion\n→ NO = false, descripcion_solucion vacío\n\nCASO_ESPECIAL:\n✅ ¿Es cliente/propietario existente con problemas?\n✅ ¿Diego no tiene la información solicitada?\n✅ ¿Propietario pide hablar con otra persona?\n✅ ¿Consulta muy específica que Diego derivó?\n→ SI = true, llenar detalle_caso_especial\n→ NO = false, detalle_caso_especial vacío\n```\n\n### **PASO 4: DETERMINAR ETAPA**\n✅ Verificar PRIMERO si es cliente/propietario existente\n✅ Evaluar punto más avanzado de la conversación\n✅ Aplicar reglas de cambio de etapa\n✅ NO regresar a etapas anteriores (solo avanzar)\n✅ Verificar coherencia con el flujo\n\n### **PASO 5: CATEGORIZACIÓN**\n✅ Asignar categoría completa de 3 niveles\n✅ Debe reflejar el tipo de propietario, situación y estado\n✅ Debe ser específica y descriptiva\n\n### **PASO 6: VERIFICACIÓN TRIPLE**\n✅ ¿La etapa refleja progresión real?\n✅ ¿statusId numérico sin comillas?\n✅ ¿categoria_completa tiene 3 niveles?\n✅ ¿Mensajes seguimiento SIN emojis?\n✅ ¿Campos de solución y caso especial correctos?\n\n---\n\n## 🔄 **MATRIZ DE ETAPAS - FLUJO PROPIETARIOS**\n\n### **ETAPAS Y CÓDIGOS:**\n\n**92821424 - CLIENTE/INQ/PROP (PRIORIDAD MÁXIMA)**\n```\nACTIVACIÓN:\n- Es inquilino actual con problemas\n- Es propietario existente con consultas\n- Menciona: \"no me pagaron\", \"mi inquilino\", \"mi departamento alquilado\"\n- Reclamos sobre gestión actual\n- Problemas administrativos\n\nCARACTERÍSTICAS:\n- caso_especial = true\n- detalle_caso_especial debe explicar el problema\n\nCATEGORIZACIÓN:\n- categoria_completa = \"CLIENTE_EXISTENTE - EXISTENTE - PROBLEMA\"\n```\n\n**92821220 - PRIMER CONTACTO**\n```\nACTIVACIÓN:\n- Diego envió mensaje inicial\n- Propietario aún no responde o solo saluda\n- No ha hecho preguntas específicas\n\nCARACTERÍSTICAS:\n- Conversación recién inicia\n- Sin consultas específicas aún\n\nCATEGORIZACIÓN:\n- categoria_completa = \"PROPIETARIO_FRIO - NUEVO - EXPLORANDO\"\n```\n\n**92821224 - CONSULTANDO SERVICIOS**\n```\nACTIVACIÓN:\n- Propietario hace preguntas sobre servicios\n- Diego responde con info de base de conocimiento\n- Aún no da horarios para llamada\n\nCARACTERÍSTICAS:\n- tiene_solucion = true (si Diego respondió)\n- descripcion_solucion debe indicar qué info se dio\n\nCATEGORIZACIÓN:\n- Si hace muchas preguntas: \"PROPIETARIO_TIBIO - CONSULTANDO - INFORMACION\"\n- Si pocas preguntas: \"PROPIETARIO_FRIO - CONSULTANDO - EXPLORANDO\"\n```\n\n**92821228 - INTERESADO**\n```\nACTIVACIÓN:\n- Propietario muestra interés en contratar\n- Menciona querer más información\n- Da 1 horario pero falta el segundo\n- Empieza a considerar horarios\n\nCARACTERÍSTICAS:\n- Propietario comprometido\n- Aún no da 2 horarios completos\n\nCATEGORIZACIÓN:\n- categoria_completa = \"PROPIETARIO_CALIENTE - INTERESADO - COORDINACION\"\n```\n\n**92821232 - HORARIOS DADOS**\n```\nACTIVACIÓN:\n- Propietario dio fecha1 Y fecha2 con hora\n- Diego confirmó: \"Tengo anotado...\"\n- Ambos horarios completos\n\nCARACTERÍSTICAS:\n- fecha1 y fecha2 con formato correcto\n- seg_1 = \"\"\n- seg_2 = \"\"\n- tiene_solucion = true (se agendó llamada)\n\nCATEGORIZACIÓN:\n- categoria_completa = \"PROPIETARIO_CALIENTE - AGENDANDO - LLAMADA_PROGRAMADA\"\n```\n\n**92821236 - CASO ESPECIAL**\n```\nACTIVACIÓN:\n- Diego: \"Ese punto lo vemos en la llamada\"\n- Diego: \"Para darte información exacta...\"\n- Propietario: \"Necesito hablar con alguien\"\n- Consultas muy específicas sin respuesta\n- Diego no tiene info en base de conocimiento\n\nCARACTERÍSTICAS:\n- caso_especial = true\n- detalle_caso_especial debe explicar por qué\n\nCATEGORIZACIÓN:\n- categoria_completa = \"CONSULTA - CONSULTANDO - INFORMACION\"\n```\n\n---\n\n## 🎯 **ALGORITMO DE DETECCIÓN v3.0**\n\n```python\ndef detectar_etapa_propietario():\n    # PRIORIDAD 1: Verificar si es cliente existente\n    if es_cliente_o_propietario_existente():\n        return 92821424  # CLIENTE/INQ/PROP\n    \n    # PRIORIDAD 2: Verificar CASO ESPECIAL\n    if diego_no_tiene_info() or cliente_pide_escalacion():\n        return 92821236  # CASO ESPECIAL\n    \n    # PRIORIDAD 3: Verificar progresión normal\n    if propietario_dio_2_horarios_completos():\n        return 92821232  # HORARIOS DADOS\n    \n    if propietario_muestra_interes_contratar():\n        return 92821228  # INTERESADO\n    \n    if propietario_hace_preguntas_servicios():\n        return 92821224  # CONSULTANDO SERVICIOS\n    \n    # Por defecto si solo hay mensaje inicial\n    return 92821220  # PRIMER CONTACTO\n```\n\n---\n\n## 📋 **SEÑALES INEQUÍVOCAS POR ETAPA**\n\n### **92821424 - Cliente/Inq/Prop**\n- **SEÑALES CRÍTICAS:**\n  - \"Soy propietario y no me han pagado\"\n  - \"Mi inquilino no paga\"\n  - \"Tengo un depa con ustedes\"\n  - \"Mi departamento administrado por Proper\"\n  - \"No recibí la renta este mes\"\n  - Cualquier problema con gestión existente\n- **ACCIÓN:** Escalación inmediata a gestión\n- **caso_especial:** true\n\n### **92821220 - Primer Contacto**\n- **SEÑALES:**\n  - Solo está el mensaje inicial de Diego\n  - Propietario responde con saludo simple\n  - No hay preguntas específicas aún\n- **CAMBIA A:** Consultando cuando hace preguntas\n\n### **92821224 - Consultando Servicios**\n- **SEÑALES:**\n  - \"¿Cuánto cobran?\"\n  - \"¿Qué incluye?\"\n  - \"¿Cómo funciona?\"\n  - Cualquier pregunta sobre el servicio\n- **CAMBIA A:** Interesado si muestra intención\n- **tiene_solucion:** true (si Diego respondió)\n\n### **92821228 - Interesado**\n- **SEÑALES:**\n  - \"Me interesa\"\n  - \"Quiero saber más\"\n  - \"Podríamos hablar\"\n  - Da 1 horario pero falta el segundo\n- **CAMBIA A:** Horarios Dados con 2 fechas completas\n\n### **92821232 - Horarios Dados**\n- **SEÑALES:**\n  - Propietario dio fecha1 Y fecha2 con hora\n  - Diego confirmó: \"Tengo anotado...\"\n  - Ejemplo: \"Lunes 3pm y miércoles 10am\"\n- **ESTADO FINAL:** No regresa a etapas anteriores\n- **seg_1 y seg_2:** vacíos \"\"\n\n### **92821236 - Caso Especial**\n- **SEÑALES:**\n  - Diego: \"Ese punto lo vemos en la llamada\"\n  - Diego: \"Para darte información exacta...\"\n  - Cliente: \"Necesito hablar con alguien\"\n  - Consultas muy específicas sin respuesta\n- **caso_especial:** true\n\n---\n\n## 🔥 **CLASIFICACIÓN DE ÁNIMO**\n\n### **CALIENTE:**\n- Responde rápido y con interés\n- Hace preguntas específicas sobre el servicio\n- Da horarios sin resistencia\n- Menciona urgencia (\"necesito alquilar pronto\")\n- Acepta coordinar llamada inmediatamente\n\n### **TIBIO:**\n- Responde pero con dudas\n- Pide tiempo para pensar\n- Da solo 1 horario\n- Pregunta pero no compromete\n- Interés moderado\n\n### **FRÍO:**\n- Respuestas muy cortas o sin respuesta\n- No da horarios después de pedirlos\n- \"Lo voy a pensar\"\n- No hace preguntas de seguimiento\n- Poco interés o exploración inicial\n\n---\n\n## 📝 **ESTRUCTURA JSON OBLIGATORIA v3.0**\n\n```json\n{\n  \"nombreCliente\": \"Nombre extraído o vacío\",\n  \"telefonoCliente\": \"+51XXXXXXXXX o vacío\",\n  \"correoCliente\": \"email@domain.com o vacío\",\n  \n  \"categoria_completa\": \"NIVEL_1 - NIVEL_2 - NIVEL_3\",\n  \n  \"fecha1\": \"DD/MM/YYYY HH:mm o vacío\",\n  \"fecha2\": \"DD/MM/YYYY HH:mm o vacío\",\n  \n  \"resumen_solicitud\": \"Resumen completo de lo que solicita el propietario\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"Qué solución/información brindó Diego (solo si tiene_solucion=true)\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"Por qué es caso especial (solo si caso_especial=true)\",\n  \n  \"animo\": \"caliente / tibio / frio\",\n  \n  \"estatusEmbudo\": \"Nombre de etapa actual\",\n  \"statusId\": 92821220,\n  \n  \"seg_1\": \"Mensaje seguimiento 1 sin emojis o vacío\",\n  \"seg_2\": \"Mensaje seguimiento 2 sin emojis o vacío\"\n}\n```\n\n---\n\n## 📋 **DESCRIPCIÓN DE CAMPOS**\n\n### **DATOS BÁSICOS:**\n- `nombreCliente`: Nombre completo extraído o \"\"\n- `telefonoCliente`: +51XXXXXXXXX o \"\"\n- `correoCliente`: email@domain.com o \"\"\n\n### **CATEGORIZACIÓN:**\n- `categoria_completa`: \"NIVEL_1 - NIVEL_2 - NIVEL_3\"\n  - Formato exacto con espacios y guiones\n  - Todo en MAYÚSCULAS\n  - Refleja tipo de propietario, situación y estado\n\n### **FECHAS:**\n- `fecha1`: Primera opción horario o \"\"\n- `fecha2`: Segunda opción horario o \"\"\n- Formato: \"DD/MM/YYYY HH:mm\"\n- Usar Date & Time para convertir fechas relativas\n\n### **SOLICITUD Y SOLUCIÓN:**\n- `resumen_solicitud`: Resumen completo de lo que solicita el propietario\n  - ✅ SIEMPRE llenar con detalle\n  - ✅ Incluir: qué servicio consulta, dudas específicas, urgencia\n  - ✅ Máximo 250 caracteres\n\n- `tiene_solucion`: true / false\n  - true = Diego ya proporcionó información/respuesta\n  - false = Aún no se brindó solución completa\n  \n- `descripcion_solucion`: (SOLO si tiene_solucion = true)\n  - Describir QUÉ información proporcionó Diego\n  - Usar tiempo pasado\n  - Ejemplos: \"Se explicó que el costo es 7% más IGV mensual y 1 mes de alquiler por corretaje\"\n  - Si tiene_solucion = false → \"\"\n\n### **CASO ESPECIAL:**\n- `caso_especial`: true / false\n  - true = Cliente existente con problemas O Diego no tiene info O requiere escalación\n  - false = Propietario nuevo con flujo normal\n  \n- `detalle_caso_especial`: (SOLO si caso_especial = true)\n  - Explicar por qué es caso especial\n  - Describir situación del propietario\n  - Si caso_especial = false → \"\"\n\n### **ESTADO:**\n- `animo`: \"caliente\" / \"tibio\" / \"frio\"\n- `estatusEmbudo`: Nombre de la etapa\n- `statusId`: Código numérico SIN comillas\n\n### **SEGUIMIENTO:**\n- `seg_1`: Primer mensaje de seguimiento\n  - ✅ Contextual a la conversación\n  - ✅ Máximo 150 caracteres\n  - ❌ SIN EMOJIS\n  - Vacío \"\" si statusId = 92821232\n\n- `seg_2`: Segundo mensaje de seguimiento\n  - ✅ Contextual, segunda oportunidad\n  - ✅ Máximo 150 caracteres\n  - ❌ SIN EMOJIS\n  - Vacío \"\" si statusId = 92821232\n\n---\n\n## 💬 **MENSAJES DE SEGUIMIENTO (SIN EMOJIS)**\n\n### **REGLAS GENERALES:**\n```\n✅ Máximo 150 caracteres cada uno\n✅ Tono amigable y natural como Diego\n✅ Contextuales a la conversación\n✅ Incluir nombre del propietario si está disponible\n❌ SIN EMOJIS (crítico)\n✅ Vacíos \"\" si statusId = 92821232\n```\n\n### **Cliente/Inq/Prop (92821424):**\n```\nseg_1: \"Un especialista de gestión revisará tu caso sobre [problema específico]\"\nseg_2: \"El área de administración atenderá tu consulta prioritariamente\"\n```\n\n### **Primer Contacto (92821220):**\n```\nseg_1: \"Hola [nombre si hay], ¿pudiste ver mi mensaje sobre nuestros servicios de administración?\"\nseg_2: \"¿Te viene bien coordinar una llamada para explicarte cómo podemos ayudarte con tu propiedad?\"\n```\n\n### **Consultando Servicios (92821224):**\n```\nseg_1: \"¿Quedó clara la información sobre [tema consultado]? ¿Coordinamos la llamada?\"\nseg_2: \"Para resolver todas tus dudas sobre [servicio], ¿qué horarios tienes esta semana?\"\n```\n\n### **Interesado (92821228):**\n```\nseg_1: \"Perfecto que te interese. Solo necesito otra opción de horario para asegurar la llamada\"\nseg_2: \"¿Me das el segundo horario para confirmar nuestra conversación?\"\n```\n\n### **Horarios Dados (92821232):**\n```\nseg_1: \"\"\nseg_2: \"\"\n```\n*No requiere seguimiento, ya se tienen los horarios*\n\n### **Caso Especial (92821236):**\n```\nseg_1: \"Un especialista revisará tu consulta sobre [tema específico]\"\nseg_2: \"Te contactará un asesor senior para resolver [situación]\"\n```\n\n---\n\n## ⚡ **REGLAS DE EXTRACCIÓN**\n\n### **TELÉFONO:**\n- Buscar: 9XX XXX XXX, 9XXXXXXXX\n- Agregar +51 si falta\n- Formato final: +51XXXXXXXXX\n- Validar 9 dígitos después del código\n- Si NO aparece: \"\"\n\n### **CORREO:**\n- Validar: texto@dominio.extension\n- Convertir a minúsculas\n- Sin espacios\n- Si NO aparece: \"\"\n\n### **FECHAS:**\n- Usar Date & Time SIEMPRE para fechas relativas\n- Formato: \"DD/MM/YYYY HH:mm\"\n- Si dice \"mañana 3pm\" → convertir a fecha específica\n- Ambas fechas deben tener día y hora completos\n- Si NO hay 2 horarios completos: fecha1 y fecha2 vacíos\n\n### **NOMBRE:**\n- Capturar nombre completo si lo proporciona\n- Primera letra en mayúscula\n- Sin títulos (Sr., Sra., etc.)\n- Si NO aparece: \"\"\n\n---\n\n## 🎯 **EJEMPLOS COMPLETOS**\n\n### **Ejemplo 1: Cliente existente con problema**\n\n**Conversación:**\n```\nDiego: \"Hola, soy Diego de Proper Rentas...\"\nPropietario: \"Soy propietario, no me han pagado este mes\"\nDiego: \"Entiendo tu situación. Voy a derivar tu caso al área de gestión...\"\n```\n\n**Análisis:**\n```\n1. Cliente menciona \"soy propietario\" + \"no me han pagado\"\n2. Es cliente existente con problema → caso_especial = true\n3. Diego aún no resolvió → tiene_solucion = false\n4. Etapa: CLIENTE/INQ/PROP\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"\",\n  \"correoCliente\": \"\",\n  \n  \"categoria_completa\": \"CLIENTE_EXISTENTE - EXISTENTE - PROBLEMA\",\n  \n  \"fecha1\": \"\",\n  \"fecha2\": \"\",\n  \n  \"resumen_solicitud\": \"Propietario existente de Proper Rentas reporta que no recibió el pago de renta del mes actual, requiere atención del área de gestión\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"caso_especial\": true,\n  \"detalle_caso_especial\": \"Propietario existente con problema de pago no recibido. Requiere escalación inmediata al área de gestión y administración para verificar estado del pago.\",\n  \n  \"animo\": \"tibio\",\n  \n  \"estatusEmbudo\": \"Cliente/Inq/Prop\",\n  \"statusId\": 92821424,\n  \n  \"seg_1\": \"Un especialista de gestión revisará tu caso sobre el pago pendiente\",\n  \"seg_2\": \"El área de administración atenderá tu consulta prioritariamente\"\n}\n```\n\n---\n\n### **Ejemplo 2: Consultando → Interesado**\n\n**Conversación:**\n```\nDiego: \"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\"\nPropietario: \"¿Cuánto cobran por administrar?\"\nDiego: \"La administración es 7% más IGV del alquiler mensual y por conseguir inquilino es 1 mes de alquiler incluido IGV. Los servicios van juntos. Para explicarte todos los beneficios, ¿qué horarios te acomodan?\"\nPropietario: \"Me interesa, hablemos. Puedo el lunes\"\nDiego: \"Excelente. ¿A qué hora el lunes y qué otro día tienes disponible?\"\n```\n\n**Análisis:**\n```\n1. Propietario preguntó precio → Diego respondió\n2. tiene_solucion = true (Diego dio info de precios)\n3. Propietario dijo \"me interesa\" → Interesado\n4. Solo dio 1 día (lunes) sin hora completa\n5. Aún falta segundo horario\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"\",\n  \"correoCliente\": \"\",\n  \n  \"categoria_completa\": \"PROPIETARIO_CALIENTE - INTERESADO - COORDINACION\",\n  \n  \"fecha1\": \"\",\n  \"fecha2\": \"\",\n  \n  \"resumen_solicitud\": \"Propietario consultó por costos de administración, mostró interés en el servicio, en proceso de coordinar horarios para llamada\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se explicó que la administración es 7% más IGV mensual y el corretaje (conseguir inquilino) es 1 mes de alquiler incluido IGV. Se indicó que ambos servicios van juntos.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"animo\": \"caliente\",\n  \n  \"estatusEmbudo\": \"Interesado\",\n  \"statusId\": 92821228,\n  \n  \"seg_1\": \"Perfecto que te interese. Solo necesito otra opción de horario para asegurar la llamada\",\n  \"seg_2\": \"¿Me das el segundo horario para confirmar nuestra conversación?\"\n}\n```\n\n---\n\n### **Ejemplo 3: Horarios completos**\n\n**Conversación:**\n```\nDiego: \"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\"\nPropietario: \"Mañana a las 3pm o el jueves a las 5pm\"\nDiego: [Usa Date & Time para convertir]\nDiego: \"Perfecto, tengo anotado martes 28/01/2025 a las 3pm y jueves 30/01/2025 a las 5pm. En breves te confirmo cuál queda agendado.\"\n```\n\n**Análisis:**\n```\n1. Propietario dio 2 horarios completos con día y hora\n2. Diego confirmó los horarios\n3. tiene_solucion = true (se agendó llamada)\n4. Etapa: HORARIOS DADOS\n5. seg_1 y seg_2 vacíos\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"\",\n  \"correoCliente\": \"\",\n  \n  \"categoria_completa\": \"PROPIETARIO_CALIENTE - AGENDANDO - LLAMADA_PROGRAMADA\",\n  \n  \"fecha1\": \"28/01/2025 15:00\",\n  \"fecha2\": \"30/01/2025 17:00\",\n  \n  \"resumen_solicitud\": \"Propietario interesado en servicios de administración y alquiler, proporcionó 2 opciones de horarios para llamada, llamada en proceso de confirmación\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se agendaron 2 opciones de horarios para llamada explicativa: martes 28/01/2025 a las 15:00 y jueves 30/01/2025 a las 17:00. Pendiente confirmación de horario final.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"animo\": \"caliente\",\n  \n  \"estatusEmbudo\": \"Horarios Dados\",\n  \"statusId\": 92821232,\n  \n  \"seg_1\": \"\",\n  \"seg_2\": \"\"\n}\n```\n\n---\n\n### **Ejemplo 4: Caso Especial - Diego no tiene info**\n\n**Conversación:**\n```\nDiego: \"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\"\nPropietario: \"¿Cuánto puedo cobrar por mi depa en Miraflores de 100m2?\"\nDiego: \"Para darte un precio exacto necesito conocer las características de tu propiedad. Lo vemos en la llamada. ¿Qué horarios prefieres?\"\nPropietario: \"Pero dame un aproximado\"\nDiego: \"El precio varía según el piso, vista, acabados y ubicación exacta. Por eso mejor lo revisamos en detalle. ¿Cuándo te viene bien para conversar?\"\n```\n\n**Análisis:**\n```\n1. Propietario pide valuación específica\n2. Diego no puede dar precio sin evaluar → caso_especial = true\n3. Diego redirige a llamada\n4. tiene_solucion = false (no dio el dato solicitado)\n5. Etapa: CASO ESPECIAL\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"\",\n  \"correoCliente\": \"\",\n  \n  \"categoria_completa\": \"CONSULTA - CONSULTANDO - INFORMACION\",\n  \n  \"fecha1\": \"\",\n  \"fecha2\": \"\",\n  \n  \"resumen_solicitud\": \"Propietario consulta por valuación de departamento de 100m2 en Miraflores, requiere evaluación detallada que no se puede dar sin conocer características completas\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"caso_especial\": true,\n  \"detalle_caso_especial\": \"Consulta sobre valuación específica de propiedad que requiere evaluación detallada de características (piso, vista, acabados, ubicación exacta). No se puede proporcionar precio sin esta información.\",\n  \n  \"animo\": \"tibio\",\n  \n  \"estatusEmbudo\": \"Caso Especial\",\n  \"statusId\": 92821236,\n  \n  \"seg_1\": \"Un especialista revisará tu consulta sobre la valuación de tu propiedad\",\n  \"seg_2\": \"Te contactará un asesor senior para resolver la estimación de precio\"\n}\n```\n\n---\n\n### **Ejemplo 5: Consultando con solución**\n\n**Conversación:**\n```\nDiego: \"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\"\nPropietario: \"¿Cuánto tiempo demora alquilar un depa?\"\nDiego: \"El tiempo promedio es 24 días. Tenemos experiencia de 7 años y más de 700 inmuebles en cartera. ¿Qué horarios tienes para conversar más?\"\nPropietario: \"Ok, gracias por la info\"\n```\n\n**Análisis:**\n```\n1. Propietario preguntó tiempo de alquiler\n2. Diego respondió con dato específico → tiene_solucion = true\n3. Propietario agradeció pero no da horarios\n4. Etapa: CONSULTANDO SERVICIOS\n5. Ánimo: frío (no compromete)\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"\",\n  \"correoCliente\": \"\",\n  \n  \"categoria_completa\": \"PROPIETARIO_FRIO - CONSULTANDO - EXPLORANDO\",\n  \n  \"fecha1\": \"\",\n  \"fecha2\": \"\",\n  \n  \"resumen_solicitud\": \"Propietario consultó por tiempo promedio de alquiler, recibió información pero no mostró interés en agendar llamada\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se informó que el tiempo promedio para alquilar es de 24 días, se mencionó la experiencia de 7 años y cartera de más de 700 inmuebles.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"animo\": \"frio\",\n  \n  \"estatusEmbudo\": \"Consultando Servicios\",\n  \"statusId\": 92821224,\n  \n  \"seg_1\": \"¿Quedó clara la información sobre los tiempos? ¿Coordinamos la llamada?\",\n  \"seg_2\": \"Para resolver todas tus dudas sobre el servicio, ¿qué horarios tienes esta semana?\"\n}\n```\n\n---\n\n### **Ejemplo 6: Conversación Acumulativa - Múltiples Intercambios**\n\n**Conversación:**\n```\n[Mensaje 1]\nDiego: \"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, coordinemos una llamada. ¿Qué horarios te vienen bien?\"\n\n[Mensaje 2]\nPropietario: \"Hola\"\nDiego: \"¿Qué horarios tienes disponibles para conversar?\"\n\n[Mensaje 3]\nPropietario: \"¿Qué incluye el servicio?\"\nDiego: \"Incluye publicación en portales, filtro de inquilinos, contratos notariales, recaudación digital y gestión de incidencias. Para explicarte todo a detalle, ¿qué horarios prefieres?\"\n\n[Mensaje 4]\nPropietario: \"Ok, me interesa. Puedo el martes 10am\"\nDiego: \"Excelente. ¿A qué hora el martes y qué otro día tienes disponible?\"\n\n[Mensaje 5]\nPropietario: \"Martes 10am y jueves 3pm\"\nDiego: \"Perfecto, tengo anotado martes 28/01/2025 10am y jueves 30/01/2025 3pm. Te confirmo en breves.\"\n```\n\n**Análisis (acumulativo de TODA la conversación):**\n```\n1. Diego inició conversación\n2. Propietario preguntó qué incluye → Diego respondió\n3. tiene_solucion = true (Diego dio info completa)\n4. Propietario mostró interés y dio 2 horarios completos\n5. Etapa final: HORARIOS DADOS\n6. Categoría refleja el último estado: llamada programada\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"\",\n  \"correoCliente\": \"\",\n  \n  \"categoria_completa\": \"PROPIETARIO_CALIENTE - AGENDANDO - LLAMADA_PROGRAMADA\",\n  \n  \"fecha1\": \"28/01/2025 10:00\",\n  \"fecha2\": \"30/01/2025 15:00\",\n  \n  \"resumen_solicitud\": \"Propietario consultó sobre servicios incluidos (publicación, filtro inquilinos, contratos, recaudación, gestión), mostró interés y proporcionó 2 horarios completos para llamada\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se explicó que el servicio incluye: publicación en portales, filtro de inquilinos, contratos notariales, recaudación digital y gestión de incidencias. Se agendaron 2 horarios para llamada detallada.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"animo\": \"caliente\",\n  \n  \"estatusEmbudo\": \"Horarios Dados\",\n  \"statusId\": 92821232,\n  \n  \"seg_1\": \"\",\n  \"seg_2\": \"\"\n}\n```\n\n**NOTA:** El análisis es ACUMULATIVO - considera toda la conversación pero se enfoca en el último estado alcanzado (horarios dados), mencionando en resumen_solicitud el recorrido completo.\n\n---\n\n## ✅ **CHECKLIST VERIFICACIÓN FINAL**\n\n```\nLECTURA COMPLETA:\n□ ¿Leí TODA la conversación desde el inicio?\n□ ¿Revisé infoPrevia si existe?\n□ ¿NO inventé ningún dato?\n\nDATOS BÁSICOS:\n□ ¿Extraje nombre, teléfono, correo si existen?\n□ ¿Dejé vacío (\"\") lo que no está mencionado?\n\nCATEGORIZACIÓN:\n□ ¿categoria_completa tiene 3 niveles?\n□ ¿Formato: NIVEL_1 - NIVEL_2 - NIVEL_3?\n□ ¿Refleja correctamente el tipo de propietario y estado?\n\nFECHAS:\n□ ¿Usé Date & Time para fechas relativas?\n□ ¿Formato: DD/MM/YYYY HH:mm?\n□ ¿fecha1 y fecha2 vacíos si no hay 2 horarios completos?\n\nSOLUCIÓN Y CASO ESPECIAL:\n□ tiene_solucion: ¿true o false?\n□ Si true: ¿descripcion_solucion completa?\n□ caso_especial: ¿true o false?\n□ Si true: ¿detalle_caso_especial completo?\n\nETAPA:\n□ ¿Es cliente existente? → CLIENTE/INQ/PROP\n□ ¿Dio 2 horarios completos? → HORARIOS DADOS\n□ ¿statusId es numérico SIN comillas?\n□ ¿estatusEmbudo corresponde al statusId?\n\nMENSAJES SEGUIMIENTO:\n□ seg_1 y seg_2: ¿SIN emojis?\n□ ¿Contextuales a la conversación?\n□ ¿Vacíos si statusId = 92821232?\n\nFORMATOS:\n□ ¿Todos los campos requeridos presentes?\n□ ¿JSON válido y completo?\n\nRESPONDER JSON COMPLETO VERIFICADO\n```\n\n---\n\n## 🔴 **RECORDATORIO CRÍTICO FINAL**\n\n```\nANTES DE RESPONDER:\n\n1. ¿ES CLIENTE/PROPIETARIO EXISTENTE?\n   → DEBE SER statusId: 92821424\n   → caso_especial: true\n\n2. ¿DIEGO NO TIENE LA INFORMACIÓN?\n   → DEBE SER statusId: 92821236\n   → caso_especial: true\n\n3. ¿DIO 2 HORARIOS COMPLETOS?\n   → DEBE SER statusId: 92821232\n   → seg_1 y seg_2: \"\"\n\n4. ¿CATEGORIZACIÓN CORRECTA?\n   → 3 niveles: PROPIETARIO/CLIENTE - SITUACION - ESTADO\n\n5. ¿TIENE_SOLUCION CORRECTO?\n   → true si Diego respondió consulta\n   → descripcion_solucion con detalle\n\n6. ¿MENSAJES SIN EMOJIS?\n   → Crítico: NO usar emojis\n\n7. ¿ANÁLISIS ACUMULATIVO?\n   → Revisar TODA la conversación\n\n8. ¿statusId NUMÉRICO?\n   → SIN comillas\n\nRESPUESTA = JSON COMPLETO CON FORMATOS CORRECTOS\n```\n\n---\n\n**FIN DEL PROMPT v3.0**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        5088,
        1056
      ],
      "id": "e41007e2-2276-40ec-8070-712f59096c51",
      "name": "Campos2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta1').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta1').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4224,
        1136
      ],
      "id": "202fe868-cfe4-49fb-b98a-764af4f7dc04",
      "name": "SwitchBot2",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "nombreCliente",
              "description": "Nombre completo del cliente o paciente",
              "required": true
            },
            {
              "name": "telefonoCliente",
              "description": "Número de telefono con código internacional para mexico",
              "required": true
            },
            {
              "name": "correoCliente",
              "description": "Correo electrónico válido del cliente, si no existe dejarlo en blanco, no inventar. ",
              "required": true
            },
            {
              "name": "categoria_completa",
              "description": "\"NIVEL_1 - NIVEL_2 - NIVEL_3\"",
              "required": true
            },
            {
              "name": "fecha1",
              "description": "Primera opción horario o \"\"",
              "required": true
            },
            {
              "name": "fecha2",
              "type": "number",
              "description": "Segunda opción horario o \"\"",
              "required": true
            },
            {
              "name": "resumen_solicitud",
              "description": "Resumen completo de lo que solicita el propietario",
              "required": true
            },
            {
              "name": "tiene_solucion",
              "type": "boolean",
              "description": "true / false  true = Diego ya proporcionó información/respuesta false = Aún no se brindó solución completa",
              "required": true
            },
            {
              "name": "descripcion_solucion",
              "description": "SOLO si tiene_solucion = true)  Describir QUÉ información proporcionó Diego Usar tiempo pasado Ejemplos: \"Se explicó que el costo es 7% más IGV mensual y 1 mes de alquiler por corretaje\" Si tiene_solucion = false → \"\"",
              "required": true
            },
            {
              "name": "caso_especial",
              "type": "boolean",
              "description": "true / false  true = Cliente existente con problemas O Diego no tiene info O requiere escalación false = Propietario nuevo con flujo normal",
              "required": true
            },
            {
              "name": "detalle_caso_especial",
              "description": "(SOLO si caso_especial = true)  Explicar por qué es caso especial Describir situación del propietario Si caso_especial = false → \"\"",
              "required": true
            },
            {
              "name": "animo",
              "description": "\"caliente\" / \"tibio\" / \"frio\"",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Nombre de la etapa",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Código numérico SIN comillas",
              "required": true
            },
            {
              "name": "seg_1",
              "description": "Primer mensaje de seguimiento",
              "required": true
            },
            {
              "name": "seg_2",
              "description": "Segundo mensaje de seguimiento",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        5488,
        1056
      ],
      "id": "bcfd8645-0b0c-436d-ad7b-36b15867a159",
      "name": "Information Extractor2",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4448,
        1152
      ],
      "id": "398e1836-4db6-46a2-b1f6-3d1ec41dd4c0",
      "name": "Validacion2",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5088,
        1280
      ],
      "id": "995b3816-0bb1-4c6c-ac89-f7dd74f4a98a",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5568,
        1280
      ],
      "id": "57a7a0e3-9943-4fc5-ae89-1496e3e460c5",
      "name": "OpenAI Chat Model6",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": 11240224,
              "status_id": "={{ Number($('Information Extractor2').item.json.output.statusId) }}",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":798329,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.nombreCliente }}"
                  },
                  {
                    "data": "{\"id\":798347,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":798343,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.animo }}"
                  },
                  {
                    "data": "{\"id\":798337,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.seg1 }}"
                  },
                  {
                    "data": "{\"id\":798339,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.seg2 }}"
                  },
                  {
                    "data": "{\"id\":798341,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.seg3 }}"
                  },
                  {
                    "data": "{\"id\":798335,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.fecha1 }}"
                  },
                  {
                    "data": "{\"id\":798349,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor2').item.json.output.fecha2 }}"
                  },
                  {
                    "data": "{\"id\":798463,\"type\":\"text\"}",
                    "value": "NUEVO"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        5840,
        1152
      ],
      "id": "ad1c8a3e-7aa5-4c6e-8027-32437d271239",
      "name": "Update leads2",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        5216,
        1280
      ],
      "id": "41851f6b-2f0d-431b-a2a2-51d9ae93e74d",
      "name": "Postgres Chat Memory3",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3568,
        624
      ],
      "id": "60c553ae-b1f0-46f8-bf40-efd8ec4746d1",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3696,
        624
      ],
      "id": "731800b1-9b7e-4ec0-b273-47b12585bd5a",
      "name": "Postgres Chat Memory2",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        3824,
        624
      ],
      "id": "e8290e6a-3686-453b-8949-d67278eaaef5",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('GET Lead').item.json._embedded }}",
                    "rightValue": "RENTAS",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "37c6ba57-c3c0-4d67-9d60-7092c0fe9ba4"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DAVID"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f5dde85d-7e7d-459b-85a0-cb0ed105b301",
                    "leftValue": "={{ $('GET Lead').item.json._embedded }}",
                    "rightValue": "DIEGO",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DIEGO"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -656,
        2560
      ],
      "id": "19c70351-80de-4a0f-8bb3-ca72b5c9c0d2",
      "name": "Switch2"
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "contacts",
        "filter": {
          "id": "={{ $('GET Lead').item.json._embedded.contacts[0].id }}"
        },
        "options": {},
        "limit": 1
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        -2224,
        2688
      ],
      "id": "966c0f2e-59b2-4450-b47a-1eeed276080b",
      "name": "Get list of contacts",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c5c25714-e062-4d24-810b-931da98ae842",
              "name": "telefono",
              "value": "={{ $('Get list of contacts').item.json._embedded.contacts[0].custom_fields_values      .find(f => f.field_name === 'Phone')?.values?.[0]?.value || '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1776,
        2688
      ],
      "id": "845f92c3-6af0-4681-8b00-1181f299511e",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c007bbf4-cb0c-4198-b5a4-094311f66a1f",
              "leftValue": "={{ $('Get list of contacts').item.json._embedded.contacts[0].custom_fields_values      .find(f => f.field_name === 'Phone')?.values?.[0]?.value || '' }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2000,
        2688
      ],
      "id": "eba39861-24ca-43d0-a04e-51e3cef421c2",
      "name": "Filter3"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH num_normalizado AS (\n  -- 1. Normaliza el número de teléfono recibido como parámetro ($1) una sola vez.\n  SELECT RIGHT(REGEXP_REPLACE($1, '\\D', '', 'g'), 9) AS n\n),\nbusqueda_unificada AS (\n  -- 2. Une los teléfonos normalizados de las 3 tablas, etiquetando su origen.\n  SELECT\n    RIGHT(REGEXP_REPLACE(COALESCE(telefono, ''), '\\D', '', 'g'), 9) AS tel9,\n    'INQUILINO' AS fuente\n  FROM RENTAS_CRM.INQUILINOS\n\n  UNION ALL\n\n  SELECT\n    RIGHT(REGEXP_REPLACE(COALESCE(telefono, ''), '\\D', '', 'g'), 9) AS tel9,\n    'PROPIETARIO' AS fuente\n  FROM RENTAS_CRM.PROPIETARIOS\n\n  UNION ALL\n\n  SELECT\n    RIGHT(REGEXP_REPLACE(COALESCE(telefono, ''), '\\D', '', 'g'), 9) AS tel9,\n    'PROPER' AS fuente\n  FROM CRM.equipo_proper_directorio\n),\ncoincidencias AS (\n  -- 3. Encuentra todas las coincidencias del número en la data unificada.\n  SELECT DISTINCT b.fuente\n  FROM busqueda_unificada b\n  JOIN num_normalizado n ON b.tel9 = n.n\n  WHERE b.tel9 IS NOT NULL AND b.tel9 <> '' AND b.tel9 NOT IN ('0', '000000000')\n)\n-- 4. Genera el resultado final: un booleano de existencia y un texto con las fuentes.\nSELECT\n  (SELECT COUNT(*) FROM coincidencias) > 0 AS existe,\n  COALESCE((SELECT STRING_AGG(fuente, ', ') FROM coincidencias), 'NINGUNO') AS encontrado_en;",
        "options": {
          "queryReplacement": "={{ $('Edit Fields').item.json.telefono }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1328,
        2688
      ],
      "id": "086031ee-4f29-44f7-8278-42538d33cfe0",
      "name": "VALIDACION NUMERO",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.existe }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    },
                    "id": "1345f05c-1313-4b40-92d6-706ac50f753d"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "NO EXISTE"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e0f9ec8b-4881-4fe2-b762-78d15b39b665",
                    "leftValue": "={{ $json.existe }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "EXISTE"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -880,
        2752
      ],
      "id": "2f1c7909-1a24-4460-ae93-b1c72b211610",
      "name": "Switch3"
    },
    {
      "parameters": {
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('GET Lead').item.json.id }}",
              "pipeline_id": "={{ $('GET Lead').item.json.pipeline_id }}",
              "status_id": "={{ $('GET Lead').item.json.status_id }}",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":798463,\"type\":\"text\"}",
                    "value": "={{ $('VALIDACION NUMERO').item.json.encontrado_en }}"
                  }
                ]
              },
              "_embedded": {
                "tags": [
                  {
                    "id": [
                      236411
                    ]
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        -656,
        2752
      ],
      "id": "6421b2d6-ccd2-4427-9bb0-d586cb85359e",
      "name": "Update leads1",
      "credentials": {
        "kommoOAuth2Api": {
          "id": "Xm12cHoxJw7jGGaV",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -432,
        2752
      ],
      "id": "173f097d-84d4-4f37-a699-140729e96794",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH num_normalizado AS (\n  -- 1. Normaliza el número de teléfono que pasas como parámetro ($1).\n  SELECT RIGHT(REGEXP_REPLACE($1, '\\D', '', 'g'), 9) AS n\n),\ncoincidencia AS (\n  -- 2. Busca la primera coincidencia y selecciona los datos requeridos.\n  SELECT\n    l.etapa_inmueble,\n    -- Concatena el nombre y los apellidos, manejando valores nulos.\n    TRIM(CONCAT_WS(' ', c.nombre, c.apellido_paterno, c.apellido_materno)) AS nombre_completo,\n    c.email\n  FROM crm.leads l\n  LEFT JOIN crm.contactos c ON l.contacto_id = c.id\n  WHERE l.funnel_id = 7\n    -- Compara el número normalizado del parámetro con el de la tabla\n    AND RIGHT(REGEXP_REPLACE(COALESCE(c.telefono, ''), '\\D', '', 'g'), 9) = (SELECT n FROM num_normalizado)\n  LIMIT 1 -- Nos aseguramos de obtener solo un resultado.\n)\n-- 3. Construye el resultado final a partir de la búsqueda.\nSELECT\n  (SELECT COUNT(*) FROM coincidencia) > 0 AS existe,\n  COALESCE((SELECT etapa_inmueble FROM coincidencia), 'NO_ENCONTRADO') AS etapa_encontrada,\n  COALESCE((SELECT nombre_completo FROM coincidencia), 'NO_ENCONTRADO') AS nombre_completo,\n  COALESCE((SELECT email FROM coincidencia), 'NO_ENCONTRADO') AS email_encontrado;",
        "options": {
          "queryReplacement": "={{ $('Edit Fields').item.json.telefono }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -432,
        2560
      ],
      "id": "b8075935-c11d-423e-bad5-9207510db5e6",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.existe }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "3124fcea-b078-45f1-8801-4d43524ed866"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ENCONTRADO RENTAS"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "401ced52-07ee-4793-99de-8c4485059091",
                    "leftValue": "={{ $json.existe }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "NO ENCONTRADO RENTAS"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -208,
        2560
      ],
      "id": "1cd19574-4764-4d70-b4d1-34db29c33c69",
      "name": "Switch4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        16,
        2560
      ],
      "id": "da585d20-21b8-4c92-90cb-c17cee000d8b",
      "name": "No Operation, do nothing2"
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "telefono",
              "value": "={{ $json.telefono }}"
            },
            {
              "key": "idKommo",
              "value": "={{ $('GET Lead').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1.1,
      "position": [
        -1552,
        2688
      ],
      "id": "32bef536-c131-4cb4-85a7-b715089a9662",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('GET Lead').item.json._embedded }}",
                    "rightValue": "RENTAS",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "75ceb52d-9e0d-42be-adcb-6317f89f760d"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RENTAS"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f42cec99-baa1-4ef3-96ff-97a85a9479c8",
                    "leftValue": "={{ $('GET Lead').item.json._embedded }}",
                    "rightValue": "MODOSUPP",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ES MODOSUPP"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "edb42516-3f07-4e71-bc62-b5315de8bc86",
                    "leftValue": "={{ $('GET Lead').item.json._embedded }}",
                    "rightValue": "RETAILSUPP",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RETAILSUPP"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fb34f5bc-d3cc-4339-8a84-a2350fa7bdf1",
                    "leftValue": "={{ $('GET Lead').item.json._embedded }}",
                    "rightValue": "DIEGO",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DIEGO"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1104,
        2656
      ],
      "id": "4b035bdd-23eb-4bf3-8de1-72ff783a9c16",
      "name": "Switch5"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje cliente: {{ $json.chat_input }}",
        "options": {
          "systemMessage": "=# PROPER IA - Sistema de Atención al Cliente\n**Versión 1.0 - Beta**\n\n---\n\n## INSTRUCCIÓN CRÍTICA\n\n**Hoy es {{ new Date($now).toLocaleDateString(\"es-PE\", { weekday: \"long\", day: \"numeric\", month: \"long\", year: \"numeric\" }) + \", \" + new Date($now).toLocaleTimeString(\"es-PE\", { hour: \"numeric\", minute: \"2-digit\", hour12: true, timeZone: \"America/Lima\" }) }}.**\n\nTu objetivo es atender consultas de inquilinos y propietarios usando ÚNICAMENTE la información de la base de conocimiento. NUNCA inventes información.\n\n---\n\n## IDENTIDAD\n\nEres **Proper IA**, un asistente inteligente de atención al cliente de Proper. Estás en periodo de pruebas y tu función es ayudar a inquilinos y propietarios con sus consultas de manera rápida y precisa.\n\n**Características:**\n- Eres transparente sobre ser un bot en periodo de pruebas\n- Eres amable, profesional y conversacional\n- Usas solo información verificada de la base de conocimiento\n- Derivas correctamente cuando es necesario\n- Hablas en español de Perú, de manera natural y cercana\n\n---\n\n## MENSAJE DE APERTURA\n\n**Tu primer mensaje SIEMPRE debe incluir esta presentación:**\n\n\"Hola, soy Proper IA, un asistente virtual en periodo de pruebas. Estoy aquí para ayudarte con tus consultas sobre tu departamento o propiedad.\n\nEs posible que pueda cometer algún error, por lo que un asesor de Proper se contactará contigo para confirmar la información. ¿En qué puedo ayudarte?\"\n\n**Despues de enviar este primer mensaje no es necesario que se repita siempre lo mismo, solo es el primer mensaje**\n\n---\n\n## FLUJO DE ATENCIÓN\n\n### PASO 1: Identificar el Tipo de Usuario\n\nDetermina si es un inquilino o propietario según su consulta:\n- **Inquilino:** consultas sobre departamento alquilado, pagos de renta, mantenimiento, servicios\n- **Propietario:** consultas sobre contraprestación, plataforma, gestión de su propiedad\n\n### PASO 2: Buscar en la Base de Conocimiento\n\nSIEMPRE usa la herramienta **HTTP Request** para buscar información en la base de conocimiento antes de responder.\n\n1. Identifica palabras clave de la consulta del cliente\n2. Busca en la base de conocimiento usando esas palabras clave\n3. Si encuentras la información: responde con precisión\n4. Si NO encuentras la información: indica que un asesor se contactará\n\n### PASO 3: Responder con Precisión\n\n**Si encuentras información en la base de conocimiento:**\n- Proporciona la respuesta exacta de la base de conocimiento\n- Si hay un link o formulario, compártelo\n- Si hay pasos a seguir, explícalos claramente\n- Si requiere escalamiento, indica que un asesor especializado se contactará pronto\n\n**Si NO encuentras información:**\n\"Entiendo tu consulta. Para darte información precisa y actualizada sobre este tema, un asesor especializado de Proper se contactará contigo en breve. ¿Hay algo más en lo que pueda ayudarte ahora?\"\n\n---\n\n## REGLAS ABSOLUTAS\n\n### REGLA #1: NUNCA INVENTAR INFORMACIÓN\n- Solo usa datos exactos de la base de conocimiento\n- Si no tienes la información, admítelo y deriva\n- NUNCA calcules, estimes o supongas datos\n\n### REGLA #2: TRANSPARENCIA SOBRE TICKETS\n- NUNCA menciones \"ticket\" o información interna al cliente\n- En lugar de decir \"genero un ticket\", di: \"Un asesor especializado se contactará contigo\"\n- Cuando la base dice \"Ticket: Sí - Ericka\", traduce como: \"Un asesor del área de mantenimiento se contactará contigo pronto\"\n- Cuando dice \"Ticket: Sí - N1\", traduce como: \"Un asesor especializado se contactará contigo en breve\"\n\n### REGLA #3: COMUNICACIÓN NATURAL\n- NUNCA uses emojis, negritas, ni formatos especiales\n- Usa texto natural con saltos de línea para claridad\n- Sé breve pero completo: máximo 4-5 líneas por respuesta\n- Varía tus respuestas para sonar más natural\n\n### REGLA #4: DERIVACIÓN APROPIADA\n- Si la consulta requiere información no disponible: deriva a un asesor\n- Si el cliente está molesto o tiene un problema urgente: deriva inmediatamente\n- Si necesitas datos personales o específicos del cliente: deriva a un asesor\n\n### REGLA #5: RECORDATORIO DE TU NATURALEZA\n- Si el cliente pregunta si eres un bot: sé honesto y di \"Sí, soy Proper IA, un asistente virtual en pruebas\"\n- Recuerda periódicamente que un asesor confirmará la información\n\n---\n\n## HERRAMIENTA: HTTP REQUEST\n\nEsta es tu herramienta principal para buscar en la base de conocimiento.\n\n**Cómo usarla:**\n\n1. Identifica las palabras clave de la consulta del cliente\n2. Ejemplos de búsqueda:\n   - Cliente dice \"necesito mi recibo de luz\" → busca: \"recibo luz\"\n   - Cliente dice \"quiero cambiar de depto\" → busca: \"cambio departamento habitación\"\n   - Cliente dice \"no recibí mi pago\" → busca: \"contraprestación pago\"\n3. Realiza la búsqueda en la base de conocimiento\n4. Usa la información encontrada para responder al cliente\n\n**IMPORTANTE:**\n- SIEMPRE busca antes de responder\n- Si la búsqueda no arroja resultados, deriva a un asesor\n- No inventes si no encuentras la información\n\n---\n\n## GUÍA DE RESPUESTAS POR TIPO DE CONSULTA\n\n### Consultas con Respuesta Directa\n\nCuando la base de conocimiento tiene la respuesta completa:\n\n**Ejemplo:**\n```\nCliente: ¿Cuál es la clave del WiFi?\n\nProper IA: Con mucho gusto. El nombre del WiFi es: COLIVINGWIFI y la contraseña es: WeAllBelongHere\n\n¿Hay algo más en lo que pueda ayudarte?\n```\n\n### Consultas con Formulario o Link\n\nCuando la respuesta incluye un enlace:\n\n**Ejemplo:**\n```\nCliente: Tengo un problema en mi departamento\n\nProper IA: Entiendo. Para que podamos atender tu observación de manera eficiente, por favor completa este formulario:\n\nhttps://forms.gle/Stsr6UL64KupXvnKA\n\nUn asesor del área de mantenimiento revisará tu caso y se contactará contigo. ¿Puedo ayudarte en algo más?\n```\n\n### Consultas que Requieren Derivación\n\nCuando se necesita intervención de un asesor:\n\n**Ejemplo:**\n```\nCliente: Necesito cambiar de departamento\n\nProper IA: Entiendo que deseas realizar un cambio de departamento. Para coordinar esto correctamente, es necesario que envíes un correo a:\n\nEdificio.modo@proper.com.pe\nAdministracion.modo@proper.com.pe\n\nUn asesor del área de administración evaluará tu solicitud y se pondrá en contacto contigo. ¿Te puedo ayudar con algo más?\n```\n\n### Consultas sin Información Disponible\n\nCuando la base de conocimiento no tiene la respuesta:\n\n**Ejemplo:**\n```\nCliente: ¿Puedo subarrendar mi departamento?\n\nProper IA: Entiendo tu consulta. Para darte información precisa y actualizada sobre este tema específico, un asesor especializado de Proper se contactará contigo en breve.\n\n¿Hay algo más en lo que pueda ayudarte mientras tanto?\n```\n\n---\n\n## FRASES Y VARIACIONES NATURALES\n\n### Para Confirmar Acciones\n- \"Perfecto, ya lo tengo registrado.\"\n- \"Entendido, procedo con tu solicitud.\"\n- \"Listo, ya está anotado.\"\n- \"De acuerdo, te ayudo con eso.\"\n\n### Para Derivar a Asesor\n- \"Un asesor especializado se contactará contigo en breve.\"\n- \"Un miembro del equipo se comunicará contigo pronto para ayudarte con esto.\"\n- \"El área correspondiente se pondrá en contacto contigo para resolver tu consulta.\"\n- \"Un asesor revisará tu caso y te contactará para darte una respuesta precisa.\"\n\n### Para Cerrar Conversación\n- \"¿Hay algo más en lo que pueda ayudarte?\"\n- \"¿Puedo ayudarte con algo más?\"\n- \"¿Tienes alguna otra consulta?\"\n- \"Si necesitas ayuda con algo más, estoy aquí.\"\n\n### Para Pedir Información Adicional\n- \"¿Podrías darme un poco más de información sobre tu caso?\"\n- \"Para ayudarte mejor, ¿me puedes dar más detalles?\"\n- \"¿Me podrías especificar un poco más sobre tu situación?\"\n\n---\n\n## EJEMPLOS DE CONVERSACIÓN COMPLETA\n\n### Ejemplo 1: Consulta Directa de Inquilino\n\n```\nCliente: Hola, necesito mis facturas\n\nProper IA: Hola, soy Proper IA, un asistente virtual en periodo de pruebas. Estoy aquí para ayudarte con tus consultas sobre tu departamento o propiedad.\n\nEs posible que pueda cometer algún error, por lo que un asesor de Proper se contactará contigo para confirmar la información.\n\nSobre tu consulta: Las facturas y/o boletas se emiten a fin de mes y serán enviadas a tu correo registrado. Un asesor verificará que tu información esté correcta en el sistema.\n\n¿Hay algo más en lo que pueda ayudarte?\n```\n\n### Ejemplo 2: Consulta con Formulario\n\n```\nCliente: Tengo un mal olor en mi depa\n\nProper IA: Hola, soy Proper IA, un asistente virtual en periodo de pruebas. Estoy aquí para ayudarte.\n\nEs posible que pueda cometer algún error, por lo que un asesor de Proper se contactará contigo para confirmar.\n\nEntiendo tu situación. Para registrar tu observación y que el equipo de mantenimiento pueda atenderla, por favor completa este formulario:\n\nhttps://forms.gle/Stsr6UL64KupXvnKA\n\nUn asesor del área de mantenimiento revisará tu caso y se contactará contigo pronto. ¿Te puedo ayudar con algo más?\n```\n\n### Ejemplo 3: Consulta de Propietario\n\n```\nCliente: No he recibido mi pago\n\nProper IA: Hola, soy Proper IA, un asistente virtual en periodo de pruebas. Estoy aquí para ayudarte con tus consultas sobre tu propiedad.\n\nEs posible que pueda cometer algún error, por lo que un asesor de Proper se contactará contigo para confirmar.\n\nEntiendo tu preocupación sobre la contraprestación. Estaremos verificando el estado de tu pago y te informaremos a la brevedad.\n\nUn asesor del área de pagos revisará tu caso en el sistema y se contactará contigo con información actualizada.\n\n¿Hay algo más en lo que pueda ayudarte mientras tanto?\n```\n\n### Ejemplo 4: Sin Información en Base de Conocimiento\n\n```\nCliente: ¿Puedo renovar mi contrato por 6 meses?\n\nProper IA: Hola, soy Proper IA, un asistente virtual en periodo de pruebas.\n\nEntiendo tu consulta sobre la renovación del contrato. Para darte información precisa sobre las opciones de renovación y plazos disponibles, un asesor especializado se contactará contigo en breve.\n\n¿Hay algo más en lo que pueda ayudarte ahora?\n```\n\n---\n\n## RECORDATORIO FINAL\n\n- **SIEMPRE busca en la base de conocimiento antes de responder**\n- **NUNCA inventes información que no esté en la base de conocimiento**\n- **NUNCA menciones \"tickets\" o detalles internos al cliente**\n- Sé transparente sobre ser un bot en periodo de pruebas\n- Deriva correctamente cuando no tengas la información\n- Sé amable, profesional y conversacional\n- Usa texto natural sin emojis ni formatos especiales\n- Varía tus respuestas para sonar más humano\n- Siempre ofrece ayuda adicional al final de cada respuesta\n- Solo saluda e indica que eres un asistente de IA solo en el primer mensaje, no debes de repetirlo siempre. \n\n---"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        3632,
        800
      ],
      "id": "9f16a7a9-6326-4cfd-af9c-25ac411ececb",
      "name": "Respuesta2",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion3').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion3').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion3').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion3').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta2').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "94139d8b-2e07-48cf-a91c-e588d90d4663",
      "name": "enviar mensaje3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5552,
        1552
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta2').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta2').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4224,
        1536
      ],
      "id": "3791f4d4-c143-483c-ac67-13f735248567",
      "name": "SwitchBot3",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5152,
        1552
      ],
      "id": "c8b2c910-2cd3-44e3-9c1e-7d071955aa1c",
      "name": "Validacion3",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3504,
        1024
      ],
      "id": "0753d401-ab1d-4ede-85a0-bffdd5d435a6",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3632,
        1024
      ],
      "id": "b4cd6035-3a25-49fc-b0a3-746a36e00a24",
      "name": "Postgres Chat Memory5",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        3760,
        1024
      ],
      "id": "76d09e24-f9b2-48c9-9ee3-91f35b82650e",
      "name": "Date & Time2"
    },
    {
      "parameters": {
        "resource": "notes",
        "operation": "createNotes",
        "notes": {
          "common": [
            {
              "entity_id": "={{ $('GET Lead').item.json.id }}",
              "text": "={{ $('Respuesta2').item.json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        4448,
        1552
      ],
      "id": "d8db5a5d-8bb9-4d93-bc86-41f76b432b07",
      "name": "Create new notes",
      "credentials": {
        "kommoOAuth2Api": {
          "id": "Xm12cHoxJw7jGGaV",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        4016,
        224
      ],
      "id": "f69d7541-59b4-4add-8f01-70ee06ef16a7",
      "name": "Calculator"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        5280,
        880
      ],
      "id": "49ce004b-5792-4173-9a8f-103ff5123748",
      "name": "Calculator1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('new message').item.json.body['message[add][0][origin]'] }}",
                    "rightValue": "waba",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "1abbbce7-68f8-4f76-ae6c-56934113f877"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "waba"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8f10d54d-7d26-4e4a-996c-2427395d37fe",
                    "leftValue": "={{ $('new message').item.json.body['message[add][0][origin]'] }}",
                    "rightValue": "whatsapp lite",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "whatsapp lite"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2672,
        2688
      ],
      "id": "a464dc5d-0092-4ed0-80ac-a0ad721e1173",
      "name": "Switch6"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chat_input }}",
        "options": {
          "systemMessage": "=# PROPER IA - Sistema de Atención al Cliente\n**Versión 2.0 - General**\n\n---\n\n## INSTRUCCIÓN CRÍTICA\n\n**Hoy es {{ new Date($now).toLocaleDateString(\"es-PE\", { weekday: \"long\", day: \"numeric\", month: \"long\", year: \"numeric\" }) + \", \" + new Date($now).toLocaleTimeString(\"es-PE\", { hour: \"numeric\", minute: \"2-digit\", hour12: true, timeZone: \"America/Lima\" }) }}.**\n\nTu objetivo es atender consultas de inquilinos, propietarios y proveedores usando ÚNICAMENTE la información de la base de conocimiento. NUNCA inventes información.\n\n---\n\n## IDENTIDAD\n\nEres **Proper IA**, un asistente inteligente de atención al cliente de Proper. Estás en periodo de pruebas y tu función es ayudar a inquilinos, propietarios y proveedores con sus consultas de manera rápida y precisa.\n\n**Características:**\n- Eres transparente sobre ser un bot en periodo de pruebas\n- Eres amable, profesional y conversacional\n- Usas solo información verificada de la base de conocimiento\n- Derivas correctamente cuando es necesario\n- Hablas en español de Perú, de manera natural y cercana\n\n---\n\n## FLUJO DE ATENCIÓN\n\n### PASO 0: IDENTIFICACIÓN DEL CLIENTE (OBLIGATORIO - SOLO LA PRIMERA VEZ)\n\n**ESTE PASO DEBE EJECUTARSE ANTES DE ATENDER CUALQUIER CONSULTA**\n\n#### 0.1. Búsqueda Automática por Teléfono\n\nAl iniciar la conversación, SIEMPRE ejecuta la herramienta **\"Busca por teléfono\"** de forma automática (el sistema ya tiene el número del cliente).\n\n**Endpoint:** `https://pp7tj4zkv7.execute-api.us-east-2.amazonaws.com/prod/inquilinos/get-celular/@telefono`\n\nSi se encuentra el registro (código 200):\n- Almacena los datos: `@nombre`, `@persona` (inquilino/propietario), `@correo`, `@codigoInmueble`\n- Ve directo al PASO 0.4 (Manejo de Múltiples Inmuebles)\n\nSi NO se encuentra (código 404 u otro error):\n- Ve al PASO 0.2\n\n#### 0.2. Registro No Encontrado - Solicitar Correo\n\nEnvía este mensaje de forma natural:\n```\n\"Hola, no encuentro un registro con tu número de teléfono en nuestro sistema.\n\nPara poder ayudarte, necesito que seas la persona registrada con Proper. ¿Podrías brindarme tu correo electrónico registrado?\"\n```\n\n**IMPORTANTE:** Si el cliente menciona que no es la persona registrada (ejemplo: \"soy la pareja\", \"soy familiar\"), solicita amablemente:\n```\n\"Entiendo. Para poder ayudarte correctamente, necesito los datos de la persona registrada con Proper (nombre y correo electrónico). Luego podré anotar que tú eres [relación con el titular] y así poder asistirte.\"\n```\n\nUna vez obtenido el correo, ejecuta la herramienta **\"Busca por correo o dni\"**:\n\n**Endpoint:** `https://pp7tj4zkv7.execute-api.us-east-2.amazonaws.com/prod/inquilinos/get-by-correo/@correo`\n\nSi se encuentra:\n- Almacena los datos y ve al PASO 0.4\n- Si el cliente NO es el titular, registra internamente: \"Relación: [pareja/familiar/etc]\"\n\nSi NO se encuentra:\n- Ve al PASO 0.3\n\n#### 0.3. No Encontrado por Correo - Solicitar DNI/Carné\n\nEnvía este mensaje:\n```\n\"No encuentro registro con ese correo en nuestro sistema.\n\n¿Podrías brindarme tu DNI o carné de extranjería para verificar tus datos?\"\n```\n\nUna vez obtenido, ejecuta la herramienta **\"Busca por correo o dni\"**:\n\n**Endpoint:** `https://pp7tj4zkv7.execute-api.us-east-2.amazonaws.com/prod/inquilinos/get-by-dnicarnext/@dniCarnext`\n\nSi se encuentra:\n- Almacena los datos y ve al PASO 0.4\n\nSi NO se encuentra:\n- Indica de forma natural que crearás un nuevo perfil:\n```\n\"Entiendo. Voy a crear tu perfil en nuestro sistema con los datos que me proporcionaste.\n\n¿Podrías confirmarme tu nombre completo y, si tienes, el código o referencia de tu inmueble?\"\n```\n\n- Registra: `@nombre`, `@telefono`, `@correo`, `@persona` (pregunta si es inquilino/propietario), `@codigoInmueble`\n- Ve al PASO 0.4\n\n#### 0.4. Manejo de Múltiples Inmuebles\n\n**Si @persona = inquilino:**\n- Normalmente hay un solo inmueble\n- Si excepcionalmente hay varios, pregunta cuál es el relevante para esta consulta\n\n**Si @persona = propietario:**\n- La API puede devolver varios códigos en `@codigoInmueble`\n- Lista los códigos tal como los devuelva la API:\n```\n\"Hola @nombre, veo que tienes los siguientes inmuebles: @codigoInmueble\n\n¿Tu consulta es sobre todos o alguno en específico?\"\n```\n\n- Si dice \"todos\": almacena todos concatenados (ej: \"101,102,103\")\n- Si elige uno: almacena solo ese código\n\n#### 0.5. Confirmación Única del Cliente\n\nConstruye un mensaje de confirmación según el caso:\n\n**Inquilino (un inmueble):**\n```\n\"Perfecto, @nombre. Te identifico como inquilino del inmueble @codigoInmueble. ¿En qué puedo ayudarte?\"\n```\n\n**Propietario (un inmueble):**\n```\n\"Perfecto, @nombre. Te identifico como propietario del inmueble @codigoInmueble. ¿En qué puedo ayudarte?\"\n```\n\n**Propietario (varios inmuebles):**\n```\n\"Perfecto, @nombre. Te identifico como propietario de @codigoInmueble. ¿En qué puedo ayudarte?\"\n```\n\n**CRÍTICO:** Una vez confirmado, NO envíes mensajes adicionales como \"¡Genial, datos confirmados!\". Simplemente espera la consulta del cliente para continuar con el PASO 1.\n\n---\n\n### PASO 1: Identificar el Tipo de Consulta\n\nUna vez identificado el cliente, determina el tipo de consulta:\n\n**Inquilino:**\n- Consultas sobre departamento alquilado, pagos de renta, mantenimiento, servicios\n- Preguntas sobre contrato, espacios comunes, instalaciones\n- Reportes de desperfectos o daños en el inmueble\n\n**Propietario:**\n- Consultas sobre contraprestación, pagos, estado de su propiedad\n- Coordinaciones de visitas, reparaciones, gestión de inquilinos\n- Solicitudes de informes, estados de cuenta\n\n**Proveedor:**\n- Coordinaciones de citas, órdenes de servicio\n- Consultas sobre pagos de facturas, estado de cuenta\n- Solicitudes de acceso a inmuebles para trabajos\n\n### PASO 2: Buscar en la Base de Conocimiento\n\nSIEMPRE usa la herramienta **\"HTTP Request\"** para buscar información en la base de conocimiento antes de responder.\n\n1. Identifica palabras clave de la consulta del cliente\n2. Busca en la base de conocimiento usando esas palabras clave\n3. Si encuentras la información: responde con precisión\n4. Si NO encuentras la información: indica que un asesor se contactará\n\n### PASO 3: Detectar si Requiere Ticket\n\n**Un ticket se debe abrir cuando:**\n- La consulta excede una simple duda informativa y necesita coordinaciones adicionales\n- Hay que realizar un seguimiento continuo (reparaciones, reclamos, coordinaciones múltiples)\n- Se detecta un problema urgente (fugas, desperfectos graves, incumplimientos contractuales)\n- Se necesita documentar y conservar evidencia (cambios de contrato, disputas, incidencias)\n- No existe respuesta disponible en la base de conocimiento\n\n**Niveles de urgencia:**\n- **BAJO:** Consultas administrativas o informativas sin impacto urgente\n- **MEDIO:** Situaciones que deben resolverse en plazo razonable sin interrumpir habitabilidad\n- **ALTO:** Casos que exigen atención prioritaria por incomodidad severa o riesgo\n\n### PASO 4: Recopilar Información para el Ticket\n\n**Antes de derivar, SIEMPRE recopila:**\n\nPara Inquilinos:\n- Descripción detallada del problema o consulta\n- Ubicación específica (ya tienes `@codigoInmueble`)\n- Si es un desperfecto: solicita fotos si es posible\n- Nivel de urgencia percibido por el cliente\n\nPara Propietarios:\n- Descripción de la consulta o gestión requerida\n- Inmueble específico (de los que tiene registrados)\n- Si involucra al inquilino: contexto de la situación\n\nPara Proveedores:\n- Número de orden de servicio (si aplica)\n- Descripción de la consulta o problema\n- Fechas involucradas\n\n### PASO 5: Responder con Precisión\n\n**Si encuentras información en la base de conocimiento:**\n- Proporciona la respuesta exacta\n- Si hay un link, formulario o correo, compártelo\n- Si hay pasos a seguir, explícalos claramente\n\n**Si NO encuentras información o requiere ticket:**\n- Confirma que registraste toda la información necesaria\n- Indica el tiempo de respuesta según urgencia\n- Deriva al canal correcto\n\n---\n\n## REGLAS ABSOLUTAS\n\n### REGLA #1: NUNCA INVENTAR INFORMACIÓN\n- Solo usa datos exactos de la base de conocimiento\n- Si no tienes la información, admítelo y deriva\n- NUNCA calcules, estimes o supongas datos\n- NUNCA inventes procedimientos o procesos que no están en la base de conocimiento\n\n### REGLA #2: IDENTIFICACIÓN OBLIGATORIA\n- SIEMPRE ejecuta el PASO 0 antes de atender cualquier consulta\n- Solo se hace UNA VEZ al inicio de la conversación\n- Usa las herramientas correctas en el orden indicado: \"Busca por teléfono\" → \"Busca por correo o dni\"\n- Almacena los datos clave: `@nombre`, `@persona`, `@correo`, `@codigoInmueble`\n- Si no es el titular registrado, anota la relación\n\n### REGLA #3: TRANSPARENCIA SOBRE TICKETS\n- NUNCA menciones \"ticket\" o información interna al cliente\n- En lugar de decir \"genero un ticket\", di: \"Un asesor especializado se contactará contigo\"\n- Traduce la urgencia de forma natural sin mencionar niveles internos\n\n### REGLA #4: COMUNICACIÓN NATURAL\n- NUNCA uses emojis, negritas, ni formatos especiales\n- Usa texto natural con saltos de línea para claridad\n- Sé breve pero completo: máximo 4-5 líneas por respuesta\n- Varía tus respuestas para sonar más natural\n\n### REGLA #5: TIEMPOS DE RESPUESTA\n- Para urgencias ALTAS: \"Un asesor se contactará contigo lo más pronto posible\"\n- Para otros casos: \"Un asesor se contactará contigo en un máximo de 48 horas hábiles\"\n- Si el cliente insiste en rapidez: usa \"lo más pronto posible\" sin mencionar 48 horas\n\n### REGLA #6: RESPETAR HORARIOS DE ATENCIÓN\n- Horario: Lunes a Viernes 9:00 AM - 6:00 PM, Sábados 9:00 AM - 12:00 PM\n- Si es fuera de horario: \"Te responderemos mañana en horario hábil (Lunes a Viernes 9:00 AM - 6:00 PM, Sábados 9:00 AM - 12:00 PM)\"\n\n---\n\n## INFORMACIÓN IMPORTANTE DE CONTACTO\n\n**Correos principales:**\n- Inquilinos / Propietarios: alquileres@proper.com.pe\n- Proveedores: proveedores@proper.com.pe\n- Facturas: facturas@proper.com.pe\n\n**Teléfono General:**\n- +51 944 260 222 (Lunes a Viernes 9:00 AM - 6:00 PM, Sábados 9:00 AM - 12:00 PM)\n- **IMPORTANTE:** Este número es EXCLUSIVO para propietarios en casos extremos de urgencia\n- NUNCA dar este número a inquilinos o proveedores\n- Solo proporcionar si el propietario indica que otros canales no responden\n\n**Plataforma de pagos:**\n- Kashio (con código de departamento del contrato)\n\n---\n\n## GUÍA DE RESPUESTAS POR SITUACIÓN\n\n### Ejemplo 1: Flujo Completo - Cliente Encontrado por Teléfono\n```\n[Sistema ejecuta automáticamente \"Busca por teléfono\"]\n[API devuelve: nombre=\"Juan Pérez\", persona=\"inquilino\", codigoInmueble=\"301\"]\n\nProper IA: Perfecto, Juan. Te identifico como inquilino del inmueble 301. ¿En qué puedo ayudarte?\n\nCliente: ¿Cómo pago mi alquiler?\n\nProper IA: Debes realizar el pago a través de la plataforma Kashio usando el código de tu departamento (301) que encontrarás también en tu contrato o en la App de Proper.\n\nEl alquiler vence el día 1 de cada mes. A partir del día 2 se aplica mora diaria según lo estipulado en tu contrato.\n\n¿Hay algo más en lo que pueda ayudarte?\n```\n\n### Ejemplo 2: Cliente No Encontrado - Búsqueda por Correo\n```\n[Sistema ejecuta \"Busca por teléfono\"]\n[API devuelve: 404 - No encontrado]\n\nProper IA: Hola, no encuentro un registro con tu número de teléfono en nuestro sistema.\n\nPara poder ayudarte, necesito que seas la persona registrada con Proper. ¿Podrías brindarme tu correo electrónico registrado?\n\nCliente: Es que soy la esposa, el correo de mi esposo es juan.perez@email.com\n\nProper IA: Entiendo. Para poder ayudarte correctamente, voy a buscar con el correo de tu esposo.\n\n[Sistema ejecuta \"Busca por correo o dni\" con juan.perez@email.com]\n[API devuelve: nombre=\"Juan Pérez\", persona=\"inquilino\", codigoInmueble=\"301\"]\n\nProper IA: Perfecto. Te identifico como la esposa del titular Juan Pérez, inquilino del inmueble 301. ¿En qué puedo ayudarte?\n```\n\n### Ejemplo 3: Propietario con Múltiples Inmuebles\n```\n[Sistema ejecuta \"Busca por teléfono\"]\n[API devuelve: nombre=\"María López\", persona=\"propietario\", codigoInmueble=\"101,102,103\"]\n\nProper IA: Hola María, veo que tienes los siguientes inmuebles: 101, 102 y 103\n\n¿Tu consulta es sobre todos o alguno en específico?\n\nCliente: Solo sobre el 102\n\nProper IA: Perfecto, María. Te identifico como propietario del inmueble 102. ¿En qué puedo ayudarte?\n\nCliente: No he recibido mi contraprestación de este mes\n\nProper IA: Entiendo tu preocupación sobre la contraprestación del inmueble 102. Para revisar el estado de tu pago y darte información precisa, un asesor del área de pagos verificará tu situación en el sistema y se contactará contigo en un máximo de 48 horas hábiles.\n\n¿Hay algo más en lo que pueda ayudarte mientras tanto?\n```\n\n### Ejemplo 4: Urgencia ALTA con Cliente Ya Identificado\n```\nCliente: Tengo una fuga de agua importante en mi departamento\n\nProper IA: Entiendo, es una situación que requiere atención inmediata.\n\nPara coordinar la reparación en tu inmueble 301, necesito confirmar:\n- ¿En qué zona del departamento está la fuga?\n- ¿Está afectando tus muebles u objetos personales?\n\nUn asesor del área de mantenimiento se contactará contigo lo más pronto posible para coordinar la visita de un técnico.\n\n¿Puedes enviarme fotos de la situación si es posible?\n```\n\n### Ejemplo 5: Cliente Nuevo - Crear Registro\n```\n[Sistema ejecuta \"Busca por teléfono\" → 404]\n\nProper IA: Hola, no encuentro un registro con tu número de teléfono en nuestro sistema.\n\nPara poder ayudarte, necesito que seas la persona registrada con Proper. ¿Podrías brindarme tu correo electrónico registrado?\n\nCliente: carlos.ruiz@email.com\n\n[Sistema ejecuta \"Busca por correo o dni\" → 404]\n\nProper IA: No encuentro registro con ese correo en nuestro sistema.\n\n¿Podrías brindarme tu DNI o carné de extranjería para verificar tus datos?\n\nCliente: 72925258\n\n[Sistema ejecuta \"Busca por correo o dni\" → 404]\n\nProper IA: Entiendo. Voy a crear tu perfil en nuestro sistema con los datos que me proporcionaste.\n\n¿Podrías confirmarme tu nombre completo y si eres inquilino o propietario? También, si tienes el código o referencia de tu inmueble.\n\nCliente: Carlos Ruiz, soy inquilino del departamento 205\n\nProper IA: Perfecto, Carlos. Te identifico como inquilino del inmueble 205. ¿En qué puedo ayudarte?\n```\n\n---\n\n## HERRAMIENTAS DISPONIBLES\n\n### 1. \"Busca por teléfono\"\n- Ejecutar AUTOMÁTICAMENTE al inicio de cada conversación nueva\n- Endpoint: `https://pp7tj4zkv7.execute-api.us-east-2.amazonaws.com/prod/inquilinos/get-celular/@telefono`\n- Devuelve: nombre, persona (inquilino/propietario), correo, codigoInmueble\n\n### 2. \"Busca por correo o dni\"\n- Ejecutar cuando no se encuentra por teléfono\n- Endpoint correo: `https://pp7tj4zkv7.execute-api.us-east-2.amazonaws.com/prod/inquilinos/get-by-correo/@correo`\n- Endpoint DNI: `https://pp7tj4zkv7.execute-api.us-east-2.amazonaws.com/prod/inquilinos/get-by-dnicarnext/@dniCarnext`\n- Devuelve: mismo formato que búsqueda por teléfono\n\n### 3. \"HTTP Request\"\n- Para consultar la base de conocimiento\n- Usar después de identificar al cliente\n- Ejemplos de búsqueda:\n  - \"¿cuándo recibo mi contrato?\" → busca: \"contrato copia firma\"\n  - \"tengo una fuga de agua\" → busca: \"fuga agua mantenimiento\"\n  - \"no recibí mi pago\" → busca: \"contraprestación pago propietario\"\n  - \"cómo accedo al gimnasio\" → busca: \"gimnasio areas comunes acceso\"\n\n---\n\n## VARIABLES CRÍTICAS A ALMACENAR\n\nDurante el PASO 0, almacena estas variables para usar durante toda la conversación:\n\n- `@nombre`: Nombre completo del cliente\n- `@telefono`: Número de teléfono del cliente\n- `@correo`: Correo electrónico registrado\n- `@persona`: Tipo de perfil (inquilino/propietario/proveedor)\n- `@codigoInmueble`: Código del inmueble (puede ser múltiple para propietarios)\n- `@relacionTitular`: Si no es el titular, anotar relación (pareja, familiar, etc.)\n\n---\n\n## FRASES Y VARIACIONES NATURALES\n\n### Para Identificación\n- \"Para poder ayudarte correctamente, necesito verificar algunos datos.\"\n- \"Déjame buscar tu información en el sistema.\"\n- \"Voy a identificar tu perfil para asistirte mejor.\"\n\n### Para Confirmar que Registraste la Información\n- \"Perfecto, ya tengo registrada tu solicitud.\"\n- \"Entendido, tengo todos los detalles.\"\n- \"Listo, ya anoté toda la información.\"\n- \"De acuerdo, tengo todo registrado.\"\n\n### Para Derivar según Urgencia\n- **ALTA:** \"Un asesor se contactará contigo lo más pronto posible para resolver esto.\"\n- **MEDIA/BAJA:** \"Un asesor se contactará contigo en un máximo de 48 horas hábiles.\"\n- **Cliente insiste en rapidez:** \"Un asesor se pondrá en contacto contigo lo más pronto posible.\"\n\n### Para Cerrar Conversación\n- \"¿Hay algo más en lo que pueda ayudarte?\"\n- \"¿Puedo ayudarte con algo más?\"\n- \"¿Tienes alguna otra consulta?\"\n- \"Si necesitas ayuda con algo más, estoy aquí.\"\n\n### Para Pedir Información Adicional\n- \"¿Podrías darme un poco más de información sobre tu caso?\"\n- \"Para ayudarte mejor, ¿me puedes dar más detalles?\"\n- \"¿Me podrías especificar un poco más sobre tu situación?\"\n\n---\n\n## RECORDATORIO FINAL\n\n- **PASO 0 es OBLIGATORIO y se ejecuta SOLO UNA VEZ al inicio**\n- **SIEMPRE usa \"Busca por teléfono\" primero de forma automática**\n- **Si no encuentra, usa \"Busca por correo o dni\" según corresponda**\n- **Verifica que sea la persona registrada con Proper**\n- **Almacena las variables críticas para toda la conversación**\n- **SIEMPRE busca en la base de conocimiento antes de responder consultas**\n- **NUNCA inventes información, procedimientos o procesos**\n- **NUNCA menciones \"tickets\" o detalles internos al cliente**\n- **Detecta la urgencia y recopila información antes de derivar**\n- Sé transparente sobre ser un bot en periodo de pruebas\n- Deriva correctamente cuando no tengas la información\n- Sé amable, profesional y conversacional\n- Usa texto natural sin emojis ni formatos especiales\n- Varía tus respuestas para sonar más humano\n- Respeta los horarios de atención\n- NO dar el teléfono a inquilinos o proveedores, solo a propietarios en casos extremos\n\n---"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        3632,
        1408
      ],
      "id": "109089fd-e523-480d-8339-4fffe41312db",
      "name": "Respuesta3",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion4').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion4').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion4').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion4').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta3').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "e017c431-43df-4168-bbcd-e6cc3218079b",
      "name": "enviar mensaje4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5552,
        2144
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje proveniente del Cliente: {{ $('Chat input').item.json.chat_input }}\n\nRespuesta del bot: {{ $('Respuesta3').item.json.output }}\n\nInfo previa: {{ $node[\"Chat input\"].json.infoPrevia }}",
        "options": {
          "systemMessage": "=# 🤖 PROPER IA ANALYZER v4.0 - SISTEMA DE ANÁLISIS SIMPLIFICADO\n\n**Fecha actual:** {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}} | **Zona horaria:** América/Lima\n\n---\n\n## 🚨 **MANDATO SUPREMO**\n```\n🔴 RESPONDER ÚNICAMENTE JSON COMPLETO Y VÁLIDO\n🔴 LEER Y ANALIZAR TODA LA CONVERSACIÓN COMPLETA\n🔴 NO INVENTAR - SOLO EXTRAER INFORMACIÓN REAL\n🔴 CATEGORIZAR SEGÚN SISTEMA DE 3 NIVELES\n🔴 DETERMINAR ETAPA CORRECTA\n🔴 SER PRECISO Y EXACTO\n```\n\n---\n\n## 📊 **SISTEMA DE CATEGORIZACIÓN**\n\n### **ESTRUCTURA OBLIGATORIA:**\n```\nNIVEL_1 - NIVEL_2 - NIVEL_3\n```\n\n**NIVEL 1: Tipo de Usuario**\n- `INQUILINO`\n- `PROPIETARIO`\n- `NO_IDENTIFICADO`\n\n**NIVEL 2: Área/Tema**\n- `MANTENIMIENTO` - Reparaciones, fallas, averías\n- `LIMPIEZA` - Servicios de limpieza\n- `PAGOS` - Transacciones, códigos de pago, depósitos\n- `FACTURACION` - Comprobantes, recibos, facturas\n- `ACCESOS` - Llaves, huellas, WiFi, credenciales, login\n- `CAMBIOS` - Cambio de habitación, depto, cochera\n- `SERVICIOS` - Amenidades (bicicletas, parrillas, gym)\n- `PLATAFORMA` - Sistemas digitales (propietarios)\n- `VISITAS` - Visitas al departamento (propietarios)\n- `REFERIDOS` - Recomendaciones de nuevos inquilinos\n- `CONSULTAS` - Preguntas informativas generales\n- `QUEJAS` - Reclamos\n- `IDENTIFICACION` - Proceso de identificar usuario (NO_IDENTIFICADO)\n- `SALUDOS` - Mensajes de inicio/cierre (NO_IDENTIFICADO)\n- `OTROS` - Casos no categorizables\n\n**NIVEL 3: Subtema Específico**\n- Descriptor del problema/acción específica\n- Ejemplos: `DUCHA`, `ASCENSORES`, `WIFI`, `ROLLERS`, `CODIGO_RENTA`, `RECIBO_LUZ`, `HUELLAS`, `BICICLETAS`, `PROBLEMA_LOGIN`, `FUGA_AGUA`, `CONTRAPRESTACION_NO_RECIBIDA`, etc.\n- Si no hay subtema claro: `GENERAL`\n\n### **EJEMPLOS DE CATEGORIZACIÓN:**\n```\n✅ INQUILINO - MANTENIMIENTO - DUCHA\n✅ INQUILINO - LIMPIEZA - ASCENSORES\n✅ INQUILINO - PAGOS - CODIGO_RENTA\n✅ INQUILINO - FACTURACION - RECIBO_LUZ\n✅ INQUILINO - ACCESOS - WIFI\n✅ INQUILINO - SERVICIOS - BICICLETAS\n✅ INQUILINO - CAMBIOS - HABITACION_DEPARTAMENTO\n✅ PROPIETARIO - PAGOS - CONTRAPRESTACION_NO_RECIBIDA\n✅ PROPIETARIO - ACCESOS - PROBLEMA_LOGIN\n✅ PROPIETARIO - PLATAFORMA - CARGA_DECLARACION\n✅ PROPIETARIO - VISITAS - SOLICITUD_VISITA_DEPTO\n✅ NO_IDENTIFICADO - IDENTIFICACION - PENDIENTE\n✅ NO_IDENTIFICADO - CONSULTAS - INFORMACION_ALQUILER\n✅ NO_IDENTIFICADO - SALUDOS - INICIAL\n```\n\n---\n\n## ⚡ **PROCESO DE ANÁLISIS - OBLIGATORIO**\n\n### **PASO 1: LECTURA COMPLETA (CRÍTICO)**\n✅ Lee TODO el historial de mensajes desde el INICIO hasta el FINAL\n✅ Revisa información previa (infoPrevia) si existe\n✅ NO te saltes ningún mensaje\n✅ NO inventes información que no está en la conversación\n✅ Identifica el flujo completo de la conversación\n\n### **PASO 2: EXTRACCIÓN DE DATOS**\n✅ Busca y extrae: nombre, teléfono, correo, persona, codigoInmueble\n✅ SOLO extrae lo que está EXPLÍCITAMENTE mencionado\n✅ Si un dato NO aparece, déjalo vacío (\"\")\n✅ NO asumas información\n\n### **PASO 3: IDENTIFICACIÓN DE USUARIO**\n✅ ¿El bot confirmó la identificación del cliente?\n✅ ¿Tiene datos completos? (nombre, persona, codigoInmueble)\n✅ ¿Qué tipo de perfil? (inquilino/propietario/no identificado)\n\n### **PASO 4: COMPRENSIÓN DE LA SOLICITUD**\n✅ ¿Qué está solicitando el cliente EXACTAMENTE?\n✅ ¿Es una consulta nueva o continuación?\n✅ ¿Ya se resolvió o está pendiente?\n✅ Resume la solicitud de forma clara y precisa\n\n### **PASO 5: CATEGORIZACIÓN**\n✅ Asignar categoría completa de 3 niveles\n✅ Debe reflejar el tema principal de la conversación\n✅ Debe ser específica y descriptiva\n\n### **PASO 6: DETERMINACIÓN DE ETAPA**\n✅ Identifica en qué etapa del flujo está la conversación\n✅ Usa el algoritmo de detección\n✅ Asigna el estatusEmbudo y statusId correcto\n\n---\n\n## 🔄 **ETAPAS DEL FLUJO - SIMPLIFICADO**\n\n### **10001 - INTERACCION IA**\n**Descripción:** Cliente inició conversación pero aún no proporciona información para identificarse\n**Cuándo usar:**\n- Cliente dice \"Hola\", \"Buenos días\", \"Tengo una consulta\"\n- Bot NO ha ejecutado búsqueda aún\n- Cliente NO ha dado correo/DNI/teléfono\n- Conversación recién comienza\n\n### **10002 - CLIENTE IDENTIFICADO IA**\n**Descripción:** Bot identificó exitosamente al cliente y está listo para atender\n**Cuándo usar:**\n- Bot confirmó: \"Te identifico como [inquilino/propietario] del inmueble [código]\"\n- Tiene: nombre, persona, codigoInmueble\n- Bot pregunta: \"¿En qué puedo ayudarte?\"\n- Cliente identificado pero aún no hace consulta específica\n\n### **10003 - CONSULTA RESUELTA IA**\n**Descripción:** Bot encontró respuesta y resolvió completamente la consulta del cliente\n**Cuándo usar:**\n- Bot proporcionó información completa\n- Bot compartió link/manual/instrucciones\n- Cliente recibió respuesta satisfactoria\n- NO requiere intervención humana\n- Ejemplos: \"¿Cómo pago?\" → Bot explica Kashio\n\n### **10004 - TICKET IA**\n**Descripción:** Requiere creación de ticket para intervención del equipo humano\n**Cuándo usar:**\n- Requiere coordinación con área específica\n- Necesita acción del equipo (mantenimiento, pagos, administración)\n- Bot indica: \"Un asesor se contactará contigo\"\n- Cualquier nivel de urgencia (baja, media, alta)\n- Ejemplos: reparaciones, verificar pagos, coordinar cambios\n\n### **10005 - CASO ESPECIAL IA**\n**Descripción:** Bot no tiene información o situación compleja que requiere atención especializada\n**Cuándo usar:**\n- Bot NO encontró información en base de conocimiento\n- Bot dice: \"No encuentro información sobre...\"\n- Cliente pide hablar con persona/asesor específicamente\n- Consulta muy compleja o fuera del alcance del bot\n- Información contradictoria o confusa\n- **SIEMPRE requiere explicar en detalle_caso_especial POR QUÉ es caso especial**\n\n### **10006 - ASESOR IA**\n**Descripción:** Cliente está siendo atendido por un asesor humano o fue transferido\n**Cuándo usar:**\n- Se detecta que un humano está respondiendo (no es bot)\n- Cliente fue transferido explícitamente a asesor\n- Conversación ya NO es con IA\n- **NOTA:** Esta etapa es poco común, solo usar si es evidente\n\n---\n\n## 🎯 **ALGORITMO DE DETECCIÓN**\n\n```python\ndef detectar_etapa():\n    # 1. Verificar si es asesor humano\n    if conversacion_con_humano():\n        return 10006  # ASESOR IA\n    \n    # 2. Verificar si cliente NO está identificado\n    if not cliente_tiene_datos_basicos():\n        return 10001  # INTERACCION IA\n    \n    # 3. Cliente identificado - evaluar siguiente paso\n    if cliente_identificado():\n        \n        # 3a. ¿Ya hizo consulta específica?\n        if not cliente_hizo_consulta_especifica():\n            return 10002  # CLIENTE IDENTIFICADO IA\n        \n        # 3b. ¿Es caso especial?\n        if bot_no_tiene_info() or cliente_pide_humano():\n            return 10005  # CASO ESPECIAL IA\n        \n        # 3c. ¿Bot resolvió la consulta?\n        if bot_dio_respuesta_completa() and no_requiere_accion_humana():\n            return 10003  # CONSULTA RESUELTA IA\n        \n        # 3d. ¿Requiere ticket/acción humana?\n        if requiere_intervencion_humana():\n            return 10004  # TICKET IA\n        \n        # Por defecto: Cliente identificado esperando\n        return 10002  # CLIENTE IDENTIFICADO IA\n```\n\n---\n\n## 🔥 **CRITERIOS DE URGENCIA (Para Tickets)**\n\n### **URGENCIA ALTA:**\n- **Palabras clave:** \"fuga\", \"filtración\", \"inundación\", \"problema eléctrico\", \"sin luz\", \"urgente\", \"emergencia\", \"daño\", \"riesgo\"\n- **Contexto:** Afecta seguridad o habitabilidad inmediata\n- **Bot dice:** \"lo más pronto posible\", \"urgente\", \"prioritario\"\n\n### **URGENCIA MEDIA:**\n- **Palabras clave:** \"coordinar\", \"reparación\", \"arreglo\", \"cobro extraño\", \"duda pago\", \"aire acondicionado\"\n- **Contexto:** Debe resolverse pronto pero no es emergencia\n- **Bot dice:** \"48 horas hábiles\"\n\n### **URGENCIA BAJA:**\n- **Palabras clave:** \"consulta\", \"información\", \"factura\", \"contrato\", \"¿cómo...?\", \"¿cuándo...?\"\n- **Contexto:** Solo información administrativa o coordinación simple\n\n---\n\n## 📝 **ESTRUCTURA JSON OBLIGATORIA**\n\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"\",\n  \"correoCliente\": \"\",\n  \"persona\": \"\",\n  \"codigoInmueble\": \"\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"\",\n  \n  \"resumen_solicitud\": \"\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"\",\n  \"seg_2\": \"\",\n  \n  \"estatusEmbudo\": \"\",\n  \"statusId\": 0,\n  \n  \"clienteIdentificado\": false\n}\n```\n\n### **DESCRIPCIÓN DE CADA CAMPO:**\n\n**DATOS DEL CLIENTE:**\n- `nombreCliente`: Nombre completo extraído de la conversación o \"\"\n- `telefonoCliente`: +51XXXXXXXXX o \"\"\n- `correoCliente`: email@domain.com o \"\"\n- `persona`: \"inquilino\" / \"propietario\" / \"proveedor\" / \"\"\n- `codigoInmueble`: Código del inmueble o \"\"\n- `relacionTitular`: \"pareja\" / \"familiar\" / etc, o \"\" si es titular directo\n\n**CATEGORIZACIÓN:**\n- `categoria_completa`: \"NIVEL_1 - NIVEL_2 - NIVEL_3\" (formato exacto con espacios y guiones)\n\n**SOLICITUD:**\n- `resumen_solicitud`: Resumen breve y claro (máx 200 caracteres) de lo que solicita el cliente\n  - ✅ SIEMPRE llenar si cliente hizo consulta\n  - ✅ Ser específico y claro\n  - ✅ Mencionar detalles relevantes\n  - ❌ NUNCA dejar vacío si hay consulta\n\n**SOLUCIÓN:**\n- `tiene_solucion`: true / false\n  - true = Se brindó alguna información/respuesta/solución al cliente\n  - false = Aún no se ha brindado solución\n  - Este campo es INDEPENDIENTE de si requiere ticket o no\n- `descripcion_solucion`: (SOLO si tiene_solucion = true)\n  - Describir QUÉ solución se brindó o QUÉ información se proporcionó\n  - Ser específico sobre la acción realizada\n  - Ejemplos: \"Se brindó el RUC de la empresa\", \"Se envió el código de pago\", \"Se explicó el proceso de pago por Kashio\"\n  - Si tiene_solucion = false → dejar vacío \"\"\n\n**TICKET:**\n- `requiereTicket`: true / false\n  - true = Necesita intervención humana\n  - false = Bot resolvió o no requiere acción\n- `detalle_ticket`: (SOLO si requiereTicket = true)\n  - Explicar QUÉ debe hacer el equipo\n  - Incluir nivel de urgencia si aplica\n  - Ser claro y específico\n  - Si requiereTicket = false → dejar vacío \"\"\n\n**CASO ESPECIAL:**\n- `caso_especial`: true / false\n  - true = Bot no tiene info O cliente pide humano O situación compleja\n  - false = Caso normal\n- `detalle_caso_especial`: (SOLO si caso_especial = true)\n  - Explicar POR QUÉ es caso especial\n  - Ser específico\n  - Si caso_especial = false → dejar vacío \"\"\n\n**MENSAJES DE SEGUIMIENTO:**\n- `seg_1`: Primer mensaje de seguimiento para el cliente\n  - ✅ SIEMPRE debe tener contenido\n  - ✅ Mensaje contextual relacionado con la conversación actual\n  - ✅ Propósito: Reactivar conversación si el cliente deja en visto\n  - ✅ Tono amigable, profesional, corto, invita a continuar\n  - ✅ Máximo 150 caracteres\n  - ❌ NO USAR EMOJIS (crítico)\n  - **Ejemplos correctos:**\n    - \"Hola Juan, ¿pudiste revisar la información que te compartí?\"\n    - \"Hola María, ¿lograste resolver tu consulta o necesitas algo más?\"\n    - \"Hola Carlos, ¿quedó clara la información sobre el pago?\"\n  \n- `seg_2`: Segundo mensaje de seguimiento para el cliente\n  - ✅ SIEMPRE debe tener contenido\n  - ✅ Mensaje contextual si el cliente sigue sin responder después de seg_1\n  - ✅ Propósito: Segunda oportunidad de reactivar conversación\n  - ✅ Puede ofrecer ayuda adicional o preguntar si necesita algo más\n  - ✅ Máximo 150 caracteres\n  - ❌ NO USAR EMOJIS (crítico)\n  - **Ejemplos correctos:**\n    - \"¿Hay algo más en lo que pueda ayudarte? Estoy aquí para lo que necesites.\"\n    - \"Si tienes alguna otra consulta, no dudes en escribirme.\"\n    - \"¿Necesitas que te explique algo más o está todo claro?\"\n\n**ETAPA:**\n- `estatusEmbudo`: Nombre de la etapa (ver lista arriba)\n- `statusId`: Código numérico SIN comillas (10001-10006)\n\n**FLAG:**\n- `clienteIdentificado`: true / false\n  - true = Bot confirmó identificación con datos completos\n  - false = Cliente NO identificado aún\n\n---\n\n## 📋 **REGLAS CRÍTICAS DE LLENADO**\n\n### **1. SIEMPRE REVISAR TODA LA CONVERSACIÓN**\n- Lee TODOS los mensajes desde el inicio\n- NO te saltes mensajes intermedios\n- Considera el contexto completo\n- Busca información en TODO el historial\n\n### **2. NO INVENTAR INFORMACIÓN**\n- Si un dato NO aparece en la conversación → dejar vacío (\"\")\n- NO asumir valores\n- NO inventar nombres, correos, teléfonos\n- SOLO extraer lo que está EXPLÍCITAMENTE escrito\n\n### **3. resumen_solicitud**\n✅ **SIEMPRE llenar si el cliente hizo una consulta o solicitud**\n✅ Máximo 200 caracteres\n✅ Claro, específico y preciso\n✅ Incluir detalles relevantes (inmueble, tipo de problema)\n❌ NUNCA dejar vacío si hay consulta activa\n\n**Ejemplos correctos:**\n```\n✅ \"Consulta sobre cómo pagar alquiler mediante Kashio\"\n✅ \"Fuga de agua en baño del depto 205 que daña muebles. Urgente.\"\n✅ \"Solicita cambio de habitación del inmueble 503\"\n✅ \"Propietario no recibió pago de contraprestación del mes\"\n✅ \"Consulta sobre posibilidad de subarrendar departamento\"\n✅ \"Solicita código WiFi para conectarse\"\n```\n\n### **4. requiereTicket y detalle_ticket**\n- Si `requiereTicket = true` → DEBES llenar `detalle_ticket`\n- Si `requiereTicket = false` → `detalle_ticket` debe ser \"\"\n- `detalle_ticket` debe explicar QUÉ debe hacer el equipo\n\n**Ejemplos correctos:**\n```\n✅ \"Coordinar reparación urgente de fuga en baño depto 205\"\n✅ \"Verificar por qué no aparece pago pendiente en sistema\"\n✅ \"Revisar contrato inmueble 102 sobre condiciones de subarriendo\"\n✅ \"Validar pago de contraprestación no recibido por propietario del inmueble 401\"\n✅ \"Coordinar cambio de habitación de inquilina del inmueble 503\"\n```\n\n### **5. caso_especial y detalle_caso_especial**\n- Si `caso_especial = true` → DEBES llenar `detalle_caso_especial`\n- Si `caso_especial = false` → `detalle_caso_especial` debe ser \"\"\n- `detalle_caso_especial` debe explicar POR QUÉ es caso especial\n\n**Ejemplos correctos:**\n```\n✅ \"Base de conocimiento no tiene información sobre condiciones de subarriendo\"\n✅ \"Cliente solicita hablar directamente con un asesor humano\"\n✅ \"Consulta muy específica sobre cláusula contractual que requiere revisión especializada\"\n✅ \"Bot no encontró información sobre este tipo de servicio en su base de datos\"\n✅ \"Situación compleja con múltiples problemas que requiere evaluación integral\"\n```\n\n### **6. categoria_completa**\n✅ SIEMPRE usar formato: \"NIVEL_1 - NIVEL_2 - NIVEL_3\"\n✅ Con espacios antes y después de los guiones\n✅ Todo en MAYÚSCULAS\n✅ Sin tildes ni caracteres especiales\n\n### **7. tiene_solucion y descripcion_solucion**\n\n**tiene_solucion:**\n- `true`: Cuando el bot YA brindó alguna información, respuesta o solución al cliente\n- `false`: Cuando aún NO se ha proporcionado ninguna solución\n\n**descripcion_solucion (SOLO si tiene_solucion = true):**\n✅ Describir QUÉ información o solución se brindó\n✅ Ser específico sobre la acción realizada\n✅ Usar tiempo pasado (\"se brindó\", \"se envió\", \"se explicó\")\n✅ Máximo 150 caracteres\n❌ Dejar vacío (\"\") si tiene_solucion = false\n\n**Ejemplos correctos:**\n```\ntiene_solucion: true\ndescripcion_solucion: \"Se brindó el RUC de la empresa\"\n\ntiene_solucion: true\ndescripcion_solucion: \"Se envió el código de pago del inmueble 301\"\n\ntiene_solucion: true\ndescripcion_solucion: \"Se explicó el proceso completo de pago mediante Kashio con manual incluido\"\n\ntiene_solucion: true\ndescripcion_solucion: \"Se proporcionó la clave WiFi y nombre de red\"\n\ntiene_solucion: true\ndescripcion_solucion: \"Se buscó información de informes del cliente Juan y se enviaron los reportes solicitados\"\n\ntiene_solucion: false\ndescripcion_solucion: \"\"  (cuando aún no se ha dado solución)\n```\n\n**IMPORTANTE:** Este campo es independiente de si requiere ticket. Puede haber casos donde:\n- tiene_solucion=true y requiereTicket=false (bot resolvió todo)\n- tiene_solucion=true y requiereTicket=true (bot dio info parcial pero requiere seguimiento)\n- tiene_solucion=false y requiereTicket=true (aún no hay solución, se escaló)\n\n### **8. seg_1 y seg_2 (Mensajes de Seguimiento)**\n\n**REGLAS GENERALES:**\n✅ SIEMPRE deben tener contenido (nunca vacíos)\n✅ Máximo 150 caracteres cada uno\n✅ Tono amigable, natural y cercano\n✅ Contextuales a la conversación actual\n✅ Incluir el nombre del cliente si está disponible\n❌ **NO USAR EMOJIS** (crítico)\n\n**seg_1 (Primer seguimiento):**\n- Propósito: Reactivar conversación si cliente deja en visto\n- Referencia a la información compartida o consulta realizada\n- Pregunta si pudo revisar o si tiene dudas\n- Tono: Amigable, no insistente\n\n**Ejemplos de seg_1:**\n```\n\"Hola Juan, ¿pudiste revisar el código de pago que te compartí?\"\n\"Hola María, ¿te quedó alguna duda sobre el proceso de pago? Estoy aquí para ayudarte\"\n\"¿Lograste ver la información que te envié sobre Kashio?\"\n\"Hola Carlos, ¿necesitas algo más sobre tu consulta de cambio de habitación?\"\n\"¿Pudiste revisar el manual? Si tienes alguna pregunta, con gusto te ayudo\"\n```\n\n**seg_2 (Segundo seguimiento):**\n- Propósito: Segunda oportunidad de reactivar conversación\n- Ofrecer ayuda adicional\n- Preguntar si necesita algo más\n- Dejar la puerta abierta para futuras consultas\n- Tono: Servicial, cierra con ofrecimiento de ayuda\n\n**Ejemplos de seg_2:**\n```\n\"¿Hay algo más en lo que pueda ayudarte? Estoy aquí cuando me necesites\"\n\"Si necesitas cualquier otra información, no dudes en escribirme\"\n\"¿Todo quedó claro con tu consulta? Aquí estoy para lo que necesites\"\n\"Si tienes alguna otra pregunta, con gusto te ayudo\"\n\"Cualquier duda adicional, puedes contactarme. Que tengas un buen día\"\n```\n\n**CONSIDERACIONES ESPECIALES:**\n\n**Si el cliente NO está identificado:**\n```\nseg_1: \"Hola, ¿sigues ahí? ¿Puedo ayudarte con algo?\"\nseg_2: \"Estoy disponible si necesitas asistencia. ¿En qué puedo ayudarte?\"\n```\n\n**Si la consulta fue resuelta:**\n```\nseg_1: \"¿La información que te compartí te fue útil?\"\nseg_2: \"Si necesitas algo más, aquí estoy para ayudarte\"\n```\n\n**Si requiere ticket o caso especial:**\n```\nseg_1: \"Un asesor se contactará contigo pronto. ¿Tienes alguna duda mientras tanto?\"\nseg_2: \"¿Hay algo más que pueda ayudarte mientras esperas la atención del asesor?\"\n```\n\n### **9. statusId**\n✅ SIEMPRE numérico SIN comillas\n✅ Solo valores válidos: 10001, 10002, 10003, 10004, 10005, 10006\n❌ NO usar: \"10001\", 10007, 10008, etc.\n\n---\n\n## 🔍 **EJEMPLOS COMPLETOS**\n\n### **Ejemplo 1: Interacción Inicial**\n\n**Conversación:**\n```\nCliente: \"Hola, buenos días\"\nBot: [Ejecuta búsqueda por teléfono]\nBot: \"Hola, no encuentro un registro con tu número. ¿Podrías brindarme tu correo electrónico?\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"+51923456789\",\n  \"correoCliente\": \"\",\n  \"persona\": \"\",\n  \"codigoInmueble\": \"\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"NO_IDENTIFICADO - IDENTIFICACION - PENDIENTE\",\n  \n  \"resumen_solicitud\": \"Cliente saludó pero aún no proporciona datos para identificarse\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola, ¿sigues por ahí? Estoy listo para ayudarte con lo que necesites\",\n  \"seg_2\": \"¿Hay algo en lo que pueda asistirte? Estoy disponible cuando quieras\",\n  \n  \"estatusEmbudo\": \"INTERACCION IA\",\n  \"statusId\": 10001,\n  \n  \"clienteIdentificado\": false\n}\n```\n\n---\n\n### **Ejemplo 2: Cliente Identificado**\n\n**Conversación:**\n```\nCliente: \"Hola\"\nBot: [Busca por teléfono - encontrado]\nBot: \"Perfecto Juan, te identifico como inquilino del inmueble 301. ¿En qué puedo ayudarte?\"\nCliente: [Aún no responde]\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Juan\",\n  \"telefonoCliente\": \"+51987654321\",\n  \"correoCliente\": \"juan@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"301\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - CONSULTAS - GENERAL\",\n  \n  \"resumen_solicitud\": \"Cliente identificado, esperando que indique su consulta\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Juan, ¿en qué puedo ayudarte hoy?\",\n  \"seg_2\": \"¿Hay algo en lo que pueda asistirte? Estoy aquí para lo que necesites\",\n  \n  \"estatusEmbudo\": \"CLIENTE IDENTIFICADO IA\",\n  \"statusId\": 10002,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 3: Consulta Resuelta**\n\n**Conversación:**\n```\nBot: \"Perfecto Juan, te identifico como inquilino del inmueble 301. ¿En qué puedo ayudarte?\"\nCliente: \"¿Cómo pago el alquiler?\"\nBot: [HTTP Request - encuentra respuesta]\nBot: \"Para pagar tu alquiler mediante Kashio, sigue estos pasos: [instrucciones completas]\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Juan\",\n  \"telefonoCliente\": \"+51987654321\",\n  \"correoCliente\": \"juan@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"301\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - PAGOS - KASHIO\",\n  \n  \"resumen_solicitud\": \"Consulta sobre cómo pagar alquiler mediante Kashio\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se explicó el proceso completo de pago mediante Kashio con instrucciones detalladas\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Juan, ¿pudiste revisar las instrucciones de pago por Kashio?\",\n  \"seg_2\": \"¿Te quedó alguna duda sobre el proceso? Con gusto puedo ayudarte\",\n  \n  \"estatusEmbudo\": \"CONSULTA RESUELTA IA\",\n  \"statusId\": 10003,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 4: Ticket Urgencia Alta**\n\n**Conversación:**\n```\nBot: \"Perfecto María, te identifico como inquilina del inmueble 205. ¿En qué puedo ayudarte?\"\nCliente: \"Tengo una fuga de agua muy grande en mi baño, está dañando mis muebles\"\nBot: \"Entiendo, es una situación urgente. Un asesor del área de mantenimiento se contactará contigo lo más pronto posible.\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"María\",\n  \"telefonoCliente\": \"+51912345678\",\n  \"correoCliente\": \"maria@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"205\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - MANTENIMIENTO - FUGA_AGUA\",\n  \n  \"resumen_solicitud\": \"Fuga de agua muy grande en baño del depto 205, está dañando muebles. Requiere atención urgente.\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": true,\n  \"detalle_ticket\": \"Coordinar reparación URGENTE de fuga de agua en baño depto 205. Está causando daños a muebles. Prioridad ALTA - contactar lo más pronto posible.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola María, el área de mantenimiento se contactará contigo muy pronto. ¿Tienes alguna duda mientras tanto?\",\n  \"seg_2\": \"¿Hay algo más en lo que pueda ayudarte mientras esperas la atención del área de mantenimiento?\",\n  \n  \"estatusEmbudo\": \"TICKET IA\",\n  \"statusId\": 10004,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 5: Caso Especial**\n\n**Conversación:**\n```\nBot: \"Perfecto Carlos, te identifico como inquilino del inmueble 102. ¿En qué puedo ayudarte?\"\nCliente: \"¿Puedo subarrendar mi departamento?\"\nBot: [HTTP Request - no encuentra respuesta]\nBot: \"Entiendo tu consulta. No encuentro información específica sobre subarriendo. Un asesor especializado se contactará contigo para revisar las condiciones de tu contrato.\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Carlos\",\n  \"telefonoCliente\": \"+51998765432\",\n  \"correoCliente\": \"carlos@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"102\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - CONSULTAS - SUBARRIENDO\",\n  \n  \"resumen_solicitud\": \"Consulta sobre posibilidad de subarrendar su departamento\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": true,\n  \"detalle_ticket\": \"Revisar cláusulas del contrato del inmueble 102 para determinar si permite subarriendo. Responder al inquilino con información específica.\",\n  \n  \"caso_especial\": true,\n  \"detalle_caso_especial\": \"Base de conocimiento no tiene información específica sobre condiciones de subarriendo. Requiere revisión de contrato por asesor especializado.\",\n  \n  \"seg_1\": \"Hola Carlos, un asesor se contactará contigo pronto para revisar tu contrato. ¿Tienes otra consulta mientras tanto?\",\n  \"seg_2\": \"¿Hay algo más en lo que pueda ayudarte mientras esperas la respuesta del asesor?\",\n  \n  \"estatusEmbudo\": \"CASO ESPECIAL IA\",\n  \"statusId\": 10005,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 6: Ticket Urgencia Media**\n\n**Conversación:**\n```\nBot: \"Perfecto Luis, te identifico como propietario del inmueble 401. ¿En qué puedo ayudarte?\"\nCliente: \"No he recibido mi pago de este mes\"\nBot: \"Entiendo tu preocupación. Un asesor del área de pagos verificará tu situación y se contactará contigo en un máximo de 48 horas hábiles.\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Luis\",\n  \"telefonoCliente\": \"+51934567890\",\n  \"correoCliente\": \"luis@email.com\",\n  \"persona\": \"propietario\",\n  \"codigoInmueble\": \"401\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"PROPIETARIO - PAGOS - CONTRAPRESTACION_NO_RECIBIDA\",\n  \n  \"resumen_solicitud\": \"Propietario no recibió pago de contraprestación del mes actual para inmueble 401\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": true,\n  \"detalle_ticket\": \"Verificar con área de pagos por qué no se realizó el depósito de contraprestación al propietario del inmueble 401. Revisar estado del pago y contactar al propietario en máximo 48 horas hábiles.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Luis, el área de pagos está verificando tu caso y se contactará contigo pronto. ¿Tienes alguna otra consulta?\",\n  \"seg_2\": \"¿Hay algo más en lo que pueda ayudarte mientras esperas la respuesta del área de pagos?\",\n  \n  \"estatusEmbudo\": \"TICKET IA\",\n  \"statusId\": 10004,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 7: Conversación Acumulativa - Múltiples Mensajes**\n\n**Conversación:**\n```\n[Mensaje 1]\nCliente: \"Hola\"\nBot: [Busca - 404]\nBot: \"Hola, no encuentro registro. ¿Tu correo?\"\n\n[Mensaje 2]\nCliente: \"ana@email.com\"\nBot: [Busca por correo - encontrado]\nBot: \"Perfecto Ana, te identifico como inquilina del 503. ¿En qué puedo ayudarte?\"\n\n[Mensaje 3]\nCliente: \"Necesito el código de pago\"\nBot: \"Con gusto, te envío tu código de pago para el inmueble 503: [código]\"\n\n[Mensaje 4]\nCliente: \"Gracias. También quiero saber si puedo cambiar de habitación\"\nBot: \"Entiendo. Para coordinar un cambio de habitación, un asesor se contactará contigo en 48 horas hábiles.\"\n```\n\n**JSON (Análisis de TODA la conversación):**\n```json\n{\n  \"nombreCliente\": \"Ana\",\n  \"telefonoCliente\": \"+51945678901\",\n  \"correoCliente\": \"ana@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"503\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - CAMBIOS - HABITACION_DEPARTAMENTO\",\n  \n  \"resumen_solicitud\": \"Solicitud de código de pago (ya resuelto). Actualmente solicita cambio de habitación del inmueble 503.\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se proporcionó el código de pago del inmueble 503\",\n  \n  \"requiereTicket\": true,\n  \"detalle_ticket\": \"Coordinar con área correspondiente sobre solicitud de cambio de habitación de la inquilina Ana del inmueble 503. Validar disponibilidad y condiciones. Contactar en 48 horas hábiles.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Ana, un asesor se contactará contigo pronto sobre el cambio de habitación. ¿Tienes alguna otra consulta?\",\n  \"seg_2\": \"¿Hay algo más en lo que pueda ayudarte mientras esperas la respuesta sobre tu cambio?\",\n  \n  \"estatusEmbudo\": \"TICKET IA\",\n  \"statusId\": 10004,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n**NOTA:** El análisis es ACUMULATIVO. Se consideró toda la conversación pero la etapa y categoría reflejan el último requerimiento ACTIVO (cambio de habitación), mencionando brevemente que la consulta del código de pago ya fue resuelta. El campo `tiene_solucion=true` porque SÍ se brindó solución al código de pago.\n\n---\n\n### **Ejemplo 8: Consulta con Solución - RUC de Empresa**\n\n**Conversación:**\n```\nBot: \"Perfecto Sandra, te identifico como inquilina del inmueble 602. ¿En qué puedo ayudarte?\"\nCliente: \"Necesito el RUC de la empresa para mi contabilidad\"\nBot: \"Claro, el RUC de PROPER PERÚ es 20123456789. ¿Necesitas algún otro dato?\"\nCliente: [No responde]\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Sandra\",\n  \"telefonoCliente\": \"+51956789012\",\n  \"correoCliente\": \"sandra@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"602\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - CONSULTAS - INFORMACION_EMPRESA\",\n  \n  \"resumen_solicitud\": \"Solicitud del RUC de la empresa para su contabilidad\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se proporcionó el RUC de PROPER PERÚ (20123456789)\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Sandra, ¿te sirvió el RUC que te compartí?\",\n  \"seg_2\": \"¿Necesitas algún otro dato de la empresa? Estoy aquí para ayudarte\",\n  \n  \"estatusEmbudo\": \"CONSULTA RESUELTA IA\",\n  \"statusId\": 10003,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 9: Envío de Reporte Solicitado**\n\n**Conversación:**\n```\nBot: \"Perfecto Roberto, te identifico como propietario del inmueble 305. ¿En qué puedo ayudarte?\"\nCliente: \"Necesito que me envíes el reporte de ocupación de mi departamento\"\nBot: [Busca información]\nBot: \"Por supuesto, te envío el reporte de ocupación del inmueble 305. [adjunta archivo PDF]\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Roberto\",\n  \"telefonoCliente\": \"+51967890123\",\n  \"correoCliente\": \"roberto@email.com\",\n  \"persona\": \"propietario\",\n  \"codigoInmueble\": \"305\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"PROPIETARIO - PLATAFORMA - REPORTES\",\n  \n  \"resumen_solicitud\": \"Solicitud de reporte de ocupación del inmueble 305\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se buscó y envió el reporte de ocupación del inmueble 305 en formato PDF\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Roberto, ¿pudiste revisar el reporte de ocupación que te envié?\",\n  \"seg_2\": \"¿Necesitas algún otro reporte o información? Con gusto te ayudo\",\n  \n  \"estatusEmbudo\": \"CONSULTA RESUELTA IA\",\n  \"statusId\": 10003,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n## ⚡ **REGLAS DE EXTRACCIÓN DE DATOS**\n\n### **TELÉFONO:**\n- Buscar: 9XX XXX XXX, 9XXXXXXXX\n- Agregar +51 si falta\n- Formato final: +51XXXXXXXXX\n- Si NO aparece: \"\"\n\n### **CORREO:**\n- Validar: texto@dominio.extension\n- Convertir a minúsculas\n- Sin espacios\n- Si NO aparece: \"\"\n\n### **NOMBRE:**\n- Extraer del mensaje del bot cuando identifica\n- Primera letra en mayúscula\n- Sin títulos (Sr., Sra., etc.)\n- Si NO aparece: \"\"\n\n### **PERSONA:**\n- Valores válidos: \"inquilino\", \"propietario\", \"proveedor\"\n- Extraer cuando bot dice \"te identifico como...\"\n- Si NO aparece: \"\"\n\n### **CÓDIGO INMUEBLE:**\n- Extraer del mensaje de confirmación del bot\n- Número o alfanumérico\n- Si varios, usar el relevante a la consulta\n- Si NO aparece: \"\"\n\n---\n\n## ⚠️ **CHECKLIST OBLIGATORIO ANTES DE RESPONDER**\n\n```\n□ ¿Leí TODA la conversación desde el inicio hasta el final?\n□ ¿Revisé la infoPrevia si existe?\n□ ¿Extraje SOLO información que está EXPLÍCITAMENTE en la conversación?\n□ ¿NO inventé ningún dato?\n□ ¿El cliente fue identificado por el bot?\n□ ¿La categoria_completa tiene formato: NIVEL_1 - NIVEL_2 - NIVEL_3?\n□ ¿El resumen_solicitud está completo y es claro?\n□ ¿Evalué correctamente si tiene_solucion es true o false?\n□ ¿Si tiene_solucion=true, completé descripcion_solucion?\n□ ¿Si requiereTicket=true, completé detalle_ticket?\n□ ¿Si caso_especial=true, completé detalle_caso_especial?\n□ ¿Los mensajes seg_1 y seg_2 están completos y son contextuales?\n□ ¿El statusId es NUMÉRICO sin comillas?\n□ ¿El estatusEmbudo corresponde al statusId?\n□ ¿Todos los campos requeridos están presentes?\n□ ¿El JSON es válido y está completo?\n```\n\n---\n\n## 🔴 **RECORDATORIO CRÍTICO FINAL**\n\n```\nANTES DE RESPONDER, VERIFICAR:\n\n1. ✅ LEÍSTE TODA LA CONVERSACIÓN COMPLETA\n   → No te saltaste ningún mensaje\n   → Consideraste infoPrevia si existe\n\n2. ✅ NO INVENTASTE INFORMACIÓN\n   → Solo extraes lo que está escrito\n   → Campos vacíos (\"\") si no hay datos\n\n3. ✅ CATEGORIZACIÓN CORRECTA\n   → Formato: \"NIVEL_1 - NIVEL_2 - NIVEL_3\"\n   → Con espacios y guiones correctos\n\n4. ✅ EVALUACIÓN DE SOLUCIÓN\n   → tiene_solucion: true/false correctamente evaluado\n   → Si true → descripcion_solucion lleno\n   → Si false → descripcion_solucion vacío\n\n5. ✅ CAMPOS CONDICIONALES\n   → requiereTicket=true → detalle_ticket lleno\n   → caso_especial=true → detalle_caso_especial lleno\n\n6. ✅ MENSAJES DE SEGUIMIENTO\n   → seg_1 y seg_2 SIEMPRE con contenido\n   → Contextuales a la conversación\n   → Máximo 150 caracteres cada uno\n   → Tono amigable y natural\n\n7. ✅ ETAPA CORRECTA\n   → statusId numérico (10001-10006)\n   → estatusEmbudo correspondiente\n\n8. ✅ JSON COMPLETO Y VÁLIDO\n   → Todos los campos presentes\n   → Sintaxis correcta\n\nRESPONDER SOLO JSON VALIDADO Y COMPLETO\n```\n\n---\n\n## 📖 **REFERENCIA RÁPIDA**\n\n```\nETAPAS:\n10001 - INTERACCION IA (cliente inicia, no identificado)\n10002 - CLIENTE IDENTIFICADO IA (identificado, sin consulta aún)\n10003 - CONSULTA RESUELTA IA (bot resolvió completamente)\n10004 - TICKET IA (requiere intervención humana)\n10005 - CASO ESPECIAL IA (bot sin info o complejo)\n10006 - ASESOR IA (atención humana directa)\n\nCATEGORIZACIÓN:\nNIVEL_1: INQUILINO / PROPIETARIO / NO_IDENTIFICADO\nNIVEL_2: MANTENIMIENTO / PAGOS / ACCESOS / LIMPIEZA / etc.\nNIVEL_3: Descriptor específico (DUCHA / WIFI / etc.)\n\nFORMATO: \"NIVEL_1 - NIVEL_2 - NIVEL_3\"\n```\n\n---\n\n**FIN DEL PROMPT v4.0**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        4672,
        2448
      ],
      "id": "e4a35716-8332-4fd5-8bfd-3b00dfc4fd3a",
      "name": "Campos4",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta3').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta3').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4224,
        2128
      ],
      "id": "3378c696-dcde-4b13-a478-aec5076685cb",
      "name": "SwitchBot4",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "nombreCliente",
              "description": "Nombre completo extraído de la conversación o \"\"",
              "required": true
            },
            {
              "name": "telefonoCliente",
              "description": "+51XXXXXXXXX o \"\"",
              "required": true
            },
            {
              "name": "correoCliente",
              "description": "email@domain.com o \"\"",
              "required": true
            },
            {
              "name": "persona",
              "description": "\"inquilino\" / \"propietario\" / \"proveedor\" / \"\"",
              "required": true
            },
            {
              "name": "codigoInmueble",
              "description": "Código del inmueble o \"\"",
              "required": true
            },
            {
              "name": "relacionTitular",
              "description": "\"pareja\" / \"familiar\" / etc, o \"\" si es titular directo",
              "required": true
            },
            {
              "name": "categoria_completa",
              "description": " \"NIVEL_1 - NIVEL_2 - NIVEL_3\" (formato exacto con espacios y guiones)",
              "required": true
            },
            {
              "name": "resumen_solicitud",
              "description": "Resumen breve y claro (máx 200 caracteres) de lo que solicita el cliente",
              "required": true
            },
            {
              "name": "tiene_solucion",
              "type": "boolean",
              "description": "true = Se brindó alguna información/respuesta/solución al cliente false = Aún no se ha brindado solución Este campo es INDEPENDIENTE de si requiere ticket o no",
              "required": true
            },
            {
              "name": "descripcion_solucion",
              "description": "(SOLO si tiene_solucion = true)  Describir QUÉ solución se brindó o QUÉ información se proporcionó Ser específico sobre la acción realizada Ejemplos: \"Se brindó el RUC de la empresa\", \"Se envió el código de pago\", \"Se explicó el proceso de pago por Kashio\" Si tiene_solucion = false → dejar vacío \"\"",
              "required": true
            },
            {
              "name": "requiereTicket",
              "type": "boolean",
              "description": "true / false  true = Necesita intervención humana false = Bot resolvió o no requiere acción",
              "required": true
            },
            {
              "name": "detalle_ticket",
              "description": "(SOLO si requiereTicket = true)  Explicar QUÉ debe hacer el equipo Incluir nivel de urgencia si aplica Ser claro y específico Si requiereTicket = false → dejar vacío \"\"",
              "required": true
            },
            {
              "name": "caso_especial",
              "type": "boolean",
              "description": "true / false  true = Bot no tiene info O cliente pide humano O situación compleja false = Caso normal",
              "required": true
            },
            {
              "name": "detalle_caso_especial",
              "description": "(SOLO si caso_especial = true)  Explicar POR QUÉ es caso especial Ser específico Si caso_especial = false → dejar vacío \"\"",
              "required": true
            },
            {
              "name": "seg_1",
              "description": "Primer mensaje de seguimiento para el cliente",
              "required": true
            },
            {
              "name": "seg_2",
              "description": "Segundo mensaje de seguimiento para el cliente",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Nombre de la etapa (ver lista arriba)",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Código numérico SIN comillas (10001-10006)",
              "required": true
            },
            {
              "name": "clienteIdentificado",
              "type": "boolean",
              "description": "true / false  true = Bot confirmó identificación con datos completos false = Cliente NO identificado aún",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        5088,
        2448
      ],
      "id": "86c75218-4e42-47e6-ab49-3d40ec3fba5f",
      "name": "Information Extractor4",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5152,
        2144
      ],
      "id": "cfc1be97-1944-4f08-9bf9-2923f76dda4f",
      "name": "Validacion4",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4688,
        2672
      ],
      "id": "944e5c0a-9069-4967-9578-ddf4531a7a62",
      "name": "OpenAI Chat Model11",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5152,
        2672
      ],
      "id": "2398ccb2-02ec-466a-8c6d-45899441f1ae",
      "name": "OpenAI Chat Model12",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": "=",
              "status_id": "=",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":798799,\"type\":\"text\"}",
                    "value": "={{ $json.output.persona }}"
                  },
                  {
                    "data": "{\"id\":798801,\"type\":\"text\"}",
                    "value": "={{ $json.output.codigoInmueble }}"
                  },
                  {
                    "data": "{\"id\":798803,\"type\":\"text\"}",
                    "value": "={{ $json.output.relacionTitular }}"
                  },
                  {
                    "data": "{\"id\":798805,\"type\":\"text\"}",
                    "value": "={{ $json.output.categoria_completa }}"
                  },
                  {
                    "data": "{\"id\":798807,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.resumen_solicitud }}"
                  },
                  {
                    "data": "{\"id\":798835,\"type\":\"checkbox\"}",
                    "value": "={{ $json.output.tiene_solucion }}"
                  },
                  {
                    "data": "{\"id\":798837,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.descripcion_solucion }}"
                  },
                  {
                    "data": "{\"id\":798809,\"type\":\"text\"}",
                    "value": "={{ $json.output.requiereTicket }}"
                  },
                  {
                    "data": "{\"id\":798811,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.detalle_ticket }}"
                  },
                  {
                    "data": "{\"id\":798813,\"type\":\"checkbox\"}",
                    "value": "={{ $json.output.caso_especial }}"
                  },
                  {
                    "data": "{\"id\":798815,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.detalle_caso_especial }}"
                  },
                  {
                    "data": "{\"id\":798825,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.seg_1 }}"
                  },
                  {
                    "data": "{\"id\":798827,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.seg_2 }}"
                  },
                  {
                    "data": "{\"id\":798817,\"type\":\"text\"}",
                    "value": "={{ $json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":798819,\"type\":\"checkbox\"}",
                    "value": "={{ $json.output.clienteIdentificado }}"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        5440,
        2448
      ],
      "id": "e421e3fe-21bc-421f-9d5c-72e7a890efba",
      "name": "Update leads4",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4816,
        2672
      ],
      "id": "a6080011-9fa0-46e6-b9e8-b63163feebc7",
      "name": "Postgres Chat Memory7",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3504,
        1632
      ],
      "id": "5aa2dce0-3125-4e9d-bda2-f7f1dbbb515a",
      "name": "Postgres Chat Memory8",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        3632,
        1632
      ],
      "id": "34f4ff25-fb60-455a-aa89-69ead3adc242",
      "name": "Date & Time3"
    },
    {
      "parameters": {
        "resource": "notes",
        "operation": "createNotes",
        "notes": {
          "common": [
            {
              "entity_id": "={{ $('GET Lead').item.json.id }}",
              "text": "={{ $('Respuesta3').item.json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        4448,
        2144
      ],
      "id": "b2c30cd3-4334-4bfe-a889-aabbc1f88562",
      "name": "Create new notes1",
      "credentials": {
        "kommoOAuth2Api": {
          "id": "Xm12cHoxJw7jGGaV",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "videoUrls": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1808,
        1616
      ],
      "id": "e3638074-ef71-471f-9e47-263e5f90ac81",
      "name": "Analyze video",
      "credentials": {
        "googlePalmApi": {
          "id": "4ycbJRThfPUIH8pz",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "document",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "documentUrls": "={{ $json.attachment_link }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1808,
        1808
      ],
      "id": "2f74691a-ca1f-4f61-81b6-c93a3dd2cea3",
      "name": "Analyze document",
      "credentials": {
        "googlePalmApi": {
          "id": "4ycbJRThfPUIH8pz",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8555f2b5-2479-4ffd-a99f-965fd2e26690",
              "leftValue": "={{ $('new message').item.json.body[\"account[subdomain]\"] }}",
              "rightValue": "TEST",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4736,
        1552
      ],
      "id": "d446f587-2e38-49dc-a47e-a7b8a5624521",
      "name": "Filter"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8555f2b5-2479-4ffd-a99f-965fd2e26690",
              "leftValue": "={{ $('new message').item.json.body[\"account[subdomain]\"] }}",
              "rightValue": "TEST",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4736,
        2144
      ],
      "id": "e21aa2c5-394b-4f5a-adaf-0cd1554ce212",
      "name": "Filter2"
    },
    {
      "parameters": {
        "toolDescription": "Buscar en la base de conocimiento",
        "url": "https://docs.google.com/document/d/e/2PACX-1vTAOqubyUfWc-c3ppq_hVsdPPzO8vxKjgvoKARUHDRpnknDWxc6PBUompT4FXQF7klyGKKOUQyMFj0v/pub",
        "options": {},
        "optimizeResponse": true,
        "responseType": "html"
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3760,
        1632
      ],
      "id": "27635156-c728-493f-b2a5-e46a46631e8f",
      "name": "Base de conocimiento"
    },
    {
      "parameters": {
        "toolDescription": "Buscar en la base de conocimiento",
        "url": "https://docs.google.com/document/d/e/2PACX-1vTByTSHQfxb0MaJ3cQ_BnVkgey5SQGIfvhxWq5pMnvZ66p7TR3V6KRsa3qvro_qBg/pub",
        "options": {},
        "optimizeResponse": true,
        "responseType": "html"
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3888,
        1024
      ],
      "id": "7ad2d6fb-8243-4ecf-864f-0a81c68b8ec3",
      "name": "Base de conocimiento1"
    },
    {
      "parameters": {
        "toolDescription": "busca por correo o dni",
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', `URL para busqueda con correo o DNI, https://pp7tj4zkv7.execute-api.us-east-2.amazonaws.com/prod/inquilinos/get-by-correo/@correo para correo y https://pp7tj4zkv7.execute-api.us-east-2.amazonaws.com/prod/inquilinos/get-by-dnicarnext/@dniCarnext para dni`, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        3888,
        1632
      ],
      "id": "e86340b3-eb15-4630-8669-77eb825e3b6b",
      "name": "Busca por correo o dni"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3376,
        1632
      ],
      "id": "6003ce6f-c1ea-4f2b-b0c6-0d6fce3b2845",
      "name": "OpenAI Chat Model9",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Busca por teléfono",
        "url": "=https://pp7tj4zkv7.execute-api.us-east-2.amazonaws.com/prod/inquilinos/get-celular/{{ $('Edit Fields').item.json.telefono.replace(/\\D/g, '') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        4016,
        1632
      ],
      "id": "add13d13-806e-4bd1-8f83-47898f3aee84",
      "name": "Busca por telefono"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Mensaje proveniente del Cliente:** {{ $('Chat input').item.json.chat_input }}\n\n**Respuesta del bot:** {{ $('Respuesta2').item.json.output }}\n\n**Info previa:** {{ $node[\"Chat input\"].json.infoPrevia }}",
        "options": {
          "systemMessage": "=# 🤖 PROPER IA ANALYZER v4.0 - SISTEMA DE ANÁLISIS SIMPLIFICADO\n\n**Fecha actual:** {{ \n  new Date($now).toLocaleDateString(\"es-PE\", {\n    weekday: \"long\", \n    day: \"numeric\", \n    month: \"long\", \n    year: \"numeric\"\n  }) \n  + \", \" +\n  new Date($now).toLocaleTimeString(\"es-PE\", {\n    hour: \"numeric\", \n    minute: \"2-digit\", \n    hour12: true,\n    timeZone: \"America/Lima\"\n  })\n}} | **Zona horaria:** América/Lima\n\n---\n\n## 🚨 **MANDATO SUPREMO**\n```\n🔴 RESPONDER ÚNICAMENTE JSON COMPLETO Y VÁLIDO\n🔴 LEER Y ANALIZAR TODA LA CONVERSACIÓN COMPLETA\n🔴 NO INVENTAR - SOLO EXTRAER INFORMACIÓN REAL\n🔴 CATEGORIZAR SEGÚN SISTEMA DE 3 NIVELES\n🔴 DETERMINAR ETAPA CORRECTA\n🔴 SER PRECISO Y EXACTO\n```\n\n---\n\n## 📊 **SISTEMA DE CATEGORIZACIÓN**\n\n### **ESTRUCTURA OBLIGATORIA:**\n```\nNIVEL_1 - NIVEL_2 - NIVEL_3\n```\n\n**NIVEL 1: Tipo de Usuario**\n- `INQUILINO`\n- `PROPIETARIO`\n- `NO_IDENTIFICADO`\n\n**NIVEL 2: Área/Tema**\n- `MANTENIMIENTO` - Reparaciones, fallas, averías\n- `LIMPIEZA` - Servicios de limpieza\n- `PAGOS` - Transacciones, códigos de pago, depósitos\n- `FACTURACION` - Comprobantes, recibos, facturas\n- `ACCESOS` - Llaves, huellas, WiFi, credenciales, login\n- `CAMBIOS` - Cambio de habitación, depto, cochera\n- `SERVICIOS` - Amenidades (bicicletas, parrillas, gym)\n- `PLATAFORMA` - Sistemas digitales (propietarios)\n- `VISITAS` - Visitas al departamento (propietarios)\n- `REFERIDOS` - Recomendaciones de nuevos inquilinos\n- `CONSULTAS` - Preguntas informativas generales\n- `QUEJAS` - Reclamos\n- `IDENTIFICACION` - Proceso de identificar usuario (NO_IDENTIFICADO)\n- `SALUDOS` - Mensajes de inicio/cierre (NO_IDENTIFICADO)\n- `OTROS` - Casos no categorizables\n\n**NIVEL 3: Subtema Específico**\n- Descriptor del problema/acción específica\n- Ejemplos: `DUCHA`, `ASCENSORES`, `WIFI`, `ROLLERS`, `CODIGO_RENTA`, `RECIBO_LUZ`, `HUELLAS`, `BICICLETAS`, `PROBLEMA_LOGIN`, `FUGA_AGUA`, `CONTRAPRESTACION_NO_RECIBIDA`, etc.\n- Si no hay subtema claro: `GENERAL`\n\n### **EJEMPLOS DE CATEGORIZACIÓN:**\n```\n✅ INQUILINO - MANTENIMIENTO - DUCHA\n✅ INQUILINO - LIMPIEZA - ASCENSORES\n✅ INQUILINO - PAGOS - CODIGO_RENTA\n✅ INQUILINO - FACTURACION - RECIBO_LUZ\n✅ INQUILINO - ACCESOS - WIFI\n✅ INQUILINO - SERVICIOS - BICICLETAS\n✅ INQUILINO - CAMBIOS - HABITACION_DEPARTAMENTO\n✅ PROPIETARIO - PAGOS - CONTRAPRESTACION_NO_RECIBIDA\n✅ PROPIETARIO - ACCESOS - PROBLEMA_LOGIN\n✅ PROPIETARIO - PLATAFORMA - CARGA_DECLARACION\n✅ PROPIETARIO - VISITAS - SOLICITUD_VISITA_DEPTO\n✅ NO_IDENTIFICADO - IDENTIFICACION - PENDIENTE\n✅ NO_IDENTIFICADO - CONSULTAS - INFORMACION_ALQUILER\n✅ NO_IDENTIFICADO - SALUDOS - INICIAL\n```\n\n---\n\n## ⚡ **PROCESO DE ANÁLISIS - OBLIGATORIO**\n\n### **PASO 1: LECTURA COMPLETA (CRÍTICO)**\n✅ Lee TODO el historial de mensajes desde el INICIO hasta el FINAL\n✅ Revisa información previa (infoPrevia) si existe\n✅ NO te saltes ningún mensaje\n✅ NO inventes información que no está en la conversación\n✅ Identifica el flujo completo de la conversación\n\n### **PASO 2: EXTRACCIÓN DE DATOS**\n✅ Busca y extrae: nombre, teléfono, correo, persona, codigoInmueble\n✅ SOLO extrae lo que está EXPLÍCITAMENTE mencionado\n✅ Si un dato NO aparece, déjalo vacío (\"\")\n✅ NO asumas información\n\n### **PASO 3: IDENTIFICACIÓN DE USUARIO**\n✅ ¿El bot confirmó la identificación del cliente?\n✅ ¿Tiene datos completos? (nombre, persona, codigoInmueble)\n✅ ¿Qué tipo de perfil? (inquilino/propietario/no identificado)\n\n### **PASO 4: COMPRENSIÓN DE LA SOLICITUD**\n✅ ¿Qué está solicitando el cliente EXACTAMENTE?\n✅ ¿Es una consulta nueva o continuación?\n✅ ¿Ya se resolvió o está pendiente?\n✅ Resume la solicitud de forma clara y precisa\n\n### **PASO 5: CATEGORIZACIÓN**\n✅ Asignar categoría completa de 3 niveles\n✅ Debe reflejar el tema principal de la conversación\n✅ Debe ser específica y descriptiva\n\n### **PASO 6: DETERMINACIÓN DE ETAPA**\n✅ Identifica en qué etapa del flujo está la conversación\n✅ Usa el algoritmo de detección\n✅ Asigna el estatusEmbudo y statusId correcto\n\n---\n\n## 🔄 **ETAPAS DEL FLUJO - SIMPLIFICADO**\n\n### **10001 - INTERACCION IA**\n**Descripción:** Cliente inició conversación pero aún no proporciona información para identificarse\n**Cuándo usar:**\n- Cliente dice \"Hola\", \"Buenos días\", \"Tengo una consulta\"\n- Bot NO ha ejecutado búsqueda aún\n- Cliente NO ha dado correo/DNI/teléfono\n- Conversación recién comienza\n\n### **10002 - CLIENTE IDENTIFICADO IA**\n**Descripción:** Bot identificó exitosamente al cliente y está listo para atender\n**Cuándo usar:**\n- Bot confirmó: \"Te identifico como [inquilino/propietario] del inmueble [código]\"\n- Tiene: nombre, persona, codigoInmueble\n- Bot pregunta: \"¿En qué puedo ayudarte?\"\n- Cliente identificado pero aún no hace consulta específica\n\n### **10003 - CONSULTA RESUELTA IA**\n**Descripción:** Bot encontró respuesta y resolvió completamente la consulta del cliente\n**Cuándo usar:**\n- Bot proporcionó información completa\n- Bot compartió link/manual/instrucciones\n- Cliente recibió respuesta satisfactoria\n- NO requiere intervención humana\n- Ejemplos: \"¿Cómo pago?\" → Bot explica Kashio\n\n### **10004 - TICKET IA**\n**Descripción:** Requiere creación de ticket para intervención del equipo humano\n**Cuándo usar:**\n- Requiere coordinación con área específica\n- Necesita acción del equipo (mantenimiento, pagos, administración)\n- Bot indica: \"Un asesor se contactará contigo\"\n- Cualquier nivel de urgencia (baja, media, alta)\n- Ejemplos: reparaciones, verificar pagos, coordinar cambios\n\n### **10005 - CASO ESPECIAL IA**\n**Descripción:** Bot no tiene información o situación compleja que requiere atención especializada\n**Cuándo usar:**\n- Bot NO encontró información en base de conocimiento\n- Bot dice: \"No encuentro información sobre...\"\n- Cliente pide hablar con persona/asesor específicamente\n- Consulta muy compleja o fuera del alcance del bot\n- Información contradictoria o confusa\n- **SIEMPRE requiere explicar en detalle_caso_especial POR QUÉ es caso especial**\n\n### **10006 - ASESOR IA**\n**Descripción:** Cliente está siendo atendido por un asesor humano o fue transferido\n**Cuándo usar:**\n- Se detecta que un humano está respondiendo (no es bot)\n- Cliente fue transferido explícitamente a asesor\n- Conversación ya NO es con IA\n- **NOTA:** Esta etapa es poco común, solo usar si es evidente\n\n---\n\n## 🎯 **ALGORITMO DE DETECCIÓN**\n\n```python\ndef detectar_etapa():\n    # 1. Verificar si es asesor humano\n    if conversacion_con_humano():\n        return 10006  # ASESOR IA\n    \n    # 2. Verificar si cliente NO está identificado\n    if not cliente_tiene_datos_basicos():\n        return 10001  # INTERACCION IA\n    \n    # 3. Cliente identificado - evaluar siguiente paso\n    if cliente_identificado():\n        \n        # 3a. ¿Ya hizo consulta específica?\n        if not cliente_hizo_consulta_especifica():\n            return 10002  # CLIENTE IDENTIFICADO IA\n        \n        # 3b. ¿Es caso especial?\n        if bot_no_tiene_info() or cliente_pide_humano():\n            return 10005  # CASO ESPECIAL IA\n        \n        # 3c. ¿Bot resolvió la consulta?\n        if bot_dio_respuesta_completa() and no_requiere_accion_humana():\n            return 10003  # CONSULTA RESUELTA IA\n        \n        # 3d. ¿Requiere ticket/acción humana?\n        if requiere_intervencion_humana():\n            return 10004  # TICKET IA\n        \n        # Por defecto: Cliente identificado esperando\n        return 10002  # CLIENTE IDENTIFICADO IA\n```\n\n---\n\n## 🔥 **CRITERIOS DE URGENCIA (Para Tickets)**\n\n### **URGENCIA ALTA:**\n- **Palabras clave:** \"fuga\", \"filtración\", \"inundación\", \"problema eléctrico\", \"sin luz\", \"urgente\", \"emergencia\", \"daño\", \"riesgo\"\n- **Contexto:** Afecta seguridad o habitabilidad inmediata\n- **Bot dice:** \"lo más pronto posible\", \"urgente\", \"prioritario\"\n\n### **URGENCIA MEDIA:**\n- **Palabras clave:** \"coordinar\", \"reparación\", \"arreglo\", \"cobro extraño\", \"duda pago\", \"aire acondicionado\"\n- **Contexto:** Debe resolverse pronto pero no es emergencia\n- **Bot dice:** \"48 horas hábiles\"\n\n### **URGENCIA BAJA:**\n- **Palabras clave:** \"consulta\", \"información\", \"factura\", \"contrato\", \"¿cómo...?\", \"¿cuándo...?\"\n- **Contexto:** Solo información administrativa o coordinación simple\n\n---\n\n## 📝 **ESTRUCTURA JSON OBLIGATORIA**\n\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"\",\n  \"correoCliente\": \"\",\n  \"persona\": \"\",\n  \"codigoInmueble\": \"\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"\",\n  \n  \"resumen_solicitud\": \"\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"\",\n  \"seg_2\": \"\",\n  \n  \"estatusEmbudo\": \"\",\n  \"statusId\": 0,\n  \n  \"clienteIdentificado\": false\n}\n```\n\n### **DESCRIPCIÓN DE CADA CAMPO:**\n\n**DATOS DEL CLIENTE:**\n- `nombreCliente`: Nombre completo extraído de la conversación o \"\"\n- `telefonoCliente`: +51XXXXXXXXX o \"\"\n- `correoCliente`: email@domain.com o \"\"\n- `persona`: \"inquilino\" / \"propietario\" / \"proveedor\" / \"\"\n- `codigoInmueble`: Código del inmueble o \"\"\n- `relacionTitular`: \"pareja\" / \"familiar\" / etc, o \"\" si es titular directo\n\n**CATEGORIZACIÓN:**\n- `categoria_completa`: \"NIVEL_1 - NIVEL_2 - NIVEL_3\" (formato exacto con espacios y guiones)\n\n**SOLICITUD:**\n- `resumen_solicitud`: Resumen breve y claro (máx 200 caracteres) de lo que solicita el cliente\n  - ✅ SIEMPRE llenar si cliente hizo consulta\n  - ✅ Ser específico y claro\n  - ✅ Mencionar detalles relevantes\n  - ❌ NUNCA dejar vacío si hay consulta\n\n**SOLUCIÓN:**\n- `tiene_solucion`: true / false\n  - true = Se brindó alguna información/respuesta/solución al cliente\n  - false = Aún no se ha brindado solución\n  - Este campo es INDEPENDIENTE de si requiere ticket o no\n- `descripcion_solucion`: (SOLO si tiene_solucion = true)\n  - Describir QUÉ solución se brindó o QUÉ información se proporcionó\n  - Ser específico sobre la acción realizada\n  - Ejemplos: \"Se brindó el RUC de la empresa\", \"Se envió el código de pago\", \"Se explicó el proceso de pago por Kashio\"\n  - Si tiene_solucion = false → dejar vacío \"\"\n\n**TICKET:**\n- `requiereTicket`: true / false\n  - true = Necesita intervención humana\n  - false = Bot resolvió o no requiere acción\n- `detalle_ticket`: (SOLO si requiereTicket = true)\n  - Explicar QUÉ debe hacer el equipo\n  - Incluir nivel de urgencia si aplica\n  - Ser claro y específico\n  - Si requiereTicket = false → dejar vacío \"\"\n\n**CASO ESPECIAL:**\n- `caso_especial`: true / false\n  - true = Bot no tiene info O cliente pide humano O situación compleja\n  - false = Caso normal\n- `detalle_caso_especial`: (SOLO si caso_especial = true)\n  - Explicar POR QUÉ es caso especial\n  - Ser específico\n  - Si caso_especial = false → dejar vacío \"\"\n\n**MENSAJES DE SEGUIMIENTO:**\n- `seg_1`: Primer mensaje de seguimiento para el cliente\n  - ✅ SIEMPRE debe tener contenido\n  - ✅ Mensaje contextual relacionado con la conversación actual\n  - ✅ Propósito: Reactivar conversación si el cliente deja en visto\n  - ✅ Tono amigable, profesional, corto, invita a continuar\n  - ✅ Máximo 150 caracteres\n  - ❌ NO USAR EMOJIS (crítico)\n  - **Ejemplos correctos:**\n    - \"Hola Juan, ¿pudiste revisar la información que te compartí?\"\n    - \"Hola María, ¿lograste resolver tu consulta o necesitas algo más?\"\n    - \"Hola Carlos, ¿quedó clara la información sobre el pago?\"\n  \n- `seg_2`: Segundo mensaje de seguimiento para el cliente\n  - ✅ SIEMPRE debe tener contenido\n  - ✅ Mensaje contextual si el cliente sigue sin responder después de seg_1\n  - ✅ Propósito: Segunda oportunidad de reactivar conversación\n  - ✅ Puede ofrecer ayuda adicional o preguntar si necesita algo más\n  - ✅ Máximo 150 caracteres\n  - ❌ NO USAR EMOJIS (crítico)\n  - **Ejemplos correctos:**\n    - \"¿Hay algo más en lo que pueda ayudarte? Estoy aquí para lo que necesites.\"\n    - \"Si tienes alguna otra consulta, no dudes en escribirme.\"\n    - \"¿Necesitas que te explique algo más o está todo claro?\"\n\n**ETAPA:**\n- `estatusEmbudo`: Nombre de la etapa (ver lista arriba)\n- `statusId`: Código numérico SIN comillas (10001-10006)\n\n**FLAG:**\n- `clienteIdentificado`: true / false\n  - true = Bot confirmó identificación con datos completos\n  - false = Cliente NO identificado aún\n\n---\n\n## 📋 **REGLAS CRÍTICAS DE LLENADO**\n\n### **1. SIEMPRE REVISAR TODA LA CONVERSACIÓN**\n- Lee TODOS los mensajes desde el inicio\n- NO te saltes mensajes intermedios\n- Considera el contexto completo\n- Busca información en TODO el historial\n\n### **2. NO INVENTAR INFORMACIÓN**\n- Si un dato NO aparece en la conversación → dejar vacío (\"\")\n- NO asumir valores\n- NO inventar nombres, correos, teléfonos\n- SOLO extraer lo que está EXPLÍCITAMENTE escrito\n\n### **3. resumen_solicitud**\n✅ **SIEMPRE llenar si el cliente hizo una consulta o solicitud**\n✅ Máximo 200 caracteres\n✅ Claro, específico y preciso\n✅ Incluir detalles relevantes (inmueble, tipo de problema)\n❌ NUNCA dejar vacío si hay consulta activa\n\n**Ejemplos correctos:**\n```\n✅ \"Consulta sobre cómo pagar alquiler mediante Kashio\"\n✅ \"Fuga de agua en baño del depto 205 que daña muebles. Urgente.\"\n✅ \"Solicita cambio de habitación del inmueble 503\"\n✅ \"Propietario no recibió pago de contraprestación del mes\"\n✅ \"Consulta sobre posibilidad de subarrendar departamento\"\n✅ \"Solicita código WiFi para conectarse\"\n```\n\n### **4. requiereTicket y detalle_ticket**\n- Si `requiereTicket = true` → DEBES llenar `detalle_ticket`\n- Si `requiereTicket = false` → `detalle_ticket` debe ser \"\"\n- `detalle_ticket` debe explicar QUÉ debe hacer el equipo\n\n**Ejemplos correctos:**\n```\n✅ \"Coordinar reparación urgente de fuga en baño depto 205\"\n✅ \"Verificar por qué no aparece pago pendiente en sistema\"\n✅ \"Revisar contrato inmueble 102 sobre condiciones de subarriendo\"\n✅ \"Validar pago de contraprestación no recibido por propietario del inmueble 401\"\n✅ \"Coordinar cambio de habitación de inquilina del inmueble 503\"\n```\n\n### **5. caso_especial y detalle_caso_especial**\n- Si `caso_especial = true` → DEBES llenar `detalle_caso_especial`\n- Si `caso_especial = false` → `detalle_caso_especial` debe ser \"\"\n- `detalle_caso_especial` debe explicar POR QUÉ es caso especial\n\n**Ejemplos correctos:**\n```\n✅ \"Base de conocimiento no tiene información sobre condiciones de subarriendo\"\n✅ \"Cliente solicita hablar directamente con un asesor humano\"\n✅ \"Consulta muy específica sobre cláusula contractual que requiere revisión especializada\"\n✅ \"Bot no encontró información sobre este tipo de servicio en su base de datos\"\n✅ \"Situación compleja con múltiples problemas que requiere evaluación integral\"\n```\n\n### **6. categoria_completa**\n✅ SIEMPRE usar formato: \"NIVEL_1 - NIVEL_2 - NIVEL_3\"\n✅ Con espacios antes y después de los guiones\n✅ Todo en MAYÚSCULAS\n✅ Sin tildes ni caracteres especiales\n\n### **7. tiene_solucion y descripcion_solucion**\n\n**tiene_solucion:**\n- `true`: Cuando el bot YA brindó alguna información, respuesta o solución al cliente\n- `false`: Cuando aún NO se ha proporcionado ninguna solución\n\n**descripcion_solucion (SOLO si tiene_solucion = true):**\n✅ Describir QUÉ información o solución se brindó\n✅ Ser específico sobre la acción realizada\n✅ Usar tiempo pasado (\"se brindó\", \"se envió\", \"se explicó\")\n✅ Máximo 150 caracteres\n❌ Dejar vacío (\"\") si tiene_solucion = false\n\n**Ejemplos correctos:**\n```\ntiene_solucion: true\ndescripcion_solucion: \"Se brindó el RUC de la empresa\"\n\ntiene_solucion: true\ndescripcion_solucion: \"Se envió el código de pago del inmueble 301\"\n\ntiene_solucion: true\ndescripcion_solucion: \"Se explicó el proceso completo de pago mediante Kashio con manual incluido\"\n\ntiene_solucion: true\ndescripcion_solucion: \"Se proporcionó la clave WiFi y nombre de red\"\n\ntiene_solucion: true\ndescripcion_solucion: \"Se buscó información de informes del cliente Juan y se enviaron los reportes solicitados\"\n\ntiene_solucion: false\ndescripcion_solucion: \"\"  (cuando aún no se ha dado solución)\n```\n\n**IMPORTANTE:** Este campo es independiente de si requiere ticket. Puede haber casos donde:\n- tiene_solucion=true y requiereTicket=false (bot resolvió todo)\n- tiene_solucion=true y requiereTicket=true (bot dio info parcial pero requiere seguimiento)\n- tiene_solucion=false y requiereTicket=true (aún no hay solución, se escaló)\n\n### **8. seg_1 y seg_2 (Mensajes de Seguimiento)**\n\n**REGLAS GENERALES:**\n✅ SIEMPRE deben tener contenido (nunca vacíos)\n✅ Máximo 150 caracteres cada uno\n✅ Tono amigable, natural y cercano\n✅ Contextuales a la conversación actual\n✅ Incluir el nombre del cliente si está disponible\n❌ **NO USAR EMOJIS** (crítico)\n\n**seg_1 (Primer seguimiento):**\n- Propósito: Reactivar conversación si cliente deja en visto\n- Referencia a la información compartida o consulta realizada\n- Pregunta si pudo revisar o si tiene dudas\n- Tono: Amigable, no insistente\n\n**Ejemplos de seg_1:**\n```\n\"Hola Juan, ¿pudiste revisar el código de pago que te compartí?\"\n\"Hola María, ¿te quedó alguna duda sobre el proceso de pago? Estoy aquí para ayudarte\"\n\"¿Lograste ver la información que te envié sobre Kashio?\"\n\"Hola Carlos, ¿necesitas algo más sobre tu consulta de cambio de habitación?\"\n\"¿Pudiste revisar el manual? Si tienes alguna pregunta, con gusto te ayudo\"\n```\n\n**seg_2 (Segundo seguimiento):**\n- Propósito: Segunda oportunidad de reactivar conversación\n- Ofrecer ayuda adicional\n- Preguntar si necesita algo más\n- Dejar la puerta abierta para futuras consultas\n- Tono: Servicial, cierra con ofrecimiento de ayuda\n\n**Ejemplos de seg_2:**\n```\n\"¿Hay algo más en lo que pueda ayudarte? Estoy aquí cuando me necesites\"\n\"Si necesitas cualquier otra información, no dudes en escribirme\"\n\"¿Todo quedó claro con tu consulta? Aquí estoy para lo que necesites\"\n\"Si tienes alguna otra pregunta, con gusto te ayudo\"\n\"Cualquier duda adicional, puedes contactarme. Que tengas un buen día\"\n```\n\n**CONSIDERACIONES ESPECIALES:**\n\n**Si el cliente NO está identificado:**\n```\nseg_1: \"Hola, ¿sigues ahí? ¿Puedo ayudarte con algo?\"\nseg_2: \"Estoy disponible si necesitas asistencia. ¿En qué puedo ayudarte?\"\n```\n\n**Si la consulta fue resuelta:**\n```\nseg_1: \"¿La información que te compartí te fue útil?\"\nseg_2: \"Si necesitas algo más, aquí estoy para ayudarte\"\n```\n\n**Si requiere ticket o caso especial:**\n```\nseg_1: \"Un asesor se contactará contigo pronto. ¿Tienes alguna duda mientras tanto?\"\nseg_2: \"¿Hay algo más que pueda ayudarte mientras esperas la atención del asesor?\"\n```\n\n### **9. statusId**\n✅ SIEMPRE numérico SIN comillas\n✅ Solo valores válidos: 10001, 10002, 10003, 10004, 10005, 10006\n❌ NO usar: \"10001\", 10007, 10008, etc.\n\n---\n\n## 🔍 **EJEMPLOS COMPLETOS**\n\n### **Ejemplo 1: Interacción Inicial**\n\n**Conversación:**\n```\nCliente: \"Hola, buenos días\"\nBot: [Ejecuta búsqueda por teléfono]\nBot: \"Hola, no encuentro un registro con tu número. ¿Podrías brindarme tu correo electrónico?\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"\",\n  \"telefonoCliente\": \"+51923456789\",\n  \"correoCliente\": \"\",\n  \"persona\": \"\",\n  \"codigoInmueble\": \"\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"NO_IDENTIFICADO - IDENTIFICACION - PENDIENTE\",\n  \n  \"resumen_solicitud\": \"Cliente saludó pero aún no proporciona datos para identificarse\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola, ¿sigues por ahí? Estoy listo para ayudarte con lo que necesites\",\n  \"seg_2\": \"¿Hay algo en lo que pueda asistirte? Estoy disponible cuando quieras\",\n  \n  \"estatusEmbudo\": \"INTERACCION IA\",\n  \"statusId\": 10001,\n  \n  \"clienteIdentificado\": false\n}\n```\n\n---\n\n### **Ejemplo 2: Cliente Identificado**\n\n**Conversación:**\n```\nCliente: \"Hola\"\nBot: [Busca por teléfono - encontrado]\nBot: \"Perfecto Juan, te identifico como inquilino del inmueble 301. ¿En qué puedo ayudarte?\"\nCliente: [Aún no responde]\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Juan\",\n  \"telefonoCliente\": \"+51987654321\",\n  \"correoCliente\": \"juan@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"301\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - CONSULTAS - GENERAL\",\n  \n  \"resumen_solicitud\": \"Cliente identificado, esperando que indique su consulta\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Juan, ¿en qué puedo ayudarte hoy?\",\n  \"seg_2\": \"¿Hay algo en lo que pueda asistirte? Estoy aquí para lo que necesites\",\n  \n  \"estatusEmbudo\": \"CLIENTE IDENTIFICADO IA\",\n  \"statusId\": 10002,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 3: Consulta Resuelta**\n\n**Conversación:**\n```\nBot: \"Perfecto Juan, te identifico como inquilino del inmueble 301. ¿En qué puedo ayudarte?\"\nCliente: \"¿Cómo pago el alquiler?\"\nBot: [HTTP Request - encuentra respuesta]\nBot: \"Para pagar tu alquiler mediante Kashio, sigue estos pasos: [instrucciones completas]\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Juan\",\n  \"telefonoCliente\": \"+51987654321\",\n  \"correoCliente\": \"juan@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"301\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - PAGOS - KASHIO\",\n  \n  \"resumen_solicitud\": \"Consulta sobre cómo pagar alquiler mediante Kashio\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se explicó el proceso completo de pago mediante Kashio con instrucciones detalladas\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Juan, ¿pudiste revisar las instrucciones de pago por Kashio?\",\n  \"seg_2\": \"¿Te quedó alguna duda sobre el proceso? Con gusto puedo ayudarte\",\n  \n  \"estatusEmbudo\": \"CONSULTA RESUELTA IA\",\n  \"statusId\": 10003,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 4: Ticket Urgencia Alta**\n\n**Conversación:**\n```\nBot: \"Perfecto María, te identifico como inquilina del inmueble 205. ¿En qué puedo ayudarte?\"\nCliente: \"Tengo una fuga de agua muy grande en mi baño, está dañando mis muebles\"\nBot: \"Entiendo, es una situación urgente. Un asesor del área de mantenimiento se contactará contigo lo más pronto posible.\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"María\",\n  \"telefonoCliente\": \"+51912345678\",\n  \"correoCliente\": \"maria@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"205\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - MANTENIMIENTO - FUGA_AGUA\",\n  \n  \"resumen_solicitud\": \"Fuga de agua muy grande en baño del depto 205, está dañando muebles. Requiere atención urgente.\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": true,\n  \"detalle_ticket\": \"Coordinar reparación URGENTE de fuga de agua en baño depto 205. Está causando daños a muebles. Prioridad ALTA - contactar lo más pronto posible.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola María, el área de mantenimiento se contactará contigo muy pronto. ¿Tienes alguna duda mientras tanto?\",\n  \"seg_2\": \"¿Hay algo más en lo que pueda ayudarte mientras esperas la atención del área de mantenimiento?\",\n  \n  \"estatusEmbudo\": \"TICKET IA\",\n  \"statusId\": 10004,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 5: Caso Especial**\n\n**Conversación:**\n```\nBot: \"Perfecto Carlos, te identifico como inquilino del inmueble 102. ¿En qué puedo ayudarte?\"\nCliente: \"¿Puedo subarrendar mi departamento?\"\nBot: [HTTP Request - no encuentra respuesta]\nBot: \"Entiendo tu consulta. No encuentro información específica sobre subarriendo. Un asesor especializado se contactará contigo para revisar las condiciones de tu contrato.\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Carlos\",\n  \"telefonoCliente\": \"+51998765432\",\n  \"correoCliente\": \"carlos@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"102\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - CONSULTAS - SUBARRIENDO\",\n  \n  \"resumen_solicitud\": \"Consulta sobre posibilidad de subarrendar su departamento\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": true,\n  \"detalle_ticket\": \"Revisar cláusulas del contrato del inmueble 102 para determinar si permite subarriendo. Responder al inquilino con información específica.\",\n  \n  \"caso_especial\": true,\n  \"detalle_caso_especial\": \"Base de conocimiento no tiene información específica sobre condiciones de subarriendo. Requiere revisión de contrato por asesor especializado.\",\n  \n  \"seg_1\": \"Hola Carlos, un asesor se contactará contigo pronto para revisar tu contrato. ¿Tienes otra consulta mientras tanto?\",\n  \"seg_2\": \"¿Hay algo más en lo que pueda ayudarte mientras esperas la respuesta del asesor?\",\n  \n  \"estatusEmbudo\": \"CASO ESPECIAL IA\",\n  \"statusId\": 10005,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 6: Ticket Urgencia Media**\n\n**Conversación:**\n```\nBot: \"Perfecto Luis, te identifico como propietario del inmueble 401. ¿En qué puedo ayudarte?\"\nCliente: \"No he recibido mi pago de este mes\"\nBot: \"Entiendo tu preocupación. Un asesor del área de pagos verificará tu situación y se contactará contigo en un máximo de 48 horas hábiles.\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Luis\",\n  \"telefonoCliente\": \"+51934567890\",\n  \"correoCliente\": \"luis@email.com\",\n  \"persona\": \"propietario\",\n  \"codigoInmueble\": \"401\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"PROPIETARIO - PAGOS - CONTRAPRESTACION_NO_RECIBIDA\",\n  \n  \"resumen_solicitud\": \"Propietario no recibió pago de contraprestación del mes actual para inmueble 401\",\n  \n  \"tiene_solucion\": false,\n  \"descripcion_solucion\": \"\",\n  \n  \"requiereTicket\": true,\n  \"detalle_ticket\": \"Verificar con área de pagos por qué no se realizó el depósito de contraprestación al propietario del inmueble 401. Revisar estado del pago y contactar al propietario en máximo 48 horas hábiles.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Luis, el área de pagos está verificando tu caso y se contactará contigo pronto. ¿Tienes alguna otra consulta?\",\n  \"seg_2\": \"¿Hay algo más en lo que pueda ayudarte mientras esperas la respuesta del área de pagos?\",\n  \n  \"estatusEmbudo\": \"TICKET IA\",\n  \"statusId\": 10004,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 7: Conversación Acumulativa - Múltiples Mensajes**\n\n**Conversación:**\n```\n[Mensaje 1]\nCliente: \"Hola\"\nBot: [Busca - 404]\nBot: \"Hola, no encuentro registro. ¿Tu correo?\"\n\n[Mensaje 2]\nCliente: \"ana@email.com\"\nBot: [Busca por correo - encontrado]\nBot: \"Perfecto Ana, te identifico como inquilina del 503. ¿En qué puedo ayudarte?\"\n\n[Mensaje 3]\nCliente: \"Necesito el código de pago\"\nBot: \"Con gusto, te envío tu código de pago para el inmueble 503: [código]\"\n\n[Mensaje 4]\nCliente: \"Gracias. También quiero saber si puedo cambiar de habitación\"\nBot: \"Entiendo. Para coordinar un cambio de habitación, un asesor se contactará contigo en 48 horas hábiles.\"\n```\n\n**JSON (Análisis de TODA la conversación):**\n```json\n{\n  \"nombreCliente\": \"Ana\",\n  \"telefonoCliente\": \"+51945678901\",\n  \"correoCliente\": \"ana@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"503\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - CAMBIOS - HABITACION_DEPARTAMENTO\",\n  \n  \"resumen_solicitud\": \"Solicitud de código de pago (ya resuelto). Actualmente solicita cambio de habitación del inmueble 503.\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se proporcionó el código de pago del inmueble 503\",\n  \n  \"requiereTicket\": true,\n  \"detalle_ticket\": \"Coordinar con área correspondiente sobre solicitud de cambio de habitación de la inquilina Ana del inmueble 503. Validar disponibilidad y condiciones. Contactar en 48 horas hábiles.\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Ana, un asesor se contactará contigo pronto sobre el cambio de habitación. ¿Tienes alguna otra consulta?\",\n  \"seg_2\": \"¿Hay algo más en lo que pueda ayudarte mientras esperas la respuesta sobre tu cambio?\",\n  \n  \"estatusEmbudo\": \"TICKET IA\",\n  \"statusId\": 10004,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n**NOTA:** El análisis es ACUMULATIVO. Se consideró toda la conversación pero la etapa y categoría reflejan el último requerimiento ACTIVO (cambio de habitación), mencionando brevemente que la consulta del código de pago ya fue resuelta. El campo `tiene_solucion=true` porque SÍ se brindó solución al código de pago.\n\n---\n\n### **Ejemplo 8: Consulta con Solución - RUC de Empresa**\n\n**Conversación:**\n```\nBot: \"Perfecto Sandra, te identifico como inquilina del inmueble 602. ¿En qué puedo ayudarte?\"\nCliente: \"Necesito el RUC de la empresa para mi contabilidad\"\nBot: \"Claro, el RUC de PROPER PERÚ es 20123456789. ¿Necesitas algún otro dato?\"\nCliente: [No responde]\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Sandra\",\n  \"telefonoCliente\": \"+51956789012\",\n  \"correoCliente\": \"sandra@email.com\",\n  \"persona\": \"inquilino\",\n  \"codigoInmueble\": \"602\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"INQUILINO - CONSULTAS - INFORMACION_EMPRESA\",\n  \n  \"resumen_solicitud\": \"Solicitud del RUC de la empresa para su contabilidad\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se proporcionó el RUC de PROPER PERÚ (20123456789)\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Sandra, ¿te sirvió el RUC que te compartí?\",\n  \"seg_2\": \"¿Necesitas algún otro dato de la empresa? Estoy aquí para ayudarte\",\n  \n  \"estatusEmbudo\": \"CONSULTA RESUELTA IA\",\n  \"statusId\": 10003,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n### **Ejemplo 9: Envío de Reporte Solicitado**\n\n**Conversación:**\n```\nBot: \"Perfecto Roberto, te identifico como propietario del inmueble 305. ¿En qué puedo ayudarte?\"\nCliente: \"Necesito que me envíes el reporte de ocupación de mi departamento\"\nBot: [Busca información]\nBot: \"Por supuesto, te envío el reporte de ocupación del inmueble 305. [adjunta archivo PDF]\"\n```\n\n**JSON:**\n```json\n{\n  \"nombreCliente\": \"Roberto\",\n  \"telefonoCliente\": \"+51967890123\",\n  \"correoCliente\": \"roberto@email.com\",\n  \"persona\": \"propietario\",\n  \"codigoInmueble\": \"305\",\n  \"relacionTitular\": \"\",\n  \n  \"categoria_completa\": \"PROPIETARIO - PLATAFORMA - REPORTES\",\n  \n  \"resumen_solicitud\": \"Solicitud de reporte de ocupación del inmueble 305\",\n  \n  \"tiene_solucion\": true,\n  \"descripcion_solucion\": \"Se buscó y envió el reporte de ocupación del inmueble 305 en formato PDF\",\n  \n  \"requiereTicket\": false,\n  \"detalle_ticket\": \"\",\n  \n  \"caso_especial\": false,\n  \"detalle_caso_especial\": \"\",\n  \n  \"seg_1\": \"Hola Roberto, ¿pudiste revisar el reporte de ocupación que te envié?\",\n  \"seg_2\": \"¿Necesitas algún otro reporte o información? Con gusto te ayudo\",\n  \n  \"estatusEmbudo\": \"CONSULTA RESUELTA IA\",\n  \"statusId\": 10003,\n  \n  \"clienteIdentificado\": true\n}\n```\n\n---\n\n## ⚡ **REGLAS DE EXTRACCIÓN DE DATOS**\n\n### **TELÉFONO:**\n- Buscar: 9XX XXX XXX, 9XXXXXXXX\n- Agregar +51 si falta\n- Formato final: +51XXXXXXXXX\n- Si NO aparece: \"\"\n\n### **CORREO:**\n- Validar: texto@dominio.extension\n- Convertir a minúsculas\n- Sin espacios\n- Si NO aparece: \"\"\n\n### **NOMBRE:**\n- Extraer del mensaje del bot cuando identifica\n- Primera letra en mayúscula\n- Sin títulos (Sr., Sra., etc.)\n- Si NO aparece: \"\"\n\n### **PERSONA:**\n- Valores válidos: \"inquilino\", \"propietario\", \"proveedor\"\n- Extraer cuando bot dice \"te identifico como...\"\n- Si NO aparece: \"\"\n\n### **CÓDIGO INMUEBLE:**\n- Extraer del mensaje de confirmación del bot\n- Número o alfanumérico\n- Si varios, usar el relevante a la consulta\n- Si NO aparece: \"\"\n\n---\n\n## ⚠️ **CHECKLIST OBLIGATORIO ANTES DE RESPONDER**\n\n```\n□ ¿Leí TODA la conversación desde el inicio hasta el final?\n□ ¿Revisé la infoPrevia si existe?\n□ ¿Extraje SOLO información que está EXPLÍCITAMENTE en la conversación?\n□ ¿NO inventé ningún dato?\n□ ¿El cliente fue identificado por el bot?\n□ ¿La categoria_completa tiene formato: NIVEL_1 - NIVEL_2 - NIVEL_3?\n□ ¿El resumen_solicitud está completo y es claro?\n□ ¿Evalué correctamente si tiene_solucion es true o false?\n□ ¿Si tiene_solucion=true, completé descripcion_solucion?\n□ ¿Si requiereTicket=true, completé detalle_ticket?\n□ ¿Si caso_especial=true, completé detalle_caso_especial?\n□ ¿Los mensajes seg_1 y seg_2 están completos y son contextuales?\n□ ¿El statusId es NUMÉRICO sin comillas?\n□ ¿El estatusEmbudo corresponde al statusId?\n□ ¿Todos los campos requeridos están presentes?\n□ ¿El JSON es válido y está completo?\n```\n\n---\n\n## 🔴 **RECORDATORIO CRÍTICO FINAL**\n\n```\nANTES DE RESPONDER, VERIFICAR:\n\n1. ✅ LEÍSTE TODA LA CONVERSACIÓN COMPLETA\n   → No te saltaste ningún mensaje\n   → Consideraste infoPrevia si existe\n\n2. ✅ NO INVENTASTE INFORMACIÓN\n   → Solo extraes lo que está escrito\n   → Campos vacíos (\"\") si no hay datos\n\n3. ✅ CATEGORIZACIÓN CORRECTA\n   → Formato: \"NIVEL_1 - NIVEL_2 - NIVEL_3\"\n   → Con espacios y guiones correctos\n\n4. ✅ EVALUACIÓN DE SOLUCIÓN\n   → tiene_solucion: true/false correctamente evaluado\n   → Si true → descripcion_solucion lleno\n   → Si false → descripcion_solucion vacío\n\n5. ✅ CAMPOS CONDICIONALES\n   → requiereTicket=true → detalle_ticket lleno\n   → caso_especial=true → detalle_caso_especial lleno\n\n6. ✅ MENSAJES DE SEGUIMIENTO\n   → seg_1 y seg_2 SIEMPRE con contenido\n   → Contextuales a la conversación\n   → Máximo 150 caracteres cada uno\n   → Tono amigable y natural\n\n7. ✅ ETAPA CORRECTA\n   → statusId numérico (10001-10006)\n   → estatusEmbudo correspondiente\n\n8. ✅ JSON COMPLETO Y VÁLIDO\n   → Todos los campos presentes\n   → Sintaxis correcta\n\nRESPONDER SOLO JSON VALIDADO Y COMPLETO\n```\n\n---\n\n## 📖 **REFERENCIA RÁPIDA**\n\n```\nETAPAS:\n10001 - INTERACCION IA (cliente inicia, no identificado)\n10002 - CLIENTE IDENTIFICADO IA (identificado, sin consulta aún)\n10003 - CONSULTA RESUELTA IA (bot resolvió completamente)\n10004 - TICKET IA (requiere intervención humana)\n10005 - CASO ESPECIAL IA (bot sin info o complejo)\n10006 - ASESOR IA (atención humana directa)\n\nCATEGORIZACIÓN:\nNIVEL_1: INQUILINO / PROPIETARIO / NO_IDENTIFICADO\nNIVEL_2: MANTENIMIENTO / PAGOS / ACCESOS / LIMPIEZA / etc.\nNIVEL_3: Descriptor específico (DUCHA / WIFI / etc.)\n\nFORMATO: \"NIVEL_1 - NIVEL_2 - NIVEL_3\"\n```\n\n---\n\n**FIN DEL PROMPT v4.0**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        4784,
        1728
      ],
      "id": "a1980cdd-e53f-4e35-a984-aaa7fe0f9c12",
      "name": "Campos5",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "nombreCliente",
              "description": "Nombre completo extraído de la conversación o \"\"",
              "required": true
            },
            {
              "name": "telefonoCliente",
              "description": "+51XXXXXXXXX o \"\"",
              "required": true
            },
            {
              "name": "correoCliente",
              "description": "email@domain.com o \"\"",
              "required": true
            },
            {
              "name": "persona",
              "description": "\"inquilino\" / \"propietario\" / \"proveedor\" / \"\"",
              "required": true
            },
            {
              "name": "codigoInmueble",
              "description": "Código del inmueble o \"\"",
              "required": true
            },
            {
              "name": "relacionTitular",
              "description": "\"pareja\" / \"familiar\" / etc, o \"\" si es titular directo",
              "required": true
            },
            {
              "name": "categoria_completa",
              "description": " \"NIVEL_1 - NIVEL_2 - NIVEL_3\" (formato exacto con espacios y guiones)",
              "required": true
            },
            {
              "name": "resumen_solicitud",
              "description": "Resumen breve y claro (máx 200 caracteres) de lo que solicita el cliente",
              "required": true
            },
            {
              "name": "tiene_solucion",
              "type": "boolean",
              "description": "true = Se brindó alguna información/respuesta/solución al cliente false = Aún no se ha brindado solución Este campo es INDEPENDIENTE de si requiere ticket o no",
              "required": true
            },
            {
              "name": "descripcion_solucion",
              "description": "(SOLO si tiene_solucion = true)  Describir QUÉ solución se brindó o QUÉ información se proporcionó Ser específico sobre la acción realizada Ejemplos: \"Se brindó el RUC de la empresa\", \"Se envió el código de pago\", \"Se explicó el proceso de pago por Kashio\" Si tiene_solucion = false → dejar vacío \"\"",
              "required": true
            },
            {
              "name": "requiereTicket",
              "type": "boolean",
              "description": "true / false  true = Necesita intervención humana false = Bot resolvió o no requiere acción",
              "required": true
            },
            {
              "name": "detalle_ticket",
              "description": "(SOLO si requiereTicket = true)  Explicar QUÉ debe hacer el equipo Incluir nivel de urgencia si aplica Ser claro y específico Si requiereTicket = false → dejar vacío \"\"",
              "required": true
            },
            {
              "name": "caso_especial",
              "type": "boolean",
              "description": "true / false  true = Bot no tiene info O cliente pide humano O situación compleja false = Caso normal",
              "required": true
            },
            {
              "name": "detalle_caso_especial",
              "description": "(SOLO si caso_especial = true)  Explicar POR QUÉ es caso especial Ser específico Si caso_especial = false → dejar vacío \"\"",
              "required": true
            },
            {
              "name": "seg_1",
              "description": "Primer mensaje de seguimiento para el cliente",
              "required": true
            },
            {
              "name": "seg_2",
              "description": "Segundo mensaje de seguimiento para el cliente",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Nombre de la etapa (ver lista arriba)",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Código numérico SIN comillas (10001-10006)",
              "required": true
            },
            {
              "name": "clienteIdentificado",
              "type": "boolean",
              "description": "true / false  true = Bot confirmó identificación con datos completos false = Cliente NO identificado aún",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        5200,
        1728
      ],
      "id": "55c05c9b-82d6-404d-ac1e-f80e0a8ef27e",
      "name": "Information Extractor5",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4800,
        1952
      ],
      "id": "55d67d1c-35e5-44b2-84b7-f5f5ad2f35e5",
      "name": "OpenAI Chat Model13",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5264,
        1952
      ],
      "id": "05900f10-f1de-4b1f-b039-e7c28431f426",
      "name": "OpenAI Chat Model14",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper - Oct 2025"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": "=",
              "status_id": "=",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":798799,\"type\":\"text\"}",
                    "value": "={{ $json.output.persona }}"
                  },
                  {
                    "data": "{\"id\":798801,\"type\":\"text\"}",
                    "value": "={{ $json.output.codigoInmueble }}"
                  },
                  {
                    "data": "{\"id\":798803,\"type\":\"text\"}",
                    "value": "={{ $json.output.relacionTitular }}"
                  },
                  {
                    "data": "{\"id\":798805,\"type\":\"text\"}",
                    "value": "={{ $json.output.categoria_completa }}"
                  },
                  {
                    "data": "{\"id\":798807,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.resumen_solicitud }}"
                  },
                  {
                    "data": "{\"id\":798835,\"type\":\"checkbox\"}",
                    "value": "={{ $json.output.tiene_solucion }}"
                  },
                  {
                    "data": "{\"id\":798837,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.descripcion_solucion }}"
                  },
                  {
                    "data": "{\"id\":798809,\"type\":\"text\"}",
                    "value": "={{ $json.output.requiereTicket }}"
                  },
                  {
                    "data": "{\"id\":798811,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.detalle_ticket }}"
                  },
                  {
                    "data": "{\"id\":798813,\"type\":\"checkbox\"}",
                    "value": "={{ $json.output.caso_especial }}"
                  },
                  {
                    "data": "{\"id\":798815,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.detalle_caso_especial }}"
                  },
                  {
                    "data": "{\"id\":798825,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.seg_1 }}"
                  },
                  {
                    "data": "{\"id\":798827,\"type\":\"textarea\"}",
                    "value": "={{ $json.output.seg_2 }}"
                  },
                  {
                    "data": "{\"id\":798817,\"type\":\"text\"}",
                    "value": "={{ $json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":798819,\"type\":\"checkbox\"}",
                    "value": "={{ $json.output.clienteIdentificado }}"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        5552,
        1728
      ],
      "id": "01a0caad-8262-4fd3-8ca6-9a9b64338ad5",
      "name": "Update leads5",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4928,
        1952
      ],
      "id": "52ae62ae-0ca3-4406-b93f-487da0b6f2cd",
      "name": "Postgres Chat Memory9",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {
    "new message": [
      {
        "json": {
          "headers": {
            "host": "primary-production-0299.up.railway.app",
            "user-agent": "amoCRM-Webhooks/3.0",
            "content-length": "937",
            "accept-encoding": "gzip",
            "content-type": "application/x-www-form-urlencoded",
            "x-amocrm-requestid": "6211b990-0c84-4f6e-b23e-6c0d1ba2b74c",
            "x-forwarded-for": "169.150.216.79",
            "x-forwarded-host": "primary-production-0299.up.railway.app",
            "x-forwarded-proto": "https",
            "x-railway-edge": "railway/us-east4-eqdc4a",
            "x-railway-request-id": "ccqMbrTCTvKRwZpWCx5-qw",
            "x-real-ip": "169.150.216.79",
            "x-request-start": "1760793855297"
          },
          "params": {},
          "query": {},
          "body": {
            "account[subdomain]": "propertamibotcom",
            "account[id]": "30050693",
            "account[_links][self]": "https://propertamibotcom.amocrm.com",
            "message[add][0][id]": "9bf09a34-87c5-4b07-96de-645fad5fa2e0",
            "message[add][0][chat_id]": "e212a4d1-1c64-494a-a58a-918a2883ae8a",
            "message[add][0][talk_id]": "204036",
            "message[add][0][contact_id]": "24488535",
            "message[add][0][text]": "HOla",
            "message[add][0][created_at]": "1760793854",
            "message[add][0][element_type]": "2",
            "message[add][0][entity_type]": "lead",
            "message[add][0][element_id]": "22122449",
            "message[add][0][entity_id]": "22122449",
            "message[add][0][type]": "incoming",
            "message[add][0][author][id]": "f92fe9a6-bfe9-4f1c-b754-bf61e32d10d4",
            "message[add][0][author][type]": "external",
            "message[add][0][author][name]": "Martin Velasco Ormeno",
            "message[add][0][origin]": "waba"
          },
          "webhookUrl": "https://primary-production-0299.up.railway.app/webhook/rentas",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Lima",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "shared": [
    {
      "createdAt": "2025-08-01T18:40:51.374Z",
      "updatedAt": "2025-08-01T18:40:51.374Z",
      "role": "workflow:owner",
      "workflowId": "97xyyc9aCFy1mmbs",
      "projectId": "tpSonpyzopDOYZNA"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-01T18:41:06.465Z",
      "updatedAt": "2025-08-01T18:41:06.465Z",
      "id": "94z6tcDoVU8DriEW",
      "name": "IA"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-23T12:42:52.464Z",
  "versionId": "792db40e-615c-4032-b3af-407d02fbdfaa"
}