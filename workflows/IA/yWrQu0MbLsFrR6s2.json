{
  "active": true,
  "connections": {
    "Split Out1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get list of contacts": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Get list of contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert or update rows in a table": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Insert or update rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "Execute a SQL query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Execute a SQL query3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get list of contacts2": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Get list of contacts2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert or update rows in a table2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Insert or update rows in a table2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query3": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-23T04:15:40.700Z",
  "id": "yWrQu0MbLsFrR6s2",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "IA REPORT",
  "nodes": [
    {
      "parameters": {
        "fieldToSplitOut": "=_embedded.leads",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        384,
        272
      ],
      "id": "016e8895-6f3a-44cb-98e5-db27dd41fdf7",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "2504f489-361c-447f-93c2-2e867ae0c54f",
              "leftValue": "={{ $json._embedded.tags.toJsonString() }}",
              "rightValue": "RENTAS",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "7972cc23-970e-40a7-9973-5f70f5d42a25",
              "leftValue": "={{ $json._embedded.contacts[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        608,
        272
      ],
      "id": "73bb32d5-058b-41b9-ab8a-34a2fee7a7ff",
      "name": "Filter"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ed4e7330-076f-4bc8-a9fe-655965921e07",
              "name": "nombre",
              "value": "={{ $('Get list of contacts').item.json._embedded.contacts[0].name }}",
              "type": "string"
            },
            {
              "id": "09d7ed93-7735-4993-b380-9e4529016f0d",
              "name": "telefono",
              "value": "={{ $('Get list of contacts').item.json._embedded.contacts[0].custom_fields_values\n     .find(f => f.field_name === 'Phone')?.values?.[0]?.value || '' }}",
              "type": "string"
            },
            {
              "id": "830bdbe1-696d-4a85-9e28-7912409b356e",
              "name": "fechaCreacion",
              "value": "={{ $('Split Out1').item.json.created_at }}",
              "type": "string"
            },
            {
              "id": "90859fd1-3a39-4eba-89e5-47c1e46d998d",
              "name": "statusID",
              "value": "={{ $('Split Out1').item.json.status_id }}",
              "type": "string"
            },
            {
              "id": "7a0f0042-58be-4ea3-8fc3-d90db25c73b1",
              "name": "codInmueble",
              "value": "={{\n  (()=>{\n    const lead = $('Split Out1').item.json;\n    const cf = (lead.custom_fields_values || []).find(x => x.field_name === 'codigoInmueble');\n    const val = (cf && cf.values && cf.values[0]) ? cf.values[0].value : '';\n    return val;\n  })()\n}}",
              "type": "string"
            },
            {
              "id": "921a1934-e048-4b53-b493-15ed624117d1",
              "name": "idKommo",
              "value": "={{ $('Split Out1').item.json.id }}",
              "type": "string"
            },
            {
              "id": "02b2ae1b-ec65-420d-88c7-f0edf9038110",
              "name": "origen",
              "value": "={{\n  (()=>{\n    const lead = $('Split Out1').item.json;\n    const customFields = lead.custom_fields_values || [];\n\n    // 1. Primero, buscamos si 'LinkUrbania' tiene algÃºn valor.\n    const cfUrbania = customFields.find(x => x.field_name === 'LinkUrbania');\n    const hasLinkUrbania = (cfUrbania && cfUrbania.values && cfUrbania.values[0] && cfUrbania.values[0].value);\n\n    if (hasLinkUrbania) {\n      return 'URBANIA';\n    }\n\n    // 2. Si no, buscamos el valor de 'n8n - Origen' como alternativa.\n    const cfOrigen = customFields.find(x => x.field_name === 'n8n - Origen');\n    const origenValue = (cfOrigen && cfOrigen.values && cfOrigen.values[0]) ? cfOrigen.values[0].value : '';\n    \n    return origenValue;\n  })()\n}}",
              "type": "string"
            },
            {
              "id": "1ffd7449-5232-40fd-8fe0-5b6520736d1f",
              "name": "etapa",
              "value": "={{ $('Edit Fields1').item.json.etapa }}",
              "type": "string"
            },
            {
              "id": "1d19dd78-6a98-45db-81d4-f21b72c4bff1",
              "name": "fecha1",
              "value": "={{   (()=>{     const lead = $('Split Out1').item.json;     const cf = (lead.custom_fields_values || []).find(x => x.field_name === 'n8n - fecha1');     return (cf && cf.values && cf.values[0]) ? cf.values[0].value : '';   })() }}",
              "type": "string"
            },
            {
              "id": "e98d67b2-6626-41d7-9312-07ef8e399d31",
              "name": "fecha2",
              "value": "={{   (()=>{     const lead = $('Split Out1').item.json;     const cf = (lead.custom_fields_values || []).find(x => x.field_name === 'n8n - fecha2');     return (cf && cf.values && cf.values[0]) ? cf.values[0].value : '';   })() }}",
              "type": "string"
            },
            {
              "id": "d3556b37-eeb5-4100-a1c3-366bff4ec8b1",
              "name": "fechaMODO",
              "value": "={{   (()=>{     const lead = $('Split Out1').item.json;     const cf = (lead.custom_fields_values || []).find(x => x.field_name === 'n8n - fechaMODO');     return (cf && cf.values && cf.values[0]) ? cf.values[0].value : '';   })() }}",
              "type": "string"
            },
            {
              "id": "b2b50474-be45-4d6d-9123-d7a6594fbf2e",
              "name": "LinkUrbania",
              "value": "={{   (()=>{     const lead = $('Split Out1').item.json;     const cf = (lead.custom_fields_values || []).find(x => x.field_name === 'LinkUrbania');     const val = (cf && cf.values && cf.values[0]) ? cf.values[0].value : '';     return val;   })() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1952,
        176
      ],
      "id": "8e333d0d-1ba7-482f-90ec-985e9b116896",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "contacts",
        "filter": {
          "id": "={{ $('Split Out1').item.json._embedded.contacts[0].id }}"
        },
        "options": {
          "with": [
            "leads"
          ]
        },
        "limit": 1
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        1056,
        176
      ],
      "id": "2c8ecad3-06b7-4f1b-914d-1142cbfd32cc",
      "name": "Get list of contacts",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "url": " https://propertamibotcom.kommo.com/api/v4/leads/pipelines/11240224/statuses",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        176
      ],
      "id": "a9a909b6-c353-486d-a2fd-bd20ba2c4eae",
      "name": "HTTP Request",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        832,
        272
      ],
      "id": "f270d9f4-cbda-44c1-a100-6f3e18aa05ba",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9cd639ed-d911-486c-8770-5fbe6f7e9670",
              "name": "etapa",
              "value": "={{\n  (() => {\n    const statuses = $('HTTP Request').item.json?._embedded?.statuses ?? [];\n    const statusId = $('Split Out1').item.json.status_id;\n    const hit = statuses.find(s => String(s.id) === String(statusId));\n    return hit?.name || '';\n  })()\n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1504,
        176
      ],
      "id": "7a80d4b8-60dc-4832-a1de-57982043ee9c",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "crm",
          "mode": "list",
          "cachedResultName": "crm"
        },
        "table": {
          "__rl": true,
          "value": "reporte_david_ia",
          "mode": "list",
          "cachedResultName": "reporte_david_ia"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Edit Fields').item.json.idKommo }}",
            "nombre": "={{ $('Edit Fields').item.json.nombre }}",
            "telefono": "={{ $('Edit Fields').item.json.telefono }}",
            "fechaCreacion": "={{ new Date($('Edit Fields').item.json.fechaCreacion * 1000).toISOString().replace('T',' ').substring(0,19) }}",
            "statusID": "={{ $('Edit Fields').item.json.statusID }}",
            "codInmueble": "={{ $('Edit Fields').item.json.codInmueble }}",
            "idKommo": "={{ $('Edit Fields').item.json.idKommo }}",
            "origen": "={{ $('Edit Fields').item.json.origen }}",
            "etapa": "={{ $('Edit Fields').item.json.etapa }}",
            "nc_order": 0,
            "fecha1": "={{ $('Edit Fields').item.json.fecha1 }}",
            "fecha2": "={{ $('Edit Fields').item.json.fecha2 }}",
            "fecha_modo": "={{ $('Edit Fields').item.json.fechaMODO }}",
            "dio_horario": "={{ $json.dio_horario }}",
            "agendo_visita": "={{ $json.agendo_visita }}",
            "inmueble_entregado": "={{ $json.inmueble_entregado }}",
            "realizo_visita": "={{ $json.realizo_visita }}",
            "inmueble_identificado": "={{ $json.inmueble_identificado }}",
            "caso_especial": "={{ $json.caso_especial }}",
            "fecha_mes": "={{ $json.fecha_mes }}",
            "fecha_dia": "={{ $json.fecha_dia }}",
            "fecha_semana": "={{ $json.fecha_semana }}",
            "tipo_cliente": "={{ $json.tipo_cliente }}",
            "es_nuevo": "={{ $json.es_nuevo }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_by",
              "displayName": "created_by",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "updated_by",
              "displayName": "updated_by",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "nc_order",
              "displayName": "nc_order",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "fechaCreacion",
              "displayName": "fechaCreacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "statusID",
              "displayName": "statusID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "codInmueble",
              "displayName": "codInmueble",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "idKommo",
              "displayName": "idKommo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "origen",
              "displayName": "origen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "etapa",
              "displayName": "etapa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "fecha1",
              "displayName": "fecha1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "fecha2",
              "displayName": "fecha2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "fecha_modo",
              "displayName": "fecha_modo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "dio_horario",
              "displayName": "dio_horario",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "agendo_visita",
              "displayName": "agendo_visita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "inmueble_entregado",
              "displayName": "inmueble_entregado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "realizo_visita",
              "displayName": "realizo_visita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "inmueble_identificado",
              "displayName": "inmueble_identificado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "caso_especial",
              "displayName": "caso_especial",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "fecha_mes",
              "displayName": "fecha_mes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "fecha_dia",
              "displayName": "fecha_dia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "fecha_semana",
              "displayName": "fecha_semana",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "tipo_cliente",
              "displayName": "tipo_cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "es_nuevo",
              "displayName": "es_nuevo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2848,
        224
      ],
      "id": "1a8576e0-7c93-404f-b24b-c2333a33c8fb",
      "name": "Insert or update rows in a table",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 23
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -192,
        48
      ],
      "id": "1182f8b0-7f44-4b99-bbfa-03684c311629",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "https://propertamibotcom.kommo.com/api/v4/leads",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "with",
              "value": "contacts"
            },
            {
              "name": "filter[created_at][from]",
              "value": "1756702800"
            },
            {
              "name": "filter[created_at][to]",
              "value": "={{ Math.floor(new Date(new Date($now).setHours(0,0,0,0) + 24*60*60*1000).getTime() / 1000) }}"
            },
            {
              "name": "filter[pipeline_id][]",
              "value": "11240224"
            },
            {
              "name": "limit",
              "value": "250"
            },
            {
              "name": "page",
              "value": "1"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "pagination": {
            "pagination": {
              "parameters": {
                "parameters": [
                  {
                    "name": "page",
                    "value": "={{ $pageCount + 1 }}"
                  }
                ]
              },
              "paginationCompleteWhen": "other",
              "completeExpression": "={{ !$response.body?._links?.next?.href }}",
              "limitPagesFetched": true,
              "maxRequests": 10
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        272
      ],
      "id": "cbf10df5-5cd6-4377-8603-473438f969c5",
      "name": "HTTP Request2",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5e1bb824-6e86-4bd3-9268-334c0aa98eb5",
              "name": "dio_horario",
              "value": "={{ ($('Edit Fields').item.json.fecha1?.trim() || $('Edit Fields').item.json.fecha2?.trim() || $('Edit Fields').item.json.fechaMODO?.trim()) ? 1 : 0 }}",
              "type": "string"
            },
            {
              "id": "6f7b16c5-fd23-4ace-92e9-e64f0911f1b5",
              "name": "inmueble_identificado",
              "value": "={{ $('Edit Fields').item.json.codInmueble ? 1 : 0 }}",
              "type": "string"
            },
            {
              "id": "bd372d99-89ae-4496-bdbf-314005ef08e0",
              "name": "agendo_visita",
              "value": "={{ $('Execute a SQL query1').item.json.existe_en_visitas ? 1 : 0 }}",
              "type": "boolean"
            },
            {
              "id": "503a1740-4b14-471f-ae76-e95e3bf341f2",
              "name": "realizo_visita",
              "value": "={{ $('Execute a SQL query1').item.json.tiene_inicio ? 1 : 0 }}",
              "type": "boolean"
            },
            {
              "id": "327d03b2-aaf6-44dd-b5a8-316dff59661e",
              "name": "inmueble_entregado",
              "value": "={{ $('Execute a SQL query').item.json.ya_entregado ? 1 : 0 }}",
              "type": "boolean"
            },
            {
              "id": "4f38fa84-0d64-4c5c-b21d-3dc7f6537c70",
              "name": "fecha_dia",
              "value": "={{ new Date($('Edit Fields').item.json.fechaCreacion * 1000).toISOString().slice(0, 10) }}",
              "type": "string"
            },
            {
              "id": "2384ba2c-ab71-4a04-a800-2758c608a5c9",
              "name": "fecha_mes",
              "value": "={{ new Date($('Edit Fields').item.json.fechaCreacion * 1000).toISOString().split('T')[0].slice(0,7) + \"-01\" }}",
              "type": "string"
            },
            {
              "id": "49900d16-c092-4124-99c9-45e066f7dcdb",
              "name": "caso_especial",
              "value": "={{ $('Edit Fields').item.json.statusID === \"90801084\" ? 1 : 0 }}",
              "type": "string"
            },
            {
              "id": "297a8f5c-4972-4930-a9cd-71f9c66783d3",
              "name": "fecha_semana",
              "value": "={{\n  (() => {\n    const d = new Date($('Edit Fields').item.json.fechaCreacion * 1000);\n    const day = d.getDay(); // domingo=0, lunes=1, ..., sÃ¡bado=6\n    const diff = (day === 0 ? -6 : 1) - day; // retroceder hasta lunes\n    d.setDate(d.getDate() + diff);\n    d.setHours(0, 0, 0, 0);\n    return d.toISOString().split('T')[0]; // YYYY-MM-DD\n  })()\n}}",
              "type": "string"
            },
            {
              "id": "0fee53d8-b95f-4cb4-a7df-a086bf8fdfa1",
              "name": "tipo_cliente",
              "value": "={{   (     ($('Split Out1').item.json.custom_fields_values || [])       .find(x => x.field_name === 'n8n - TipoCliente')       ?.values[0].value   ) || '' }}",
              "type": "string"
            },
            {
              "id": "4dfee34b-8b36-4b9d-b6d6-64848edb38a9",
              "name": "es_nuevo",
              "value": "={{\n  (\n    (\n      ($('Split Out1').item.json.custom_fields_values || [])\n        .find(x => x.field_name === 'n8n - TipoCliente')\n        ?.values[0].value\n    ) === 'NUEVO'\n  ) ? 1 : 0\n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2624,
        176
      ],
      "id": "d70dab22-317f-435a-9be8-0c6dfd4824e8",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT EXISTS (\n  SELECT 1\n  FROM RENTAS_CRM.ENTREGA_INMUEBLE A\n  JOIN RENTAS_CRM.INQUILINOS B ON A.INQUILINO_ID = B.ID\n  WHERE RIGHT(REGEXP_REPLACE($1, '\\D', '', 'g'), 9) IN (\n    B.CLEAN_TELEFONO,\n    RIGHT(REGEXP_REPLACE(B.TELEFONO, '\\D', '', 'g'), 9)\n  )\n) AS ya_entregado;",
        "options": {
          "queryReplacement": "={{ $('Edit Fields').item.json.telefono }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2176,
        176
      ],
      "id": "4e808f1e-95f8-41cb-bd91-f505e9f42bd1",
      "name": "Execute a SQL query",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH num AS (\n  -- Normaliza el nÃºmero de entrada: solo dÃ­gitos y Ãºltimos 9\n  SELECT RIGHT(REGEXP_REPLACE($1, '\\D', '', 'g'), 9) AS n\n),\nvis AS (\n  -- Normaliza todos los celulares de la tabla\n  SELECT\n    v.*,\n    RIGHT(REGEXP_REPLACE(COALESCE(v.celular, ''), '\\D', '', 'g'), 9) AS cel9\n  FROM RENTAS_CRM.VISITAS v\n),\nhits AS (\n  -- Coincidencias por celular normalizado (evita vacÃ­os)\n  SELECT 1\n  FROM vis\n  JOIN num ON vis.cel9 = num.n\n  WHERE vis.cel9 <> ''\n),\nhits_con_inicio AS (\n  SELECT 1\n  FROM vis\n  JOIN num ON vis.cel9 = num.n\n  WHERE vis.cel9 <> '' AND vis.inicio IS NOT NULL\n)\nSELECT\n  EXISTS(SELECT 1 FROM hits)           AS existe_en_visitas,\n  EXISTS(SELECT 1 FROM hits_con_inicio) AS tiene_inicio;",
        "options": {
          "queryReplacement": "={{ $('Edit Fields').item.json.telefono }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2400,
        176
      ],
      "id": "07828782-fdc8-41ad-b3b3-03364de3f4a5",
      "name": "Execute a SQL query1",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "=_embedded.leads",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        384,
        -112
      ],
      "id": "15169c4f-5b2f-4d37-8239-9271f7e46bd4",
      "name": "Split Out2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "2504f489-361c-447f-93c2-2e867ae0c54f",
              "leftValue": "={{ $json._embedded.tags.toJsonString() }}",
              "rightValue": "DIEGO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "7972cc23-970e-40a7-9973-5f70f5d42a25",
              "leftValue": "={{ $json._embedded.contacts[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        608,
        -112
      ],
      "id": "3f3f3ae9-6919-42e8-b570-eb1e87c54534",
      "name": "Filter2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ed4e7330-076f-4bc8-a9fe-655965921e07",
              "name": "nombre",
              "value": "={{ $('Get list of contacts2').item.json._embedded.contacts[0].name }}",
              "type": "string"
            },
            {
              "id": "09d7ed93-7735-4993-b380-9e4529016f0d",
              "name": "telefono",
              "value": "={{ $('Get list of contacts2').item.json._embedded.contacts[0].custom_fields_values\n     .find(f => f.field_name === 'Phone')?.values?.[0]?.value || '' }}",
              "type": "string"
            },
            {
              "id": "830bdbe1-696d-4a85-9e28-7912409b356e",
              "name": "fechaCreacion",
              "value": "={{ $('Split Out2').item.json.created_at }}",
              "type": "string"
            },
            {
              "id": "90859fd1-3a39-4eba-89e5-47c1e46d998d",
              "name": "statusID",
              "value": "={{ $('Split Out2').item.json.status_id }}",
              "type": "string"
            },
            {
              "id": "921a1934-e048-4b53-b493-15ed624117d1",
              "name": "idKommo",
              "value": "={{ $('Split Out2').item.json.id }}",
              "type": "string"
            },
            {
              "id": "02b2ae1b-ec65-420d-88c7-f0edf9038110",
              "name": "origen",
              "value": "={{ \n  (()=>{\n    const lead = $('Split Out2').item.json;\n    const cf = (lead.custom_fields_values || []).find(x => x.field_name === 'n8n - diego - origen');\n    return (cf && cf.values && cf.values[0]) ? cf.values[0].value : '';\n  })()\n}}",
              "type": "string"
            },
            {
              "id": "1ffd7449-5232-40fd-8fe0-5b6520736d1f",
              "name": "etapa",
              "value": "={{ $('Edit Fields6').item.json.etapa }}",
              "type": "string"
            },
            {
              "id": "1d19dd78-6a98-45db-81d4-f21b72c4bff1",
              "name": "fecha1",
              "value": "={{   (()=>{     const lead = $('Split Out2').item.json;     const cf = (lead.custom_fields_values || []).find(x => x.field_name === 'n8n - diego - fecha1');     return (cf && cf.values && cf.values[0]) ? cf.values[0].value : '';   })() }}",
              "type": "string"
            },
            {
              "id": "e98d67b2-6626-41d7-9312-07ef8e399d31",
              "name": "fecha2",
              "value": "={{   (()=>{     const lead = $('Split Out2').item.json;     const cf = (lead.custom_fields_values || []).find(x => x.field_name === 'n8n - diego - fecha2');     return (cf && cf.values && cf.values[0]) ? cf.values[0].value : '';   })() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1952,
        -208
      ],
      "id": "fe502faa-cfb4-4aa3-b5d3-b4623cedf787",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "contacts",
        "filter": {
          "id": "={{ $('Split Out2').item.json._embedded.contacts[0].id }}"
        },
        "options": {
          "with": [
            "leads"
          ]
        },
        "limit": 1
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        1056,
        -208
      ],
      "id": "eb090aea-c8e2-4966-8fb3-6a6725316a1f",
      "name": "Get list of contacts2",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "url": " https://propertamibotcom.kommo.com/api/v4/leads/pipelines/9165176/statuses",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        -208
      ],
      "id": "c69119fc-a134-4879-88af-131e3b478dcc",
      "name": "HTTP Request4",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        832,
        -112
      ],
      "id": "4c1c2f05-8e1f-4529-a421-9fb1026221d2",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9cd639ed-d911-486c-8770-5fbe6f7e9670",
              "name": "etapa",
              "value": "={{\n  (() => {\n    const statuses = $('HTTP Request4').item.json?._embedded?.statuses ?? [];\n    const statusId = $('Split Out2').item.json.status_id;\n    const hit = statuses.find(s => String(s.id) === String(statusId));\n    return hit?.name || '';\n  })()\n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1504,
        -208
      ],
      "id": "e915282a-6dc1-4a24-a41e-1223d827a864",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "crm",
          "mode": "list",
          "cachedResultName": "crm"
        },
        "table": {
          "__rl": true,
          "value": "reporte_diego_ia",
          "mode": "list",
          "cachedResultName": "reporte_diego_ia"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "dio_horario": "={{ $json.dio_horario }}",
            "agendo_llamada": "={{ $json.agendo_visita }}",
            "realizo_llamada": "=0",
            "id": "={{ $('Edit Fields5').item.json.idKommo }}",
            "nombre": "={{ $('Edit Fields5').item.json.nombre }}",
            "telefono": "={{ $('Edit Fields5').item.json.telefono }}",
            "fecha_creacion": "={{ new Date($('Edit Fields5').item.json.fechaCreacion * 1000).toISOString().replace('T',' ').substring(0,19) }}",
            "nc_order": 0,
            "status_id": "={{ $('Edit Fields5').item.json.statusID }}",
            "id_kommo": "={{ $('Edit Fields5').item.json.idKommo }}",
            "origen": "={{ $('Edit Fields5').item.json.origen }}",
            "etapa": "={{ $('Edit Fields6').item.json.etapa }}",
            "fecha1": "={{ $('Edit Fields5').item.json.fecha1 }}",
            "fecha2": "={{ $('Edit Fields5').item.json.fecha2 }}",
            "caso_especial": "={{ $json.caso_especial }}",
            "fecha_dia": "={{ $json.fecha_dia }}",
            "fecha_mes": "={{ $json.fecha_mes }}",
            "fecha_semana": "={{ $json.fecha_semana }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_by",
              "displayName": "created_by",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "updated_by",
              "displayName": "updated_by",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "nc_order",
              "displayName": "nc_order",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "fecha_creacion",
              "displayName": "fecha_creacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "status_id",
              "displayName": "status_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "id_kommo",
              "displayName": "id_kommo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "origen",
              "displayName": "origen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "etapa",
              "displayName": "etapa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "fecha1",
              "displayName": "fecha1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "fecha2",
              "displayName": "fecha2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "dio_horario",
              "displayName": "dio_horario",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "agendo_llamada",
              "displayName": "agendo_llamada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "realizo_llamada",
              "displayName": "realizo_llamada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "fecha_dia",
              "displayName": "fecha_dia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "fecha_semana",
              "displayName": "fecha_semana",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "fecha_mes",
              "displayName": "fecha_mes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "caso_especial",
              "displayName": "caso_especial",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2624,
        -160
      ],
      "id": "e2f9cd0e-cbdb-45af-9650-8c048784ea46",
      "name": "Insert or update rows in a table2",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://propertamibotcom.kommo.com/api/v4/leads",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "with",
              "value": "contacts"
            },
            {
              "name": "filter[created_at][from]",
              "value": "1756702800"
            },
            {
              "name": "filter[created_at][to]",
              "value": "={{ Math.floor(new Date(new Date($now).setHours(0,0,0,0) + 24*60*60*1000).getTime() / 1000) }}"
            },
            {
              "name": "filter[pipeline_id][]",
              "value": "9165176"
            },
            {
              "name": "limit",
              "value": "250"
            },
            {
              "name": "page",
              "value": "1"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "pagination": {
            "pagination": {
              "parameters": {
                "parameters": [
                  {
                    "name": "page",
                    "value": "={{ $pageCount + 1 }}"
                  }
                ]
              },
              "paginationCompleteWhen": "other",
              "completeExpression": "={{ !$response.body?._links?.next?.href }}",
              "limitPagesFetched": true,
              "maxRequests": 10
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        -112
      ],
      "id": "bb4b01a9-b4e4-4a90-a5c2-de1edf1a5d2a",
      "name": "HTTP Request5",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5e1bb824-6e86-4bd3-9268-334c0aa98eb5",
              "name": "dio_horario",
              "value": "={{ ($('Edit Fields5').item.json.fecha1?.trim() || $('Edit Fields5').item.json.fecha2?.trim()) ? 1 : 0 }}",
              "type": "string"
            },
            {
              "id": "bd372d99-89ae-4496-bdbf-314005ef08e0",
              "name": "agendo_visita",
              "value": "={{ $('Execute a SQL query3').item.json.existe_en_visitas ? 1 : 0 }}",
              "type": "boolean"
            },
            {
              "id": "4f38fa84-0d64-4c5c-b21d-3dc7f6537c70",
              "name": "fecha_dia",
              "value": "={{ new Date($('Edit Fields5').item.json.fechaCreacion * 1000).toISOString().slice(0, 10) }}",
              "type": "string"
            },
            {
              "id": "2384ba2c-ab71-4a04-a800-2758c608a5c9",
              "name": "fecha_mes",
              "value": "={{ new Date($('Edit Fields5').item.json.fechaCreacion * 1000).toISOString().split('T')[0].slice(0,7) + \"-01\" }}",
              "type": "string"
            },
            {
              "id": "49900d16-c092-4124-99c9-45e066f7dcdb",
              "name": "caso_especial",
              "value": "={{ $('Edit Fields5').item.json.statusID === \"92821236\" ? 1 : 0 }}",
              "type": "string"
            },
            {
              "id": "297a8f5c-4972-4930-a9cd-71f9c66783d3",
              "name": "fecha_semana",
              "value": "={{\n  (() => {\n    const d = new Date($('Edit Fields5').item.json.fechaCreacion * 1000);\n    const day = d.getDay(); // domingo=0, lunes=1, ..., sÃ¡bado=6\n    const diff = (day === 0 ? -6 : 1) - day; // retroceder hasta lunes\n    d.setDate(d.getDate() + diff);\n    d.setHours(0, 0, 0, 0);\n    return d.toISOString().split('T')[0]; // YYYY-MM-DD\n  })()\n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2400,
        -208
      ],
      "id": "e8e58b78-1358-4cd9-9c6a-eb31f0bcda46",
      "name": "Edit Fields7"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH num AS (\n  -- Normaliza el nÃºmero de entrada: solo dÃ­gitos y Ãºltimos 9\n  SELECT RIGHT(REGEXP_REPLACE($1, '\\D', '', 'g'), 9) AS n\n),\nvis AS (\n  -- Normaliza todos los celulares de la tabla\n  SELECT\n    v.*,\n    RIGHT(REGEXP_REPLACE(COALESCE(v.celular, ''), '\\D', '', 'g'), 9) AS cel9\n  FROM RENTAS_CRM.VISITAS v\n),\nhits AS (\n  -- Coincidencias por celular normalizado (evita vacÃ­os)\n  SELECT 1\n  FROM vis\n  JOIN num ON vis.cel9 = num.n\n  WHERE vis.cel9 <> ''\n),\nhits_con_inicio AS (\n  SELECT 1\n  FROM vis\n  JOIN num ON vis.cel9 = num.n\n  WHERE vis.cel9 <> '' AND vis.inicio IS NOT NULL\n)\nSELECT\n  EXISTS(SELECT 1 FROM hits)           AS existe_en_visitas,\n  EXISTS(SELECT 1 FROM hits_con_inicio) AS tiene_inicio;",
        "options": {
          "queryReplacement": "={{ $('Edit Fields5').item.json.telefono }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2176,
        -208
      ],
      "id": "9c347da1-a0a2-4986-a2c2-12bf4515fece",
      "name": "Execute a SQL query3",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "add02cca-2660-4c19-a042-f1a71ff7e63b",
              "leftValue": "={{ $('Get list of contacts2').item.json._embedded.contacts[0].custom_fields_values\n     .find(f => f.field_name === 'Phone')?.values?.[0]?.value || '' }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1728,
        -208
      ],
      "id": "fd180090-52e5-428a-afd3-34ee8ddba466",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "add02cca-2660-4c19-a042-f1a71ff7e63b",
              "leftValue": "={{ $('Get list of contacts').item.json._embedded.contacts[0].custom_fields_values\n     .find(f => f.field_name === 'Phone')?.values?.[0]?.value || '' }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1728,
        176
      ],
      "id": "7a44fce1-167a-41ae-a6cf-a59c5aa45a6f",
      "name": "If1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        160,
        464
      ],
      "id": "648536ee-34f9-437a-8c94-2b0ccb802553",
      "name": "No Operation, do nothing"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 900
  },
  "shared": [
    {
      "createdAt": "2025-09-23T04:15:40.700Z",
      "updatedAt": "2025-09-23T04:15:40.700Z",
      "role": "workflow:owner",
      "workflowId": "yWrQu0MbLsFrR6s2",
      "projectId": "tpSonpyzopDOYZNA"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-08-01T18:41:06.465Z",
      "updatedAt": "2025-08-01T18:41:06.465Z",
      "id": "94z6tcDoVU8DriEW",
      "name": "IA"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-04T13:52:53.820Z",
  "versionId": "617a9b89-da49-4f2a-8077-18e51f29dd38"
}