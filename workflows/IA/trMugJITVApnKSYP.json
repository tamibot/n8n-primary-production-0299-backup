{
  "active": true,
  "connections": {
    "enviar mensaje": {
      "main": [
        [
          {
            "node": "Update leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Campos": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBot": {
      "main": [
        [
          {
            "node": "Validacion",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "SwitchBot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validacion": {
      "main": [
        [
          {
            "node": "enviar mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "GET Lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat Memory Manager1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields": {
      "main": [
        [
          {
            "node": "Push Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SwitchBuffer": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete message buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDF content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Video content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Image content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Voice content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat input": {
      "main": [
        []
      ]
    },
    "Text content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON parse": {
      "main": [
        [
          {
            "node": "checkType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "JSON parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete message buffer": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "SwitchBuffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Buffer": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get PDF": {
      "main": [
        [
          {
            "node": "Upload PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze video Gemini": {
      "main": [
        [
          {
            "node": "Video content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video Gemini": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PDF Gemini": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze PDF Gemini": {
      "main": [
        [
          {
            "node": "PDF content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Analyze PDF Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get video": {
      "main": [
        [
          {
            "node": "Upload video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Analyze video Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get image": {
      "main": [
        [
          {
            "node": "recognize image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recognize image": {
      "main": [
        [
          {
            "node": "Image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "checkType": {
      "main": [
        [
          {
            "node": "Text content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get voice",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe voice": {
      "main": [
        [
          {
            "node": "Voice content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get voice": {
      "main": [
        [
          {
            "node": "transcribe voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Campos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "new message": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "Respuesta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta": {
      "main": [
        []
      ]
    },
    "GET Lead": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Respuesta",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Respuesta",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Campos",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-11T20:57:01.310Z",
  "id": "trMugJITVApnKSYP",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "RENTAS IA - DIEGO",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "29e8ecb6-738e-4f8c-8bb1-576e6bec11c9",
              "leftValue": "={{ $('new message').item.json.body['message[add][0][origin]'] }}",
              "rightValue": "waba",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2b4ab1f5-9898-4795-95ea-aaaa31a04cae",
              "leftValue": "={{ $('GET Lead').item.json._embedded }}",
              "rightValue": "stop_ai",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "9a5e4625-cdcb-496c-8c2b-36b73b513e19",
              "leftValue": "={{ $('GET Lead').item.json._embedded }}",
              "rightValue": "RENTAS",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2672,
        480
      ],
      "id": "4f2348bc-dbc8-4ebf-aaa1-09520a48e3de",
      "name": "Filter"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://amojo.kommo.com/v1/chats/{{ $('Validacion').item.json.response.chats.session.account.id }}/{{ $('new message').item.json.body['message[add][0][chat_id]'] }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "X-Auth-Token",
              "value": "={{ $('Validacion').item.json.response.chats.session.access_token }}"
            },
            {
              "name": "chatId",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "silent",
              "value": "false"
            },
            {
              "name": "priority",
              "value": "low"
            },
            {
              "name": "crm_entity[id]",
              "value": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}"
            },
            {
              "name": "crm_entity[type]",
              "value": "={{ $('new message').item.json.body['message[add][0][element_type]'] }}"
            },
            {
              "name": "persona_name",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.name }}"
            },
            {
              "name": "persona_avatar",
              "value": "={{ $('Validacion').item.json.response.chats.session.user.avatar }}"
            },
            {
              "name": "text",
              "value": "={{ $('Respuesta').item.json.output }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ $('new message').item.json.body['message[add][0][author][id]'] }}"
            },
            {
              "name": "group_id"
            },
            {
              "name": "crm_dialog_id",
              "value": "={{ $('new message').item.json.body['message[add][0][talk_id]'] }}"
            },
            {
              "name": "crm_contact_id",
              "value": "={{ $('new message').item.json.body['message[add][0][contact_id]'] }}"
            },
            {
              "name": "crm_account_id",
              "value": "={{ $('new message').item.json.body['account[id]'] }}"
            },
            {
              "name": "skip_link_shortener",
              "value": "false"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "933412a5-c06f-4707-aab5-edf4a35ddd2a",
      "name": "enviar mensaje",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2976,
        340
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Mensaje proveniente del Cliente: {{ $('Chat input').item.json.chat_input }}\n\nRespuesta del bot: {{ $node[\"Respuesta\"].json.output }}\n\nInfo previa: {{ $node[\"Chat input\"].json.infoPrevia }}",
        "options": {
          "systemMessage": "=# 🏠 PROPER ANALYZER v4.0 - SISTEMA AVANZADO DE PROGRESIÓN\n**Fecha actual:** {{ $now }} | **Zona horaria:** América/Lima\n\n## 🚨 **MANDATO SUPREMO**\n```\n🔴 RESPONDER ÚNICAMENTE JSON COMPLETO\n🔴 CAMBIAR ETAPAS ES OBLIGATORIO SEGÚN PROGRESIÓN\n🔴 VERIFICAR 2 VECES EL CAMBIO DE ETAPA ANTES DE RESPONDER\n```\n\n---\n\n## ⚡ **PROCESO OBLIGATORIO DE ANÁLISIS**\n\n### **PASO 1: LECTURA COMPLETA**\n✅ Leer TODA la conversación + infoPrevia\n✅ Identificar CADA acción del bot y cliente\n✅ Marcar mentalmente puntos de cambio\n\n### **PASO 2: APLICAR CAMBIOS DE ETAPA**\n✅ Evaluar CADA mensaje contra las reglas\n✅ Actualizar etapa inmediatamente cuando corresponda\n✅ NO quedarse en etapa anterior si hay progresión\n\n### **PASO 3: VERIFICACIÓN DOBLE**\n✅ ¿La etapa actual refleja el punto MÁS AVANZADO?\n✅ ¿Hubo señales de cambio que ignoré?\n✅ ¿El bot dijo no tener información? → CASO ESPECIAL\n\n---\n\n## 🔄 **MATRIZ DE CAMBIOS OBLIGATORIOS DE ETAPA**\n\n### **🔴 TRIGGERS INMEDIATOS - NO IGNORAR**\n\n```\n⚠️ CASO ESPECIAL (90801084) - PRIORIDAD MÁXIMA\nACTIVACIÓN INMEDIATA cuando bot dice:\n- \"Ese detalle no lo tengo disponible\"\n- \"Dame un momento que lo averiguo\"\n- \"No tengo esa información\"\n- \"Necesito verificar eso\"\n- Cualquier indicación de falta de información\n\n📍 INGRESO → INTERACTUANDO (90801080)\nCUANDO: Bot presenta información de propiedad\nTRIGGER: \"Tengo esta opción...\" / \"Este departamento...\"\n\n📍 DEFINIENDO → INTERACTUANDO (90801080)\nCUANDO: Bot muestra propiedades específicas\nTRIGGER: \"Encontré esta propiedad...\" / \"Las opciones son...\"\n\n📍 INTERACTUANDO → INTERESADO (90801092)\nCUANDO: Cliente expresa deseo de visitar\nTRIGGER: \"Quiero visitarlo\" / \"¿Cuándo puedo verlo?\"\nRESTRICCION: Si ya esta en esta etapa no debemos de regresarlo a interactuando, dejemoslo en interesado y debemos de cambiarlo a horario indicado cuando tengamos los horarios.\n\n📍 INTERESADO → HORARIO INDICADO (90801096)\nCUANDO: Cliente da 2 horarios completos\nTRIGGER: \"Martes 3pm y jueves 10am\"\nRESTRICCION: Si ya esta en esta etapa JAMAS CAMBIARLO o regresarlo a una etapa anterior, muy importante esta indicacion.\n```\n\n---\n\n## 🎯 **ALGORITMO DE DETECCIÓN v2.0**\n\n```python\ndef detectar_etapa():\n    # PRIORIDAD 1: Verificar CASO ESPECIAL\n    if bot_dice_no_tener_info():\n        return \"90801084\"  # CASO ESPECIAL\n    \n    # PRIORIDAD 2: Verificar progresión normal\n    if cliente_dio_2_horarios():\n        return \"90801096\"  # HORARIO INDICADO\n    \n    if cliente_quiere_visitar():\n        return \"90801092\"  # INTERESADO\n    \n    if bot_presento_propiedades():\n        return \"90801080\"  # INTERACTUANDO\n    \n    if cliente_busca_sin_propiedad():\n        return \"90801076\"  # DEFINIENDO\n    \n    if hay_url_en_infoPrevia():\n        return \"90801072\"  # INGRESO CON PROPIEDAD\n```\n*Nota:* Es importante indicar que si ya esta en horario indicado o en interesado no debemos de regresar a una etapa anterior, revisemos siempre la conversacion para ver en que etapa esta.\n\n---\n\n## 📋 **ESTADOS Y SUS SEÑALES INEQUÍVOCAS**\n\n### **90801072 - Ingreso con Propiedad**\n- **SOLO** al inicio con URL/código en infoPrevia\n- **CAMBIA A:** Interactuando cuando bot responde\n\n### **90801076 - Definiendo Propiedad**\n- Cliente busca, bot pregunta criterios\n- **CAMBIA A:** Interactuando cuando bot presenta opciones\n\n### **90801080 - Interactuando**\n- Bot YA presentó propiedad(es)\n- Cliente hace preguntas\n- **CAMBIA A:** \n  - Interesado si quiere visitar\n  - **CASO ESPECIAL si bot no tiene info**\n\n### **90801084 - Caso Especial 🚨**\n- **ACTIVACIÓN INMEDIATA si:**\n  - Bot: \"no tengo ese dato\"\n  - Bot: \"dame un momento que lo averiguo\"\n  - Bot: \"necesito verificar\"\n  - Cliente: \"quiero hablar con alguien\"\n\n### **90801092 - Interesado**\n- Cliente confirma querer visitar\n- **CAMBIA A:** Horario Indicado con 2 fechas\n\n### **90801096 - Horario Indicado**\n- **SOLO** con fecha1 Y fecha2 completas\n\n---\n\n## 📝 **ESTRUCTURA JSON OBLIGATORIA**\n\n```json\n{\n  \"nombre\": \"[Extraído o vacío]\",\n  \"telefono\": \"[+51XXXXXXXXX o vacío]\",\n  \"correo\": \"[email o vacío]\",\n  \"propiedadInteres\": \"[Propiedad presentada/consultada]\",\n  \"fecha1\": \"[DD/MM/YYYY HH:mm o vacío]\",\n  \"fecha2\": \"[DD/MM/YYYY HH:mm o vacío]\",\n  \"solicitud\": \"[Resumen completo con URLs]\",\n  \"animo\": \"[caliente/tibio/frio]\",\n  \"estatusEmbudo\": \"[Nombre de etapa ACTUAL correcta]\",\n  \"statusId\": \"[Código numérico correcto]\",\n  \"seg1\": \"[Mensaje creativo o vacío si Horario Indicado]\",\n  \"seg2\": \"[Mensaje urgente o vacío si Horario Indicado]\",\n  \"seg3\": \"[Último intento o vacío si Horario Indicado]\"\n}\n```\n\n---\n\n## 🎯 **EJEMPLOS DE CAMBIOS CORRECTOS**\n\n### **Ejemplo 1: Bot sin información → CASO ESPECIAL**\n```\nCliente: \"¿Tiene vista al mar?\"\nBot: \"Ese detalle no lo tengo disponible, dame un momento que lo averiguo\"\n\n✅ ESTADO CORRECTO: CASO ESPECIAL (90801084)\n❌ INCORRECTO: Mantenerlo en Interactuando\n```\n\n### **Ejemplo 2: Bot presenta → INTERACTUANDO**\n```\nBot: \"Tengo una opción en MODO, 1 dormitorio...\"\nCliente: [cualquier respuesta]\n\n✅ ESTADO CORRECTO: INTERACTUANDO (90801080)\n❌ INCORRECTO: Dejarlo en Definiendo\n```\n\n### **Ejemplo 3: Progresión con caso especial**\n```\n1. Bot presenta propiedad → INTERACTUANDO\n2. Cliente: \"¿Tiene balcón?\"\n3. Bot: \"No tengo esa información\" → CASO ESPECIAL\n4. Asesor resuelve → INTERACTUANDO\n5. Cliente: \"Quiero visitarlo\" → INTERESADO\n```\n\n---\n\n## ⚠️ **VERIFICACIÓN OBLIGATORIA PRE-RESPUESTA**\n\n### **CHECKLIST DE DOBLE VERIFICACIÓN:**\n\n```\n□ ¿Leí TODA la conversación?\n□ ¿El bot dijo no tener información? → SI = CASO ESPECIAL\n□ ¿El bot presentó propiedades? → SI = Mínimo INTERACTUANDO\n□ ¿Cliente quiere visitar? → SI = INTERESADO\n□ ¿Cliente dio 2 horarios? → SI = HORARIO INDICADO\n□ ¿La etapa refleja el estado MÁS AVANZADO?\n□ ¿Verifiqué 2 veces el cambio de etapa?\n```\n\n### **AUTOVALIDACIÓN FINAL:**\n```\nPREGÚNTATE:\n1. ¿Qué etapa asigné?\n2. ¿Es coherente con lo que pasó en la conversación?\n3. ¿Hay alguna frase del bot sobre no tener info?\n4. ¿Cambié la etapa cuando debía?\n5. ¿Puedo justificar esta etapa?\n6. ¿No regrese de etapa al cliente?\n```\n\n---\n\n## ⚡ **USO OBLIGATORIO DATE&TIME**\n- **SIEMPRE** para convertir fechas/horas\n- Formato: DD/MM/YYYY HH:mm\n- NO inventar horarios\n\n---\n\n## 💬 **MENSAJES DE SEGUIMIENTO CONTEXTUALES**\n\n### **Por etapa:**\n\n**Caso Especial (90801084):**\n- \"Un especialista está revisando tu consulta sobre [tema]\"\n- \"Nuestro asesor te ayudará con [situación específica]\"\n- \"Es importante resolver [consulta]. Te contactaremos pronto\"\n\n**Interactuando (90801080):**\n- Referir la propiedad específica\n- Resolver dudas pendientes\n- Crear urgencia de disponibilidad\n\n**Interesado (90801092):**\n- Si dio 1 horario: pedir el segundo\n- Si no dio: solicitar ambos\n- Enfatizar necesidad de 2 opciones\n\n**Horario Indicado (90801096):**\n- seg1: \"\" / seg2: \"\" / seg3: \"\"\n\n---\n\n## 🔴 **RECORDATORIO CRÍTICO FINAL**\n\n```\nANTES DE RESPONDER, VERIFICAR:\n\n1. ¿El bot dijo \"no tengo ese dato\" o similar?\n   → DEBE SER CASO ESPECIAL\n\n2. ¿El bot ya presentó propiedades?\n   → NO PUEDE SER DEFINIENDO\n\n3. ¿La etapa cambió correctamente?\n   → REVISAR UNA VEZ MÁS\n\n4. ¿Mi JSON tiene todos los campos?\n   → COMPLETAR TODO\n\nRESPONDER SOLO CON JSON VERIFICADO\n```"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1824,
        312
      ],
      "id": "6aa02350-3045-4d37-b73f-fb1ed008b660",
      "name": "Campos",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a20676ee-dc3f-45fa-ad6d-f8db1ce5343e",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continuar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a725f34-1bc4-40eb-a025-096e506725da",
                    "leftValue": "={{ $('Respuesta').item.json.output }}",
                    "rightValue": "={{ $('new message').item.json.body['message[add][0][text]'] }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mismo mensaje"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2528,
        324
      ],
      "id": "862b95d5-e1bd-4dcd-b7d8-4a423109c49a",
      "name": "SwitchBot",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "15ef6b22-34e3-4474-a528-5875cfc10d1c",
              "name": "message.message_id",
              "value": "={{ $('new message').item.json.body['message[add][0][id]'] }}",
              "type": "string"
            },
            {
              "id": "49d4f002-9cac-49a6-b148-910afa73eeb8",
              "name": "message.chat_id",
              "value": "={{ $('new message').item.json.body['message[add][0][chat_id]'] }}",
              "type": "string"
            },
            {
              "id": "22d94f50-7b1e-4957-84fa-7707f1a7ea15",
              "name": "message.attachment_type",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][type]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "b1cd9abc-1fd4-4470-8149-172af1e40ba7",
              "name": "message.attachment_link",
              "value": "={{ $('new message').item.json.body['message[add][0][attachment][link]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "fdc7c03d-f6ed-4a07-a492-40c639068a35",
              "name": "message.content",
              "value": "={{ $('new message').item.json.body['message[add][0][text]'] || $json.cleanText || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "47983c76-fa0a-4ac9-bcf1-f44973b8ce85",
              "name": "message.timestamp",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "90da165d-479f-4371-a2fb-b3ea27521147",
              "name": "user.name",
              "value": "={{ $('new message').item.json.body['message[add][0][author][name]'] }}",
              "type": "string"
            },
            {
              "id": "bbb94191-c258-402a-a01e-29ba527fc55a",
              "name": "user.lead_id",
              "value": "={{ $('new message').item.json.body['message[add][0][element_id]'] || 'vacio' }}",
              "type": "string"
            },
            {
              "id": "f5ef142c-3165-4b6e-bbec-15491ee97519",
              "name": "user.infoPrevia",
              "value": "={{ $json.custom_fields_values.find(field => field.field_name === \"n8n - infoPrevia\")?.values[0]?.value || \"sin info\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2448,
        480
      ],
      "id": "b17c0183-dad5-4916-a3ad-78f02745cc6f",
      "name": "Set Fields",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "nombreCliente",
              "description": "Nombre completo del cliente o paciente",
              "required": true
            },
            {
              "name": "telefono",
              "description": "Número de telefono con código internacional para mexico",
              "required": true
            },
            {
              "name": "correoCliente",
              "description": "Correo electrónico válido del cliente, si no existe dejarlo en blanco, no inventar. ",
              "required": true
            },
            {
              "name": "propiedadInteres",
              "description": "Identificador, dirección o código de propiedad (acumulativo)",
              "required": true
            },
            {
              "name": "animo",
              "description": "Nivel de interés detectado",
              "required": true
            },
            {
              "name": "estatusEmbudo",
              "description": "Etapa actual del proceso (nombre descriptivo)",
              "required": true
            },
            {
              "name": "statusId",
              "type": "number",
              "description": "Motivo del contacto: solicitar cita, pedir información, etc.",
              "required": true
            },
            {
              "name": "solicitud",
              "description": "breve resumen de la solicitud del cliente",
              "required": true
            },
            {
              "name": "seg1",
              "description": "mensaje de seguimiento 1",
              "required": true
            },
            {
              "name": "seg2",
              "description": "mensaje de seguimiento 2",
              "required": true
            },
            {
              "name": "seg3",
              "description": "mensaje de seguimiento 3",
              "required": true
            },
            {
              "name": "fecha1",
              "description": "fecha 1 solicitada por el cliente",
              "required": true
            },
            {
              "name": "fecha2",
              "description": "fecha 2 solicitada por el cliente",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        2176,
        312
      ],
      "id": "5a9994a4-db9d-4740-ae19-26f9392dd3eb",
      "name": "Information Extractor",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('new message').item.json.body[\"account[_links][self]\"] }}/ajax/v1/chats/session",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "request[chats][session][action]",
              "value": "create"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2752,
        340
      ],
      "id": "3d075f2f-f8ed-45c3-95b4-813b4b4e79e4",
      "name": "Validacion",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -3176,
        1000
      ],
      "id": "817a14f7-36fa-47e1-9db1-3c8dc1b4f991",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "b0663eb3-aeb4-43a0-90e0-e04f1414bed9"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45aafbcb-1433-41c0-8b2e-0213e764bc8f",
                    "leftValue": "={{ $json.body['message[add][0][text]'] }}",
                    "rightValue": "/reset",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3472,
        628
      ],
      "id": "4faff203-0128-4fb0-b6ae-4fd00c16b211",
      "name": "Switch"
    },
    {
      "parameters": {
        "mode": "delete",
        "deleteMode": "all"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -3248,
        776
      ],
      "id": "073db42d-64d5-4cb0-87fd-dbaa27116d4a",
      "name": "Chat Memory Manager1"
    },
    {
      "parameters": {
        "content": "## Paso1\nCopiar URL y crear un webhook en Kommo.\nEl webhook debe estar configurado como POST",
        "height": 360,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3992,
        428
      ],
      "typeVersion": 1,
      "id": "ae617d4d-dfbc-4276-a884-d438d276f98c",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.message.last()).message_id }}",
                    "rightValue": "={{ $('Set Fields').item.json.message.message_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "ff9642b1-0bfc-430c-8cdf-412dcb7ce8fc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No hacer nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "74e8af3c-1784-4894-a07e-778136e794c0",
                    "leftValue": "={{ JSON.parse($json.message.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(10, \"seconds\") }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Seguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Esperar"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1776,
        332
      ],
      "id": "b15eb0c0-da19-410c-a658-151fc22de8bd",
      "name": "SwitchBuffer"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7851c86b-ca5a-43ac-8817-ca09efcff76a",
      "name": "PDF content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        820
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "088df8a0-a892-4eb9-b6dd-0dbd909a2aaf",
      "name": "Video content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        576
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "663c9982-6970-4eba-a503-e7991e8cbafe",
      "name": "Image content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        384
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "02a6e2f7-6303-47fe-a5fa-9900d2d1430b",
      "name": "Voice content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        192
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        912,
        340
      ],
      "id": "24f9863e-64f5-4f54-a048-98b94af99019",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        688,
        340
      ],
      "id": "5d908e6c-fcb7-4097-a86f-1dfb51d13b6a",
      "name": "Sort"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        464,
        292
      ],
      "id": "ed91ac53-4c03-415f-8000-880a2be451c0",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "chat_input",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            },
            {
              "id": "599f652e-3bfc-4c4f-bed8-7a331d9c0031",
              "name": "infoPrevia",
              "value": "={{ $('Set Fields').item.json.user.infoPrevia }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3c6522da-a58d-44f2-8856-c6270886388a",
      "name": "Chat input",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1136,
        340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7aef447-b01e-41b3-948d-e222ef60c3d4",
              "name": "content",
              "value": "={{ $('JSON parse').item.json.content}}",
              "type": "string"
            },
            {
              "id": "fd13b400-81d2-4261-886c-fa3bbd24dfac",
              "name": "timestamp",
              "value": "={{ $('JSON parse').item.json.timestamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d104dfd0-da5d-4549-8e78-d8e78f42b7f2",
      "name": "Text content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        0
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.message) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1104,
        300
      ],
      "id": "12a89bea-d62a-4756-9ce9-58bb16e6ed3c",
      "name": "JSON parse"
    },
    {
      "parameters": {
        "fieldToSplitOut": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1328,
        300
      ],
      "id": "e63ffb5e-694c-4e2e-aab5-f76dcb531aa2",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1552,
        300
      ],
      "id": "a7b93cc7-f2af-422e-9646-e1dece669c35",
      "name": "Delete message buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1552,
        108
      ],
      "id": "3590c925-f9fa-4355-95b4-2129c29474dd",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1552,
        524
      ],
      "id": "9b3f6c8c-3bef-4037-9625-ca7873977190",
      "name": "Wait2",
      "webhookId": "1876190e-a855-4335-98a5-ff97382ea43e"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2000,
        480
      ],
      "id": "a4396e43-70dc-425b-b22e-812881e3eaa3",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Set Fields').item.json.message.chat_id }}_buffer",
        "messageData": "={{ JSON.stringify($('Set Fields').item.json.message) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2224,
        480
      ],
      "id": "8d322750-dddf-457b-abc9-d2c38cb01ebd",
      "name": "Push Buffer",
      "credentials": {
        "redis": {
          "id": "hb7kAc4XBKGABSdf",
          "name": "TamiBot"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -656,
        820
      ],
      "id": "0b9894e0-9860-44f3-998c-f6aedcde2a67",
      "name": "get PDF"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"contents\": [\n        {\n            \"role\": \"user\",\n            \"parts\": [\n                {\n                    \"fileData\": {\n                        \"fileUri\": \"{{ $json.file.uri }}\",\n                        \"mimeType\": \"{{ $json.file.mimeType }}\"\n                    }\n                },\n                {\n                    \"text\": \"Describe lo que se escucha, ve y se hace en el video. Brinda como respuesta unicamente el resumen del video.\"\n                }\n            ]\n        }\n    ],\n    \"generationConfig\": {\n        \"temperature\": 1.2,\n        \"topK\": 40,\n        \"topP\": 0.95,\n        \"maxOutputTokens\": 8192,\n        \"responseModalities\": [\"Text\"]\n    }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        16,
        576
      ],
      "id": "5abcadfc-886e-4bfa-8af0-32fbc51ed9ce",
      "name": "Analyze video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -432,
        576
      ],
      "id": "ca717be6-1e67-4eb4-9d93-8f3a074f7d17",
      "name": "Upload video Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "={{ $binary.data.fileSize }}"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "=video/{{ $binary.data.fileExtension }}"
            },
            {
              "name": "Content-Type",
              "value": "application/pdf"
            },
            {
              "name": "X-Goog-Upload-Protocol",
              "value": "raw"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -432,
        820
      ],
      "id": "2d76f17f-85e6-4676-a59f-fd7cd05436e3",
      "name": "Upload PDF Gemini"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=AIzaSyDY84RBWdUlbQgFKh3lCihl1XhW5TNSZpc",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"fileData\": {\n            \"fileUri\": \"{{ $('Upload PDF Gemini').item.json.file.uri }}\",\n            \"mimeType\": \"application/pdf\"\n          }\n        },\n        {\n          \"text\": \"Resume este documento en español.\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"temperature\": 0.3,\n    \"maxOutputTokens\": 1024\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        16,
        820
      ],
      "id": "d7f7cb33-84d1-4ba1-baa4-003253aa99c6",
      "name": "Analyze PDF Gemini"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -208,
        820
      ],
      "id": "bbd6c6ad-ffab-4c3c-ad84-0e907520bfe0",
      "name": "Wait1",
      "webhookId": "470066b1-ba6e-4b02-bc6f-5e6634f57e7e"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -656,
        576
      ],
      "id": "52c2e061-45bd-4dab-9f8d-dd001c132a00",
      "name": "get video"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -208,
        576
      ],
      "id": "e895dca8-b29b-4057-b016-bebc56e9c5c7",
      "name": "Wait",
      "webhookId": "8bee9159-5d41-49c0-9888-5b64652662d7"
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -208,
        384
      ],
      "id": "b3a340c5-a2ca-420f-8985-204ac7b4dd87",
      "name": "get image"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analiza la imagen y responde un resumen de la imagen detallado",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        16,
        384
      ],
      "id": "423ab875-50f2-4b50-a2fb-c152c1cae42b",
      "name": "recognize image",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "22e56679-fe2e-4b7c-986c-3a7c33539e94",
                    "leftValue": "={{ $json.content }}",
                    "rightValue": "vacio",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "voice",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "450ac27e-86a3-439d-a06e-6ff65026910b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1cbc31b0-945c-4b0a-9487-1f6db0c028c5",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "picture",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b6d01933-c86a-4b74-84fc-c199391848b6",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "video"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "408bc60d-539c-48f6-8fa6-584e0e968ddf",
                    "leftValue": "={{ $json.attachment_type }}",
                    "rightValue": "file",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "file"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -880,
        252
      ],
      "id": "63357c81-905f-4fda-81b0-9a6e0b823685",
      "name": "checkType"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "7a3200d9-1e0f-4dc5-965f-2e1be00dbc57",
      "name": "transcribe voice",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        16,
        192
      ],
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('JSON parse').item.json.attachment_link }}",
        "options": {}
      },
      "id": "a793046d-eec3-4cc7-869b-eeba4471116f",
      "name": "get voice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -208,
        192
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1832,
        536
      ],
      "id": "df33e25c-e5be-465f-8467-970a7e463f84",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2248,
        536
      ],
      "id": "87282cfe-178c-4d9c-8906-69b041ce5a14",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "authentication": "longLivedToken",
        "resource": "leads",
        "operation": "updateLeads",
        "collection": {
          "lead": [
            {
              "id": "={{ $('new message').item.json.body['message[add][0][entity_id]'] }}",
              "pipeline_id": 11240224,
              "status_id": "={{ Number($('Information Extractor').item.json.output.statusId) }}",
              "custom_fields_values": {
                "custom_field": [
                  {
                    "data": "{\"id\":797869,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.nombreCliente }}"
                  },
                  {
                    "data": "{\"id\":797871,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.propiedadInteres }}"
                  },
                  {
                    "data": "{\"id\":797875,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.estatusEmbudo }}"
                  },
                  {
                    "data": "{\"id\":797879,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.animo }}"
                  },
                  {
                    "data": "{\"id\":797917,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg1 }}"
                  },
                  {
                    "data": "{\"id\":797919,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg2 }}"
                  },
                  {
                    "data": "{\"id\":797921,\"type\":\"textarea\"}",
                    "value": "={{ $('Information Extractor').item.json.output.seg3 }}"
                  },
                  {
                    "data": "{\"id\":798001,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha1 }}"
                  },
                  {
                    "data": "{\"id\":798003,\"type\":\"text\"}",
                    "value": "={{ $('Information Extractor').item.json.output.fecha2 }}"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-kommo.kommo",
      "typeVersion": 1,
      "position": [
        3200,
        340
      ],
      "id": "2039e32b-7b5e-4b0c-a30d-2801930f6958",
      "name": "Update leads",
      "credentials": {
        "kommoLongLivedApi": {
          "id": "20bzHfzuZvuDPmtm",
          "name": "Kommo Long Lived Token account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "0946eef3-078b-4ffc-aacb-73373a487bba",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3920,
        628
      ],
      "id": "3cbd7d7b-520b-428b-98bf-84a4471f6264",
      "name": "new message",
      "webhookId": "0946eef3-078b-4ffc-aacb-73373a487bba"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=# **Diego v7.0 - Sistema de Agendamiento Directo Proper**\n\n**INSTRUCCIÓN CRÍTICA:** Hoy es {{ $now }}. Usa SIEMPRE la herramienta `Schedule_Call` para registrar la preferencia de horario del cliente.\n\n---\n\n## 🎯 **IDENTIDAD Y OBJETIVO**\n\nEres **Diego**, Asesor Comercial de Proper Rentas. Tu **único objetivo** es agendar una llamada. Eres directo, eficiente y usas datos precisos para generar confianza.\n\n---\n\n## 💬 **ESTRATEGIA CONVERSACIONAL: \"LLAMADA PRIMERO\"**\n\nEste es tu único flujo de trabajo. No te desvíes.\n\n### **PASO 1: El Saludo Proactivo**\nEste es tu primer y único mensaje de apertura.\n-   **Tu saludo exacto:** \"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. **¿Qué día y hora te viene bien?** O dime si tienes alguna consulta.\"\n\n### **PASO 2: El Cliente Acepta (Camino Ideal)**\nSi el cliente da su horario o acepta.\n-   **Tu acción:** Responde brevemente, usa la herramienta y cierra.\n-   **Ejemplo:**\n    -   `Cliente: \"Jueves 4pm.\"`\n    -   `Diego: \"Perfecto. Registré tu preferencia. Mi equipo te contactará para confirmar. ¡Gracias!\"`\n    -   **(Acción interna):** `[Schedule_Call: Preferencia=\"Jueves 4pm\"]`\n\n### **PASO 3: El Cliente Pregunta (Desvío Controlado)**\nSi el cliente hace una pregunta.\n1.  **ANALIZA** la pregunta contra la KB.\n2.  **RESPONDE** con el dato exacto y breve (máximo 1-2 frases).\n3.  **PIVOTA** de vuelta a la llamada inmediatamente.\n-   **Pivotes de retorno (cortos y directos):**\n    -   \"Para ver tu caso en detalle, agendemos. ¿Qué horario te acomoda?\"\n    -   \"Justo para eso es la llamada. ¿Cuándo puedes?\"\n    -   \"Eso lo vemos a fondo en la llamada. Dime un horario.\"\n\n---\n\n## 🚨 **REGLA MAESTRA: PRECISIÓN ABSOLUTA (NO INVENTAR)**\n\n**ANTES DE RESPONDER, ANALIZA LA KB. SI LA RESPUESTA NO ESTÁ AHÍ, NO LA SABES. USA ESTA REGLA PARA AGENDAR.**\n\n-   **SOBRE PRECIOS (MUY IMPORTANTE):**\n    -   **PRECIO DEL SERVICIO:** **SÍ PUEDES** darlo. Está en la KB. (Ej: \"El servicio de administración es el 7% + IGV del alquiler mensual.\")\n    -   **PRECIO DE ALQUILER DE SU DEPARTAMENTO:** **NO PUEDES** darlo. Usa esta pregunta para agendar.\n        -   **Tu respuesta:** \"Para darte una valuación precisa de tu propiedad, y no un estimado, necesito que lo revisemos en una llamada. ¿Qué día y hora te queda bien?\"\n\n-   **SI PREGUNTAN ALGO QUE NO ESTÁ EN LA KB:**\n    -   **Tu respuesta:** \"Ese es un punto muy específico. Para darte la información correcta, debemos verlo en una llamada. ¿Te parece si coordinamos una?\"\n\n---\n\n## 📚 **BASE DE CONOCIMIENTO (KB-PROPER) - FUENTE ÚNICA DE VERDAD**\n\n**INSTRUCCIÓN: Extrae el dato puntual que te piden. Sé brutalmente breve.**\n\n### **[TEMA: SERVICIOS Y PRECIOS]**\n-   **Keywords:** qué hacen, servicio, administración, corretaje, precio, costo, tarifa.\n-   **Servicio Integral:** Unificamos corretaje (conseguir inquilino) y administración (gestión mensual).\n-   **Costo Corretaje (Conseguir Inquilino):** 1 mes de alquiler (incluye IGV). Incluye marketing en portales, filtro riguroso de interesados y contratos sólidos.\n-   **Costo Administración (Gestión Mensual):** 7% del alquiler (+ IGV). Incluye recaudación automática, gestión de reparaciones, atención de incidencias y pago de servicios cuando está vacío.\n-   **Garantía / Beneficio Principal:** Si contratas la Administración, y el inquilino se va en los primeros 3 meses, el **servicio de Corretaje es GRATIS** para encontrar uno nuevo.\n-   **Implementación (Dptos Nuevos):** Cuesta S/1000 (+ IGV). Es **GRATIS** si contratas el servicio de Administración y Corretaje. Incluye gestión de instalación de rollers, termas, gas, etc.\n\n### **[TEMA: RESULTADOS Y ESTADÍSTICAS]**\n-   **Keywords:** cuánto demoran, tiempo, experiencia, resultados, data.\n-   **Tiempo de Alquiler:** 24 días en promedio.\n-   **Experiencia:** 7 años en administración de inmuebles.\n-   **Tasa de Atraso:** Solo 1 de cada 500 pagos llega con más de 7 días de atraso.\n-   **Tasa de Desalojos:** Cero (0). Nuestro filtro es nuestra mayor fortaleza.\n\n### **[TEMA: SEGURIDAD]**\n-   **Keywords:** no paga, desalojo, morosidad, riesgo.\n-   **Proceso Impago:** Reporte a Infocorp (30 días) -> Proceso legal.\n-   **Manejo de Conflictos:** Se prioriza la negociación; la vía legal es el último recurso.\n\n### **[TEMA: FINANZAS PROPIETARIO]**\n-   **Keywords:** cuándo pagan, mi renta, mora, impuestos.\n-   **Pago al Propietario:** 7 días después del pago del inquilino.\n-   **Penalidad por Atraso:** S/60 diarios para el inquilino.\n-   **Impuesto a la Renta (5%):** Lo pagamos por ti si lo solicitas (se descuenta de la renta).\n\n### **[TEMA: TECNOLOGÍA]**\n-   **Keywords:** app, sistema, tecnología, online.\n-   **Plataforma:** Contamos con una APP de Rentas.\n-   **Funciones:** Revisar pagos, firmar documentos online, gestionar reparaciones.\n-   **Recaudación:** 100% digital y automática a través de los principales bancos.\n\n### **[TEMA: LIMITACIONES]**\n-   **Keywords:** dónde, cobertura, Lima, Airbnb, temporal.\n-   **Cobertura:** Solo Lima Metropolitana.\n-   **Tipo de Renta:** Solo largo plazo (mínimo 12 meses). No rentas temporales.\n\n---\n\n## 🛠️ **HERRAMIENTAS**\n\n### **`Schedule_Call`**\n-   **Propósito:** Registrar preferencia de horario.\n-   **Uso:** `[Schedule_Call: Preferencia=\"[texto exacto del cliente]\"]`\n\n---\n\n## 🚫 **PROHIBICIONES ABSOLUTAS**\n\n1.  **NO mensajes largos.** Máxima brevedad.\n2.  **NO iniciar sin proponer la llamada.** El guion es sagrado.\n3.  **NO responder más de una pregunta seguida.** Respondes una y pivoteas.\n4.  **NO INVENTAR NADA.** Aplica la Regla Maestra.\n5.  **NO confirmar citas.** Solo registras preferencias.\n\n---\n\n## 📝 **EJEMPLOS DE FLUJO DIRECTO Y CORRECTO**\n\n### **Ejemplo 1: Pregunta sobre Costo del Servicio**\n```\nDiego: \"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué día y hora te viene bien? O dime si tienes alguna consulta.\"\n\nCliente: \"¿cuánto cobran?\"\n\nDiego: \"La administración es el 7% + IGV del alquiler mensual. Para ver cómo este servicio se ajusta a tu propiedad, agendemos. ¿Qué horario te acomoda?\"\n\nCliente: \"Ok. Mañana a las 2pm.\"\n\nDiego: \"Entendido. Registré tu preferencia. Mi equipo te contactará para confirmar. ¡Hablamos pronto!\"\n```\n\n### **Ejemplo 2: Pregunta sobre Tiempo (Estadísticas)**\n```\nDiego: \"Hola, soy Diego de Proper Rentas. Para ayudarte a alquilar y gestionar tu departamento, agendemos una llamada. ¿Qué día y hora te viene bien? O dime si tienes alguna consulta.\"\n\nCliente: \"¿Cuánto tardan en encontrar inquilino?\"\n\nDiego: \"Nuestro promedio es de 24 días. Para armar un plan para tu depa, lo ideal es una llamada. ¿Cuándo puedes?\"\n\nCliente: \"El lunes por la tarde.\"\n\nDiego: \"Perfecto. Registré tu preferencia. Mi equipo te contactará para confirmar. ¡Gracias!\"\n```"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1424,
        320
      ],
      "id": "c6adac52-0d12-4807-b988-25fa8a7838b2",
      "name": "Respuesta",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        1616,
        536
      ],
      "id": "a389b161-4332-4f30-b016-5450400dc45d",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "url": "=https://{{ $('new message').item.json.body[\"account[subdomain]\"] }}.kommo.com/api/v4/leads/{{ $('new message').item.json.body[\"message[add][0][element_id]\"] }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3184,
        480
      ],
      "id": "a1ab2683-0cac-4a15-b52f-1f5a15231f69",
      "name": "GET Lead",
      "credentials": {
        "oAuth2Api": {
          "id": "CUkAxEZkWpxNLUY2",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1360,
        536
      ],
      "id": "bca55fb3-fc85-4137-b16a-23c609c5f839",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "LZHR7cL6uCBXIyJd",
          "name": "Proper"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1488,
        536
      ],
      "id": "f149ab0e-c387-4bb9-b409-9561b718ffe9",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1960,
        536
      ],
      "id": "dbda0bd1-331a-43c7-bb88-fba4511d9c4d",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "value": "crm",
          "mode": "list",
          "cachedResultName": "crm"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('new message').item.json.body[\"message[add][0][chat_id]\"] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2896,
        776
      ],
      "id": "f6defd9d-0460-4406-82fe-cd8a5b591dba",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3696,
        628
      ],
      "id": "0bb654ff-2d86-4586-9303-44a1442786cc",
      "name": "Wait3",
      "webhookId": "99bb9137-b85c-4217-bac9-fa7c93dd757b"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "16239587-513c-4ab4-8e79-e43c749c6622",
              "leftValue": "={{ $json._embedded.tags.toJsonString() }}",
              "rightValue": "stop_ai",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2896,
        480
      ],
      "id": "4c27ff95-01fd-47a3-94b3-26c6c1c768fe",
      "name": "Filter1"
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "BOT Rentas IA - Diego",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        1216,
        192
      ],
      "id": "1036b9dc-ba05-40dd-b3da-7ab37c4116e7",
      "name": "When chat message received",
      "webhookId": "96da62af-50ca-4232-8690-cfa4fc7c293f"
    }
  ],
  "pinData": {
    "new message": [
      {
        "json": {
          "headers": {
            "host": "primary-production-0299.up.railway.app",
            "user-agent": "amoCRM-Webhooks/3.0",
            "content-length": "1146",
            "accept-encoding": "gzip",
            "content-type": "application/x-www-form-urlencoded",
            "x-amocrm-requestid": "467183e9-1b39-4894-a2d9-2b9c5c6ca326",
            "x-forwarded-for": "169.150.216.79",
            "x-forwarded-host": "primary-production-0299.up.railway.app",
            "x-forwarded-proto": "https",
            "x-railway-edge": "railway/us-east4-eqdc4a",
            "x-railway-request-id": "9Cp4UGvOTpSW3SRiCx5-qw",
            "x-real-ip": "169.150.216.79",
            "x-request-start": "1756829092664"
          },
          "params": {},
          "query": {},
          "body": {
            "account[subdomain]": "propertamibotcom",
            "account[id]": "30050693",
            "account[_links][self]": "https://propertamibotcom.amocrm.com",
            "message[add][0][id]": "575a66f5-d051-4911-bd69-24c1f2fa4599",
            "message[add][0][chat_id]": "5b2cc9bd-b89c-405a-bb61-7cc1375af4cb",
            "message[add][0][talk_id]": "197277",
            "message[add][0][contact_id]": "24221945",
            "message[add][0][text]": "¡Hola! Quiero que se comuniquen conmigo por este inmueble en    alquiler que vi en  Urbania. https://urbania.pe/inmueble/clasificado/alclapin-alquiler-de-departamento-en-jesus-maria-lima-1-dormitorio-146729713",
            "message[add][0][created_at]": "1756829091",
            "message[add][0][element_type]": "2",
            "message[add][0][entity_type]": "lead",
            "message[add][0][element_id]": "21826463",
            "message[add][0][entity_id]": "21826463",
            "message[add][0][type]": "incoming",
            "message[add][0][author][id]": "756d339d-ed1b-4ecb-b531-3687e80f3e63",
            "message[add][0][author][type]": "external",
            "message[add][0][author][name]": "Sharon",
            "message[add][0][origin]": "waba"
          },
          "webhookUrl": "https://primary-production-0299.up.railway.app/webhook/rentas",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Lima",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "shared": [
    {
      "createdAt": "2025-09-11T20:57:01.310Z",
      "updatedAt": "2025-09-11T20:57:01.310Z",
      "role": "workflow:owner",
      "workflowId": "trMugJITVApnKSYP",
      "projectId": "tpSonpyzopDOYZNA"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-01T18:41:06.465Z",
      "updatedAt": "2025-08-01T18:41:06.465Z",
      "id": "94z6tcDoVU8DriEW",
      "name": "IA"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2025-09-11T22:45:07.356Z",
  "versionId": "d1c06100-facd-4b8e-81c9-aebbf30240bf"
}