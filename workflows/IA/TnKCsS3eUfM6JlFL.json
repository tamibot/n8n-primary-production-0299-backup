{
  "active": true,
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches": {
      "main": [
        [],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Data": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Process Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-20T16:40:21.555Z",
  "id": "TnKCsS3eUfM6JlFL",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Actualizacion URL Urbania",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        784,
        608
      ],
      "id": "52515b84-3067-4ef9-a9a5-40640121fbc8",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1904,
        512
      ],
      "id": "e29d245c-f9fd-4e49-b2de-e33ddaeb6f48",
      "name": "Split In Batches"
    },
    {
      "parameters": {
        "jsCode": "// --- Extracción de Datos de Urbania con Regex Específicos (Versión Completa) ---\n\n// 1. OBTENER DATOS INICIALES\nconst html = $json.body.html || '';\nconst codigo = $('Split In Batches').item.json.codigo || '';\nconst link = $('Split In Batches').item.json.link || ''; // Se incluye el link como solicitaste\n\n// 2. INICIALIZAR VARIABLES DE RESULTADO\nlet precio = null;\nlet direccion = null;\nlet distrito = null;\nlet dormitorios = null;\nlet banos = null;\nlet area = null;\nlet antiguedad = null;\nlet descripcion = 'Sin descripción disponible'; // Valor por defecto para la descripción\n\ntry {\n  // --- EXTRACCIÓN CON REGEX PARA CADA CAMPO ---\n\n  // PRECIO: Busca 'precioAlquiler': \"S/ 2,800\"\n  const matchPrecio = html.match(/'precioAlquiler':\\s*\"S\\/\\s*([\\d,]+)\"/);\n  if (matchPrecio && matchPrecio[1]) {\n    const precioStr = matchPrecio[1].replace(/,/g, '');\n    precio = parseInt(precioStr, 10);\n  }\n\n  // DIRECCIÓN: Busca \"streetAddress\": \"...\"\n  const matchDireccion = html.match(/\"streetAddress\"\\s*:\\s*\"([^\"]*)\"/);\n  if (matchDireccion && matchDireccion[1]) {\n    direccion = matchDireccion[1].trim();\n  }\n\n  // DISTRITO: Busca \"addressRegion\": \"...\"\n  const matchDistrito = html.match(/\"addressRegion\"\\s*:\\s*\"([^\"]*)\"/);\n  if (matchDistrito && matchDistrito[1]) {\n    distrito = matchDistrito[1].trim();\n  }\n\n  // DORMITORIOS: Busca \"numberOfBedrooms\": ...\n  const matchDormitorios = html.match(/\"numberOfBedrooms\"\\s*:\\s*(\\d+)/);\n  if (matchDormitorios && matchDormitorios[1]) {\n    dormitorios = parseInt(matchDormitorios[1], 10);\n  }\n\n  // BAÑOS: Busca \"numberOfBathroomsTotal\": ...\n  const matchBanos = html.match(/\"numberOfBathroomsTotal\"\\s*:\\s*(\\d+)/);\n  if (matchBanos && matchBanos[1]) {\n    banos = parseInt(matchBanos[1], 10);\n  }\n  \n  // ÁREA: Busca \"value\": ... en la sección floorSize\n  const matchArea = html.match(/\"floorSize\":\\s*\\{[\\s\\S]*?\"value\":\\s*(\\d+)/);\n  if (matchArea && matchArea[1]) {\n    area = parseInt(matchArea[1], 10);\n  }\n\n  // ANTIGÜEDAD: Busca \"label\":\"antigüedad\" y extrae su \"value\"\n  const matchAntiguedad = html.match(/\"label\":\"antigüedad\"[^}]*\"value\":\"([^\"]*)\"/);\n  if (matchAntiguedad && matchAntiguedad[1]) {\n    antiguedad = matchAntiguedad[1].includes('estrenar') ? 'A estrenar' : `${matchAntiguedad[1]} años`;\n  }\n  \n  // DESCRIPCIÓN: Se usa el regex que confirmaste que funciona.\n  const regexDesc = /'description':\\s*\"([^\"]*(?:\\\\.[^\"]*)*)\"/g;\n  const matchDesc = regexDesc.exec(html);\n  if (matchDesc && matchDesc[1]) {\n      // Limpiar el texto extraído para que sea legible\n      descripcion = matchDesc[1]\n          .replace(/\\\\\"/g, '\"')           // Corrige comillas escapadas\n          .replace(/<br\\s*\\/?>/gi, '\\n')  // Reemplaza <br> por saltos de línea\n          .trim();\n  }\n\n} catch (error) {\n  console.error(\"Ocurrió un error durante la extracción con regex:\", error);\n}\n\n// 3. DEVOLVER EL OBJETO FINAL CON TODOS LOS CAMPOS\nreturn [{\n  codigo: codigo,\n  link: link,\n  precio: precio,\n  direccion: direccion,\n  distrito: distrito,\n  dormitorios: dormitorios,\n  banos: banos,\n  area: area,\n  antiguedad: antiguedad,\n  descripcion: descripcion,\n  fecha_scraping: new Date().toISOString()\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2576,
        368
      ],
      "id": "05bc2ba1-31eb-4718-93cf-2679f1d89944",
      "name": "Process Data"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1y6nygnKw613yMbja3gbRjn0x4Rc19bWy8xvMgJ-ZMC4",
          "mode": "list",
          "cachedResultName": "Gestión Comercial Proper Rentas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1y6nygnKw613yMbja3gbRjn0x4Rc19bWy8xvMgJ-ZMC4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Base dptos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1y6nygnKw613yMbja3gbRjn0x4Rc19bWy8xvMgJ-ZMC4/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1232,
        512
      ],
      "id": "3558e17c-1ccd-4cf0-95e7-7a4705aecae8",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WQy7dRpZDtSa20hj",
          "name": "n8n - Agosto 25"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c5a366db-4407-41dc-9edb-6ff4e7cb0409",
              "name": "codigo",
              "value": "={{ $json[\"Codigo\"] }}",
              "type": "string"
            },
            {
              "id": "49fb6d11-be98-4779-88fc-a4f09640fc12",
              "name": "linkUrbania",
              "value": "={{ $json[\"Link Urbania\"] && $json[\"Link Urbania\"].trim() !== '' ? $json[\"Link Urbania\"] : 'sin link urbania' }}",
              "type": "string"
            },
            {
              "id": "b84e1d89-de02-4512-8c44-9abdd1b9b011",
              "name": "linkAdondevivir",
              "value": "={{ $json[\"Link Adondevivir\"] && $json[\"Link Adondevivir\"].trim() !== '' ? $json[\"Link Adondevivir\"] : 'sin link adondevivir' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1456,
        512
      ],
      "id": "fa6fdb3b-013e-4f8f-ac46-0c4d0d58ca51",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e33eae3-d24b-48ae-94ef-f1c918005512",
              "leftValue": "={{ $json.linkUrbania }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1680,
        512
      ],
      "id": "afa0231f-dec6-4433-967a-fc465671cdd4",
      "name": "Filter1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://18.216.121.43:3000/scrape",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{ $json.linkUrbania }}\"\n}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          },
          "timeout": 360000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2352,
        368
      ],
      "id": "87f25e8c-cb0d-47ca-855f-49e177b3ff6f",
      "name": "HTTP Request1",
      "retryOnFail": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "crm",
          "mode": "list",
          "cachedResultName": "crm"
        },
        "table": {
          "__rl": true,
          "value": "departamentos_urbania",
          "mode": "list",
          "cachedResultName": "departamentos_urbania"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "codigo": "={{ $json.codigo }}",
            "distrito": "={{ $json.distrito }}",
            "direccion": "={{ $json.direccion }}",
            "precio": "={{ $json.precio }}",
            "area": "={{ $json.area }}",
            "baños": "={{ $json.banos }}",
            "dormitorios": "={{ $json.dormitorios }}",
            "antiguedad": "={{ $json.antiguedad }}",
            "descripcion": "={{ $json.descripcion }}",
            "link_urbania": "={{ $('Filter1').item.json.linkUrbania }}",
            "mantenimiento": 0,
            "link_adondevivir": "={{ $('Filter1').item.json.linkAdondevivir }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "codigo",
              "displayName": "codigo",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "distrito",
              "displayName": "distrito",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "direccion",
              "displayName": "direccion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "precio",
              "displayName": "precio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "mantenimiento",
              "displayName": "mantenimiento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "area",
              "displayName": "area",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "baños",
              "displayName": "baños",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "dormitorios",
              "displayName": "dormitorios",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "antiguedad",
              "displayName": "antiguedad",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "descripcion",
              "displayName": "descripcion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "caracteristicas_generales",
              "displayName": "caracteristicas_generales",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "link_urbania",
              "displayName": "link_urbania",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "link_adondevivir",
              "displayName": "link_adondevivir",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2800,
        512
      ],
      "id": "99689c30-3e23-4a79-855a-7d738993b12f",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "value": "crm",
          "mode": "list",
          "cachedResultName": "crm"
        },
        "table": {
          "__rl": true,
          "value": "departamentos_urbania",
          "mode": "list",
          "cachedResultName": "departamentos_urbania"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1008,
        512
      ],
      "id": "3e55f6a4-5445-4efe-9f8e-312220303543",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "fuKiWlAN9ojbRM9W",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 23
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        784,
        416
      ],
      "id": "586f1c9a-cf17-479f-a33f-02842bda88d5",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "80c73a46-6548-45ca-9d72-e28fcac549bf",
              "leftValue": "={{ $json.linkUrbania }}",
              "rightValue": "sin link urbania",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2128,
        440
      ],
      "id": "b2893eec-8260-45e7-a781-d5de912bae04",
      "name": "If"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-20T16:40:21.555Z",
      "updatedAt": "2025-08-20T16:40:21.555Z",
      "role": "workflow:owner",
      "workflowId": "TnKCsS3eUfM6JlFL",
      "projectId": "tpSonpyzopDOYZNA"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-08-01T18:41:06.465Z",
      "updatedAt": "2025-08-01T18:41:06.465Z",
      "id": "94z6tcDoVU8DriEW",
      "name": "IA"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-09-05T17:36:27.129Z",
  "versionId": "10a83a27-1ecf-4058-8377-4ab75ed5cf28"
}